%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: mark-2.eps
%%Creator: Adobe Illustrator(R) 19.0
%%For: Marina
%%CreationDate: 2/25/18
%%BoundingBox: 0 0 758 560
%%HiResBoundingBox: 0 0 757.4621 560
%%CropBox: 0 0 757.4621 560
%%LanguageLevel: 3
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 19.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 19.0.0 x44 R agm 4.7731 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c067 79.157747, 2015/03/30-23:40:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Web</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 2015 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2018-02-25T11:17:29+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-02-25T11:17:29+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-02-25T11:17:29+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>192</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAwAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8AhmdW6h2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVRlu4I24s1X7Iu5+4Zi5tZix/Ud27Hp5z5BUS1&#xA;1W4/uohbof8AdkvX/gRX8c1Oo7YJ2gK8y7DF2d1kuOg6kB8N6CfArt/HMAdo5v5xco6LH3LDYa1A&#xA;PiVLlf8AING/EDMvD2vOP1epoy9nRP07LFuoi/pvWKXoY5BxP45uMGvxZNgaPcXXZdLOHMK2Zjju&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVA39+IaxR7ykbnw&#xA;rmr1+v8AD9Mfq+5zdLpeP1H6UVpcumafarcXMitdSjlxA5OAeg9q9c5mRJLu40AvfzbCCeFuzDty&#xA;YL+oHHhXxEzs9UtLqASq4QnZkYgEHwyJDMSBdcatYQxO3rxsygkIGBJIGw2xpTIJO+q6ZqaejeR/&#xA;V5P91zg1APzoMlRDDiB5rYWmilNrPRnA5Ryg1DoehBzpezdacg4JfUHS6zTcB4hyRGbVwXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqsmlWKJpG6KMrzZRjiZHkGeOBl&#xA;IAJHHHc3t6kcMZluJ3CxxKCSzMaBQBnH5chnIyPV30ICIAHR7l5J/JHRmtjL5nU3WoF/UaOGR1iV&#xA;a7ISvEtXqenhkYhkXpw8o+UmsUsJNGs3s4xSOEwRlV+VR198nTFVt/JvlCC3aCDRbFIJPtoLaKjf&#xA;63w7/ThoLaSXH5PfltLeLdvosaODUojypET7xq4T6KYOELaX+d/ye8p6/ZMbC2j0vU40pb3Fuojj&#xA;PEUVZY1FGXalQKj8MBiEgvnPUI9Q0q9/RuoxNDe6dK0UiHqFPVa9x3U+ByWny+HkEu5jmhxwMUwG&#xA;+dk8+3irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqC1b/eUf6w/jms&#xA;7W/uvi5mh/vPgnv5O3NnB54tluUVmnilitnb9iUjkGHuVVl+nOadw+kdMYC4I/mUgfryUUSTTJsU&#xA;RH9gYUKUv28UrMCvDv8AnI3RbCOXStZjAS9uOdtOB+2kYDIx915EV9x4ZGSQ84i/uk/1R+rOxxfS&#xA;Pc8/P6ivyxi7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqgtW/3l/wBk&#xA;P45rO1v7n4uZof7z4NeTi483aLwYqxvrYch7yqDnNO4fTF/5i0zQ3gmvmakrFY44xycmnUCo2FcT&#xA;IDmyESVx/MjQRv8AVb90pXmtueJFK9yMPihHhFkGheYdH1u1M+mziVUoJIzVXQnsyncfqyyMgeTC&#xA;USObeta3oujwifU7pbZHNEBqWYj+VFBY/QMZSA5rGJPJj4/Mrys6s8X1qSNesiwOV+/K/Fiz8IvJ&#xA;/wA/vMNhq0ugjT5xPbLDPNyFRvI6pRlIBBHpd8TIHkiiObCIwRGoPUAfqztMYqI9zzszuV2TYuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ks18peXItR8uSXMenpqU5vDbX&#xA;MDoHPotErIUP2ozy5fGpB6b5ou1py4hH+GnadnxjRPVjeieXv0b+ZmlWUTs8H1hJ4GYUkCLVisi9&#xA;nQoVb5VG1M0pDsKfQzQ6j9XeXT1jFyQUjmlNAncno36j8j0whSxOx0n80JfNs8curta6dFbsfrsv&#xA;Ce1mn9QlPQgURuimPiDyLUNT7ZOvNhxeTNPLmiGymlv7mOKLVb1Qt/8AVq+i7IzEOoahqQdzQV8M&#xA;EY0bZSlYpLfMXkWPWNaOoTXagkBEWdS6Qoq7BFGx5Pua+OROME2UjIQKDG9E0L8xovL7XEjPBqlr&#xA;KiHTZJ0eO5j5kSvD6fpRRAJx4iTlyowJBIYS4dmPFuxv8yvIUL3Xl6S0gYQS3c8F6i0LDlSfip/1&#xA;VkC1ORjGmUjbDvM9jBY65c2sEXoRJ6ZEPIvxLRqxXkdzQnOu0mQzxiR5uh1EBGZA5JXmQ0uxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ks6/KfzTJpOrzWDn/Rb9Cd+0sSll&#xA;I/1hVad9s1vaeHihxdYuboZ1Ph73oGqeSoD57tPNMDgwC3l5LWtZ5AFDL/kmNmrnOSduGYaX/vO3&#xA;+sf1DDFjJEiKMNy47+J3woVY/tjCrpR8ZxVS9JPDbw7fd0wKkWuPS34qA1bsGpFaUjep/hiGYD54&#xA;1/UG1DWby8JBEsh4EdOC/Cn/AAoGdbgx8EBF5/LPikSgMua3Yq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FV0M0sMyTRMUljYPG67FWU1BHyOAgEUUg1u948n+c9K13Rbe2Vh&#xA;DqluK3Fpv0GxkSu3Ekjbt0zmNboziP8ARd1p9QMnP6mV6VJu8f8Ash+o5hRciSYZJik1z5w0iwvv&#xA;qt56kE1WC814qwBpyViQCDg4qZCNqUfm2zv9bgtLDnMvBvXKrULWhDMRULSnfxwcVleGgnk0gjiZ&#xA;z+yPx7ZIsXnX5heZF07y/IkUgF5K7RxgnerKtWAH8qk7+OZnZ+DxJ78g06rLwRPe8Rzp3SOxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ksy/KueO3168uJaiKGxmkcg&#xA;VPFXQnNZ2r/dfFzND/efB7VpsqG4idWDJJ0YGoIYbEHOcHN3BTHV5NTtbf1dPsxfsCecHqiJ6U/Y&#xA;5KVY+xIyZYxAJ3YHf+cLvUw1tfeUri4t42/eQrWeVSNqj0VcqchxHucr8uAOaY+WPMNwJG0+38rX&#xA;Vmv21RAkZCnblJ65g++pwg+TDJhAF2ynVKx6d6svwcaNIta02qRX2wy5NAfOnne+a71cMT+yXK9a&#xA;M7E/8RpnQ9lQrFfeXU66Vz+DH82bhuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2Ksy/K1BLrV9bE0+s2TQ16/anhrms7W/uh/W/QXN0P1n3PQvLN3Ppt9LoF6eM9q3K&#xA;zJP2o614gnrx7e2c4XbvSY3DoGHfLGtAX1gJJhKttDOx6mRELD6TvgIZxmR1VdOtDAjfuo4Ax/uo&#xA;lVR8zxwhEpWxn8zdeh07RDCWo01S9Ovpr1/4IkLk8eM5JCI6sJzEQSXzvd3Ul1cyXEn2pDWngOgH&#xA;0DOrxYxCIiOQdFOZkSSpZYxdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVehflVpF6l1+lZI+FpK6wQuf22VwW4+y9/fNN2tlFCHXm7HQwO8uj07zr5XGrWi3VvWPUb&#xA;X4oZE2cgb0B8fDNKQ7EMf0D8ybrTPTs/MMReEURNQiFdhsPUUd/lgBUhnlr5l8v3UKzQajbvGwqD&#xA;6igj5gkEfTkrYpbrnn7y/ptszR3K3VyRSKCE8yzdtxUYkpp4t551W/vkW5v3/wBKu3qIh0jhTcIB&#xA;8yDmz7JhczLuH3uFrpVEDvYdm/dW7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FVSC3nuJBFChkkPRVFTkZSERZSATyZRo3k22ea3/AEtcGGF5FFwYwG4R9zUmlfft136Z&#xA;rdRrTXocvFpx/E9zu7C1ht9NhtI1jtreaJYkQAKE9qfLNDKRJs83aRAAoJtgSxHzR5O+stJd2Khm&#xA;epntjSjHuVrtU+GAhILzyfy/ZiY1R4JFNGRSVIPyPTAlWttPtbc8o0+M9XY8m+84qxbzk8sl7GAp&#xA;MMSUL0PEOxqRXp0pnQdlACB7yXVa4ky9zHs2rguxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxVwBJAAqTsAMVT3TPKl3cUkuibeH+X/AHYfo7fTmHl1kY7R3LfDATz2ZVZWFpZR&#xA;enbxhB3P7R+Z75rMmSUzZcuMBHkiMgyTDy75z/Ql5BpWrv8A7hpnU2N2+/1ZwamJz/vv+U/s/wCr&#xA;0oy4r3DdjyVsXqqsrqHQhlYAqwNQQehBzFb28VS/VNA0zUxW5ipKNhMnwuPp7/Tirz/zTpdtolyV&#xA;E/OH0/VJb7SqK9abHpgpNsJ8rXj3r6jJJukkocIdwOQO33AZsICg4cjZRl55b0q5qRH6Ln9qL4f+&#xA;F+z+GZePVTj1tolhiUhvfKN/DVrdhcJ4fZf7jt+OZmPWxPPZx5acjlukksMsLlJUaNx1VgQfuOZg&#xA;kDuGkiluFDsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVTXTPLl/e0cj0ID/uxxuR/kr1&#xA;OY2XVRhtzLbDCZMr07RLCwAMScpe8z7t9Hh9Ga3LqJT58nLhiEUflDY7FXYqh7+xhvrSS2mHwuNj&#xA;3U9iPliqW+WvzD8x+Tp/0ZeJ9e01D8EDkgqvjDJvQf5J2+RyqeIFsjkIek2P5y+RbiHnPdS2T94p&#xA;oZGb74hKv45QcMm0ZA1d/nN5FgBMVzNdHwihcf8AJ0R4jDJTkDyTzr55n8w3szRIYLSRhRW+2VX7&#xA;INNh/XLceKty1zyXsmflOwe00sPIKSXDeoQeoWlF/rl7WnWKHYqo3Vna3UfC4iWRe3Ibj5HqMnCc&#xA;omwUSiDzYrrnlk2kbXNqS8C7vGd2UeNe4zZafV8RqXNxMuCtwkGZrjuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxVlfl/y2iIt3epykO8cLdFHiw8fbNZqdVfpi5eLD1LJMwHJdirsVdirsVdiqjd&#xA;Wdrdx+ncxLKngw6fI9RiqQ3fkmykJa2meH/JYc1+jofxwJQJ8j33La4iK+J5V+6mNKmOmeT7W2kW&#xA;a6k+sOu4SlEB9xvXCrIcUOxV2KuxVTuCPT4kVDsqkHuGYAj7sbpWBazp5sL+SEf3Z+KI+Knp93TN&#xA;5gy8cbddkhwmkDlzB2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kp75W0gXM5u5lrBCfgB6M/8AZmFr&#xA;M3COEcy5GDHZssyzVOY7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqh7hh9Ytowdy5Yj2CN/GmKU&#xA;p81Wi3FqzoP31oBIfeNyQf8AiNczNHk4ZV3uPqIWL7mHZtnCdirsVdirsVdirsVdirsVdirsVdir&#xA;sVXwxPNKkUYq8jBVHuTTBKQAspAs09FsbSOztI7eP7MYoT4nufpOaHJMykSXZRjQpXyCXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FUBcLFFqa3TD4vq0gJ9o2Vv+NjgStNJNamgYBojaKHXxq7Cn3Y&#xA;QaKCGD3ts1rdy27bmJitfEDofpGb/HPiiC6yUaNKOTQ7FXYq7FXYq7FXYq7FXYq7FXYq7FU68pWv&#xA;q6p6pHwwIW/2R+EfrOYmtnUK72/TxuTNc1DmuxV2KqYuYDObfmPXC8zH34nauKVTFDsVdirsVdir&#xA;sVdirsVdirsVdirsVSPzLO0TWoXrMJIR/s+IwFKJszz13UW7RJDGD8wWOKse8124S/MyiiuSrf6w&#xA;AY/g4za6GdxI7nC1Md7STM5x3Yq7FXYq7FXYq7FXYq7FXYq7FXYqy7yZBxs55+8jhfoQV/42zV66&#xA;XqAczTDYlkOYLkOxV2Ksf8xObLU9P1EbKpMUp/yetPuLYClH3l8n1rTgjVWSd1P+xRkI/wCCOKpj&#xA;hQ7FXYq7FXYq7FXYq7FXYq7FXYqkfmL0heaa8v8AdxPJK3yjUP8A8a4Clryo0k0F3eSfbuJifoA/&#xA;txClDeZIvUhvKbmCWKX5B04H/iIzM0UqnXe0agXFi2bdwXYq7FXYq7FXYq7FXYq7FXYq7FXYqzzy&#xA;3F6ejW/i/Jz9LGn4ZpdVK8hc/CKiEzzHbXYq7FUo81W3r6NKQKtCVkH0Gh/AnAUhjmg3E91qllCx&#xA;qkLvIPpQV/FfxwBLOskxdirsVdirsVdirsVdirsVdirTMFBZjQDck+GKsW82zfWpLCG2PqGUMyce&#xA;4egX798iUhPrO3i0zT4YBuFKoT4vIwFf+CbCqDng+s6hqNsKUltowf8AWq/HJ45cMgWMxYphBBBI&#xA;OxHUZ0DrHYq7FXYq7FXYq7FXYq7FXYq7FXYq9H06P09Pto/5YkH/AAozQZTcifN2UBQCIyDJ2Kux&#xA;VK01O3vJ7rS519Cf4owjGvNSPtL9G9MCUi8lW/K9nnI2ij4/S5/opwBSzHJIdirsVdirsVdirsVd&#xA;irsVdiqC1uT09Iu2rT90y1/1hT+OApY35OtPXvHuJCWFooWJT0BevT8fvwBSnF/eetrllp0Z2jYz&#xA;z/NVJQfx+7CqrpjepquqTdg8cQ/55rv+JxVivmC0+rarOoFEkPqJ8n3/AF1zeaafFAOuzRqSXZe1&#xA;vRf+VC/mD/vm2/5Hr/TMH+UMXm3/AJaTv+VC/mD/AL5tv+R6/wBMf5Qxea/lpO/5UL+YP++bb/ke&#xA;v9Mf5Qxea/lpO/5UL+YP++bb/kev9Mf5Qxea/lpO/wCVC/mD/vm2/wCR6/0x/lDF5r+Wk7/lQv5g&#xA;/wC+bb/kev8ATH+UMXmv5aTv+VC/mD/vm2/5Hr/TH+UMXmv5aTv+VC/mD/vm2/5Hr/TH+UMXmv5a&#xA;Tv8AlQv5g/75tv8Akev9Mf5Qxea/lpO/5UL+YP8Avm2/5Hr/AEx/lDF5r+WkzBfy283AACzWgFB+&#xA;9i/5qzVcQ73Nd/yrjzf/AMsa/wDI2L/mrHiHeu7v+Vceb/8AljX/AJGxf81Y8Q713d/yrjzf/wAs&#xA;a/8AI2L/AJqx4h3rukuv/k150v5Irm0to4rqPYs00a1A3BqCTUHASO9O6p5d/KPzrp9rKtxaIZpX&#xA;5ErNERSgp+188RId6lNv+Vceb/8AljX/AJGxf81YeId6N3f8q483/wDLGv8AyNi/5qx4h3ru7/lX&#xA;Hm//AJY1/wCRsX/NWPEO9d3f8q483/8ALGv/ACNi/wCaseId67u/5Vx5v/5Y1/5Gxf8ANWPEO9d3&#xA;f8q483/8sa/8jYv+aseId67u/wCVceb/APljX/kbF/zVjxDvXd3/ACrjzf8A8sa/8jYv+aseId67&#xA;u/5Vx5v/AOWNf+RsX/NWPEO9d3f8q483/wDLGv8AyNi/5qx4h3rul2vflX55vdOa2trOPk7Ly5TR&#xA;AcQa/wA3iBgMh3pSvRfyi/MvS3lK2EEqSruhuYxRh0PU+OASHerVj+Uf5m2l1Pd/ULaa6m/3Y9wl&#xA;BU1OwIx4h3qmuiflV54tYJvrVnH688zzOUmiI+Kn+VhEh3qh/MH5N+c9SMLwWsSSx1Vi80YBU7jo&#xA;W6HMzTaqOOwTs0ZsRlySj/lQv5g/75tv+R6/0zK/lDF5tH5aT//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:0e001b53-d150-4420-aa45-ab8a4a33daa6</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:0e001b53-d150-4420-aa45-ab8a4a33daa6</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:2e8aeaad-eee2-40ca-ba39-fe63f962aa13</stRef:instanceID>
            <stRef:documentID>xmp.did:2e8aeaad-eee2-40ca-ba39-fe63f962aa13</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2e8aeaad-eee2-40ca-ba39-fe63f962aa13</stEvt:instanceID>
                  <stEvt:when>2018-02-25T11:10:50+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0e001b53-d150-4420-aa45-ab8a4a33daa6</stEvt:instanceID>
                  <stEvt:when>2018-02-25T11:17:29+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>757.462127</stDim:w>
            <stDim:h>560.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=63 G=169 B=245</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>63</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>245</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=122 G=201 B=67</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>122</xmpG:red>
                           <xmpG:green>201</xmpG:green>
                           <xmpG:blue>67</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=29 B=37</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>29</xmpG:green>
                           <xmpG:blue>37</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=123 B=172</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>123</xmpG:green>
                           <xmpG:blue>172</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=189 G=204 B=212</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>189</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>212</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -560 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 560 li
757.462 560 li
757.462 0 li
cp
clp
757.462 560 mo
0 560 li
0 0 li
757.462 0 li
757.462 560 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.235294 .34902 .619608 rgb
f
724.258 559.75 mo
722.861 556.216 710.181 523.648 701.057 482.75 cv
691.39 439.417 665.724 382.417 652.057 369.924 cv
638.39 357.432 556.724 329.75 556.724 329.75 cv
556.724 329.75 469.724 309.417 449.39 310.083 cv
429.057 310.75 419.057 315.738 419.057 315.738 cv
404.057 325.417 li
404.057 325.417 388.724 333.083 386.057 335.75 cv
383.39 338.417 332.057 366.083 314.057 376.083 cv
296.057 386.083 279.057 404.083 261.057 439.75 cv
243.703 474.136 237.195 554.055 236.749 559.75 cv
724.258 559.75 li
.572549 .580392 .643137 rgb
f
418.378 321.417 mo
419.793 321.417 438.661 301.605 440.548 296.888 cv
440.548 296.888 443.39 235.083 442.39 232.75 cv
442.39 232.75 438.724 232.75 436.39 231.083 cv
434.057 229.417 425.057 217.083 422.724 212.083 cv
420.39 207.083 419.699 203.083 418.378 200.417 cv
417.057 197.75 413.724 194.083 413.057 189.083 cv
412.39 184.083 410.724 175.417 413.057 172.75 cv
415.39 170.083 419.057 168.083 419.057 168.083 cv
419.057 168.083 422.735 167.75 427.229 172.417 cv
431.724 177.083 436.724 189.083 436.724 189.083 cv
436.724 189.083 443.817 152.75 442.604 149.75 cv
441.39 146.75 431.057 124.417 435.057 119.083 cv
439.057 113.75 464.39 90.75 479.724 88.7501 cv
495.057 86.7499 534.39 82.4167 545.39 84.4166 cv
556.39 86.4168 585.39 114.417 586.724 121.083 cv
588.057 127.75 586.724 154.083 586.724 154.083 cv
585.057 183.417 li
585.057 183.417 589.39 171.75 592.057 172.083 cv
594.724 172.417 596.39 171.083 596.724 179.083 cv
596.877 182.77 596.889 186.597 596.858 189.654 cv
596.826 192.756 595.924 195.825 594.055 198.3 cv
593.558 198.958 593.161 199.688 593.057 200.417 cv
592.839 201.943 592.193 206.604 591.773 209.648 cv
591.531 211.393 590.998 213.077 590.183 214.638 cv
589.385 216.165 588.422 218.14 588.057 219.417 cv
587.39 221.75 585.539 222.787 585.057 224.417 cv
583.807 228.646 582.724 232.417 581.724 233.417 cv
580.724 234.417 578.057 235.417 578.057 235.417 cv
578.057 235.417 575.057 259.083 572.39 263.417 cv
569.724 267.75 560.724 283.083 560.724 283.083 cv
560.724 283.083 560.057 286.417 558.39 293.083 cv
556.724 299.75 550.39 328.083 549.39 334.083 cv
548.39 340.083 551.057 354.083 542.39 361.083 cv
533.724 368.083 481.057 389.417 448.057 351.417 cv
418.378 321.417 li
.933333 .870588 .835294 rgb
f
579.202 234.937 mo
579.939 234.603 580.869 234.131 581.473 233.641 cv
580.753 234.341 579.942 234.661 579.202 234.937 cv
582.318 232.534 mo
583.002 231.219 583.729 228.892 584.524 226.219 cv
584.516 226.244 584.509 226.27 584.501 226.296 cv
583.855 228.472 583.214 230.961 582.318 232.534 cv
584.891 224.98 mo
584.946 224.793 585.001 224.605 585.057 224.417 cv
585.128 224.177 585.228 223.951 585.35 223.731 cv
585.181 224.092 585.034 224.52 584.891 224.98 cv
586.032 222.747 mo
586.068 222.7 586.106 222.654 586.143 222.607 cv
586.107 222.652 586.072 222.696 586.038 222.738 cv
586.036 222.741 586.034 222.744 586.032 222.747 cv
588.057 219.417 mo
588.057 219.417 li
588.219 218.849 588.5 218.144 588.831 217.401 cv
588.508 218.136 588.247 218.809 588.057 219.417 cv
588.057 219.417 li
589.797 215.388 mo
589.907 215.17 590.017 214.957 590.124 214.752 cv
590.013 214.97 589.903 215.182 589.797 215.388 cv
590.977 212.844 mo
591.108 212.486 591.226 212.124 591.33 211.757 cv
591.223 212.142 591.104 212.503 590.977 212.844 cv
591.733 209.918 mo
591.747 209.828 591.76 209.738 591.773 209.648 cv
591.95 208.367 592.167 206.799 592.375 205.298 cv
592.314 205.751 592.259 206.169 592.213 206.531 cv
592.063 207.73 591.916 208.877 591.733 209.918 cv
592.569 203.903 mo
592.778 202.398 592.96 201.096 593.057 200.417 cv
593.08 200.258 593.116 200.1 593.164 199.942 cv
593.164 199.943 593.164 199.945 593.164 199.947 cv
592.979 201.093 592.761 202.55 592.569 203.903 cv
593.433 199.283 mo
593.604 198.945 593.818 198.614 594.055 198.3 cv
594.822 197.285 595.425 196.17 595.873 194.994 cv
595.581 195.771 595.157 196.829 594.62 197.645 cv
594.199 198.284 593.726 198.799 593.433 199.283 cv
596.78 191.091 mo
596.827 190.614 596.853 190.134 596.858 189.654 cv
596.889 186.597 596.877 182.77 596.724 179.083 cv
596.624 176.696 596.406 175.14 596.078 174.122 cv
598.305 176.431 596.858 189.654 596.858 189.654 cv
596.858 189.654 596.871 190.214 596.78 191.091 cv
594.073 172.215 mo
593.486 172.139 592.812 172.178 592.057 172.083 cv
592.02 172.079 591.982 172.076 591.943 172.076 cv
591.882 172.076 591.82 172.082 591.758 172.094 cv
592.15 171.826 592.492 171.694 592.833 171.694 cv
593.226 171.694 593.615 171.87 594.073 172.215 cv
.482353 .470588 .6 rgb
f
577.236 235.705 mo
576.939 235.705 576.825 235.486 576.825 235.105 cv
577.032 234.082 577.291 232.853 577.582 231.491 cv
577.595 231.434 577.607 231.376 577.619 231.318 cv
577.624 231.297 577.628 231.276 577.633 231.255 cv
577.889 230.057 578.169 228.761 578.459 227.416 cv
578.752 226.095 579.032 224.795 579.3 223.516 cv
580.493 217.951 581.665 212.326 582.006 209.7 cv
581.557 213.167 li
583.842 212.187 585.497 210.154 586.006 207.72 cv
586.55 205.122 587.076 201.817 586.807 199.667 cv
586.618 198.158 586.145 197.645 585.602 197.645 cv
584.807 197.645 583.862 198.745 583.441 199.428 cv
583.783 196.866 584.055 194.566 584.272 192.565 cv
590.153 181.394 594.214 181.166 594.536 181.166 cv
594.55 181.166 594.557 181.167 594.557 181.167 cv
594.557 178.486 li
594.557 178.486 594.322 178.426 593.953 178.426 cv
593.472 178.426 592.765 178.528 592.057 178.998 cv
590.873 179.786 584.901 191.34 584.272 192.562 cv
584.419 191.2 584.541 189.976 584.64 188.899 cv
589.388 174.36 li
589.388 174.36 li
590.415 173.263 591.146 172.512 591.758 172.094 cv
591.82 172.082 591.882 172.076 591.943 172.076 cv
591.982 172.076 592.02 172.079 592.057 172.083 cv
592.812 172.178 593.486 172.139 594.073 172.215 cv
594.609 172.62 595.238 173.257 596.074 174.119 cv
596.076 174.12 596.077 174.121 596.078 174.122 cv
596.406 175.14 596.624 176.696 596.724 179.083 cv
596.877 182.77 596.889 186.597 596.858 189.654 cv
596.853 190.134 596.827 190.614 596.78 191.091 cv
596.677 192.084 596.439 193.481 595.897 194.93 cv
595.889 194.951 595.881 194.973 595.873 194.994 cv
595.425 196.17 594.822 197.285 594.055 198.3 cv
593.818 198.614 593.604 198.945 593.433 199.283 cv
593.298 199.506 593.201 199.723 593.164 199.942 cv
593.116 200.1 593.08 200.258 593.057 200.417 cv
592.96 201.096 592.778 202.398 592.569 203.903 cv
592.5 204.387 592.434 204.859 592.375 205.298 cv
592.167 206.799 591.95 208.367 591.773 209.648 cv
591.76 209.738 591.747 209.828 591.733 209.918 cv
591.618 210.573 591.488 211.186 591.334 211.742 cv
591.333 211.747 591.331 211.752 591.33 211.757 cv
591.226 212.124 591.108 212.486 590.977 212.844 cv
590.713 213.554 590.415 214.177 590.124 214.752 cv
590.017 214.957 589.907 215.17 589.797 215.388 cv
589.681 215.613 589.569 215.831 589.463 216.047 cv
589.232 216.519 589.021 216.971 588.831 217.401 cv
588.5 218.144 588.219 218.849 588.057 219.417 cv
588.057 219.417 li
587.673 220.649 586.777 221.811 586.143 222.607 cv
586.106 222.654 586.068 222.7 586.032 222.747 cv
585.864 222.955 585.61 223.203 585.401 223.625 cv
585.384 223.66 585.367 223.695 585.35 223.731 cv
585.228 223.951 585.128 224.177 585.057 224.417 cv
585.001 224.605 584.946 224.793 584.891 224.98 cv
584.768 225.376 584.649 225.796 584.524 226.219 cv
583.729 228.892 583.002 231.219 582.318 232.534 cv
582.318 232.535 582.318 232.535 582.317 232.535 cv
582.06 232.987 581.775 233.347 581.473 233.641 cv
580.869 234.131 579.939 234.603 579.202 234.937 cv
578.788 235.091 578.397 235.231 578.057 235.417 cv
578.057 235.417 li
578.057 235.417 li
577.695 235.614 577.427 235.705 577.236 235.705 cv
582.009 209.682 mo
582.081 209.126 582.147 208.497 582.208 207.807 cv
582.29 207.298 582.37 206.793 582.447 206.297 cv
582.009 209.682 li
.796078 .705882 .698039 rgb
f
558.132 277.889 mo
558.132 277.889 558.132 277.889 558.132 277.889 cv
558.796 275.321 559.276 270.666 559.622 265.521 cv
560.237 264.42 560.554 263.662 560.486 263.358 cv
560.057 261.417 560.495 249.417 560.495 249.417 cv
560.495 249.417 560.439 249.424 560.328 249.439 cv
560.454 244.748 560.486 241.427 560.486 241.427 cv
560.486 241.427 571.057 214.917 572.557 206.942 cv
574.057 198.966 570.557 185.917 570.557 185.917 cv
570.557 185.917 568.307 182.667 567.934 178.916 cv
567.561 175.165 564.307 174.062 561.811 172.202 cv
559.531 170.504 565.364 163.156 567.735 163.156 cv
567.787 163.156 567.837 163.16 567.886 163.167 cv
568.307 163.367 li
568.307 163.367 568.307 163.367 568.307 163.367 cv
573.557 168.317 578.891 189.356 578.909 206.942 cv
578.909 206.942 li
578.344 213.713 li
577.779 217.847 576.817 222.878 575.575 228.239 cv
573.117 237.931 li
573.083 238.054 573.049 238.176 573.015 238.298 cv
573.015 238.298 li
572.741 239.166 571.15 244.19 569.488 249.416 cv
569.487 249.418 569.487 249.419 569.486 249.421 cv
567.31 256.2 565.051 262.423 563.119 267.37 cv
561.589 270.705 559.659 274.735 558.132 277.889 cv
.862745 .772549 .713725 rgb
f
442.554 234.234 mo
442.486 233.743 442.418 233.247 442.35 232.75 cv
442.376 232.75 442.39 232.75 442.39 232.75 cv
442.466 232.925 442.519 233.438 442.554 234.234 cv
.494118 .494118 .6 rgb
f
476.339 289.97 mo
474.161 288.485 472.183 287.067 470.546 285.805 cv
468.546 283.568 466.242 280.978 463.869 278.288 cv
458.54 270.145 447.026 252.903 446.809 252.903 cv
446.805 252.903 446.805 252.907 446.807 252.917 cv
446.807 252.917 li
446.807 252.917 li
446.807 252.917 li
446.807 252.917 446.594 254.083 446.238 256.075 cv
445.255 252.427 443.906 244.017 442.554 234.234 cv
442.519 233.438 442.466 232.925 442.39 232.75 cv
442.39 232.75 442.376 232.75 442.35 232.75 cv
441.069 223.359 439.803 212.894 438.857 204.228 cv
440.585 202.417 li
440.585 202.417 443.39 192.417 444.39 185.917 cv
445.39 179.417 446.39 157.417 446.794 151.75 cv
447.198 146.083 441.724 133.083 440.585 127.417 cv
439.446 121.75 448.724 114.75 450.057 111.083 cv
450.587 109.626 451.011 109.222 451.477 109.222 cv
451.767 109.222 452.074 109.379 452.432 109.536 cv
452.789 109.694 453.199 109.851 453.695 109.851 cv
453.91 109.851 454.141 109.821 454.39 109.75 cv
456.724 109.083 459.724 101.083 460.428 101.083 cv
460.689 101.083 461.525 101.038 462.565 101.031 cv
462.688 106.239 463.307 127.167 463.307 127.167 cv
467.807 145.667 li
466.811 157.712 li
466.759 157.718 466.756 157.733 466.807 157.757 cv
462.472 161.393 li
467.807 163.917 li
462.807 174.917 li
466.057 177.792 li
466.057 177.792 478.861 170.691 484.432 169.974 cv
484.732 169.935 485.056 169.917 485.402 169.917 cv
491.505 169.917 504.364 175.57 504.364 175.57 cv
501.307 180.417 li
501.307 180.417 498.276 178.648 494.136 176.417 cv
491.469 174.979 486.291 174.266 482.811 174.266 cv
480.889 174.266 479.484 174.483 479.307 174.917 cv
478.822 176.102 465.786 184.687 464.27 184.687 cv
464.228 184.687 464.195 184.68 464.171 184.667 cv
463.285 184.167 460.428 179.417 460.428 179.417 cv
457.785 184.917 li
457.785 184.917 458.057 198.667 457.807 202.667 cv
457.557 206.667 459.557 219.167 460.428 222.667 cv
461.3 226.167 465.557 238.167 466.057 242.417 cv
466.479 246.005 474.005 279.593 476.339 289.97 cv
.862745 .772549 .713725 rgb
f
527.624 172.917 mo
533.557 178.167 li
533.557 178.167 552.557 166.417 556.057 163.667 cv
559.557 160.917 527.691 166.417 527.624 172.917 cv
cp
.784314 .658824 .580392 rgb
f
562.057 182.667 mo
561.307 182.917 547.296 185.667 538.801 182.667 cv
535.057 181.167 li
535.057 181.167 543.571 172.743 548.307 172.917 cv
553.043 173.09 560.924 175.805 561.741 178.486 cv
562.557 181.167 562.057 182.667 562.057 182.667 cv
cp
1 1 1 rgb
f
470.557 181.167 mo
471.307 180.417 478.557 186.167 488.057 184.417 cv
497.557 182.667 501.307 180.417 501.307 180.417 cv
501.307 180.417 485.214 169.004 480.656 173.289 cv
476.097 177.574 470.557 181.167 470.557 181.167 cv
cp
f
519.805 302.993 mo
514.882 302.993 509.349 301.919 502.807 300.75 cv
487.89 298.083 476.134 269.908 475.39 268.417 cv
472.531 262.679 472.057 244.083 472.057 244.083 cv
480.417 250.537 498.542 252.344 516.22 252.344 cv
537.572 252.344 558.272 249.708 560.328 249.439 cv
560.203 254.085 559.988 260.077 559.622 265.521 cv
556.305 271.447 544.288 287.303 536.557 295.667 cv
531.41 301.234 526.107 302.993 519.805 302.993 cv
502.785 266.161 mo
502.305 266.161 510.072 277.173 511.555 277.667 cv
512.056 277.833 513.945 277.889 516.242 277.889 cv
520.835 277.889 527.057 277.667 527.057 277.667 cv
527.057 277.667 534.807 268.167 535.057 266.167 cv
535.057 266.167 527.056 268.722 517.501 268.722 cv
512.723 268.722 507.558 268.084 502.807 266.167 cv
502.798 266.163 502.791 266.161 502.785 266.161 cv
.956863 .898039 .87451 rgb
f
559.622 265.521 mo
559.988 260.077 560.203 254.085 560.328 249.439 cv
560.439 249.424 560.495 249.417 560.495 249.417 cv
560.495 249.417 560.057 261.417 560.486 263.358 cv
560.554 263.662 560.237 264.42 559.622 265.521 cv
.937255 .866667 .835294 rgb
f
489.59 178.486 mo
489.59 181.956 486.777 184.769 483.307 184.769 cv
479.837 184.769 477.024 181.956 477.024 178.486 cv
477.024 175.016 479.837 172.202 483.307 172.202 cv
486.777 172.202 489.59 175.016 489.59 178.486 cv
cp
.427451 .392157 .345098 rgb
f
555.197 178.345 mo
555.197 181.5 552.64 184.057 549.485 184.057 cv
546.33 184.057 543.772 181.5 543.772 178.345 cv
543.772 175.19 546.33 172.632 549.485 172.632 cv
552.64 172.632 555.197 175.19 555.197 178.345 cv
cp
f
466.057 181.167 mo
466.057 181.167 471.807 172.667 477.807 171.917 cv
483.807 171.167 490.557 170.417 494.807 173.667 cv
499.057 176.917 501.307 177.667 501.307 177.667 cv
502.807 176.417 li
502.807 176.417 489.307 168.667 481.557 170.167 cv
473.807 171.667 469.557 172.167 466.057 181.167 cv
cp
.533333 .411765 .356863 rgb
f
533.557 178.167 mo
533.557 178.167 545.807 169.531 549.307 169.974 cv
552.807 170.417 562.057 170.708 564.307 174.062 cv
566.557 177.417 568.307 181.167 568.307 181.167 cv
568.307 181.167 567.557 171.031 560.057 169.974 cv
552.557 168.917 546.557 167.167 533.557 178.167 cv
cp
f
492.376 252.064 mo
492.376 252.064 499.67 259.167 504.364 261.167 cv
509.057 263.167 520.966 263.38 525.307 262.917 cv
531.557 262.25 536.347 256.153 538.979 252.919 cv
538.979 252.919 494.297 252.44 492.376 252.064 cv
cp
.796078 .541176 .537255 rgb
f
490.96 250.347 mo
490.96 250.347 509.557 247.417 512.057 247.667 cv
514.557 247.917 519.807 250.347 519.807 250.347 cv
519.807 250.347 524.807 247.136 527.057 247.652 cv
529.307 248.167 538.121 253.231 540.157 252.919 cv
542.193 252.607 506.613 258.778 490.96 250.347 cv
cp
.698039 .439216 .423529 rgb
f
519.355 241.427 mo
518.081 241.427 516.785 241.171 515.558 240.417 cv
512.307 238.417 509.307 235.827 507.057 234.747 cv
504.807 233.667 501.304 233.667 501.305 229.917 cv
501.306 228.93 501.518 228.566 501.83 228.566 cv
502.704 228.566 504.364 231.418 504.364 231.418 cv
509.557 230.167 li
522.057 232.417 li
535.057 227.417 li
535.057 227.417 541.546 228.417 538.801 232.167 cv
537.771 233.574 527.557 239.917 525.057 240.417 cv
523.5 240.728 521.459 241.427 519.355 241.427 cv
.552941 .454902 .411765 rgb
f
556.889 194.466 mo
556.614 194.466 556.343 194.446 556.13 194.4 cv
555.542 194.285 555.102 194.115 554.6 193.948 cv
553.623 193.611 552.647 193.249 551.672 192.882 cv
549.73 192.126 547.8 191.348 546.009 190.574 cv
544.214 189.809 542.563 189.036 541.146 188.38 cv
539.729 187.723 538.576 187.112 537.772 186.681 cv
537.367 186.475 537.06 186.263 536.853 186.143 cv
536.66 185.995 536.557 185.917 536.557 185.917 cv
536.557 185.917 536.671 185.98 536.885 186.1 cv
537.109 186.194 537.437 186.331 537.855 186.506 cv
538.69 186.862 539.918 187.293 541.366 187.865 cv
544.274 188.979 548.152 190.464 552.029 191.949 cv
552.996 192.322 553.964 192.696 554.918 193.036 cv
555.384 193.197 555.897 193.39 556.289 193.483 cv
556.504 193.529 556.71 193.561 556.886 193.561 cv
556.917 193.561 556.947 193.56 556.976 193.558 cv
557.023 193.561 557.072 193.563 557.123 193.563 cv
557.284 193.563 557.459 193.548 557.636 193.529 cv
559.479 193.315 561.216 192.708 562.647 192.148 cv
564.083 191.576 565.27 191.052 566.07 190.627 cv
566.88 190.217 567.307 189.917 567.307 189.917 cv
567.307 189.917 566.934 190.287 566.17 190.794 cv
565.404 191.292 564.297 191.999 562.871 192.665 cv
562.163 193.006 561.376 193.338 560.528 193.661 cv
559.673 193.968 558.755 194.269 557.735 194.403 cv
557.494 194.443 557.189 194.466 556.889 194.466 cv
.862745 .772549 .713725 rgb
f
473.307 194.021 mo
473.307 194.021 473.39 193.972 473.544 193.88 cv
473.699 193.807 473.964 193.689 474.292 193.622 cv
474.953 193.464 475.91 193.3 477.058 193.187 cv
478.205 193.064 479.544 192.969 480.967 192.852 cv
482.384 192.719 483.914 192.619 485.346 192.291 cv
485.7 192.22 486.039 192.12 486.418 192.003 cv
486.773 191.883 487.108 191.77 487.456 191.634 cv
488.146 191.365 488.832 191.101 489.484 190.816 cv
490.795 190.256 492.011 189.704 493.058 189.234 cv
495.157 188.294 496.557 187.667 496.557 187.667 cv
496.557 187.667 495.306 188.564 493.322 189.744 cv
492.329 190.331 491.151 190.984 489.849 191.617 cv
489.197 191.93 488.52 192.255 487.806 192.534 cv
487.454 192.678 487.07 192.814 486.705 192.943 cv
486.357 193.057 485.964 193.181 485.567 193.266 cv
484.004 193.599 482.462 193.677 481.017 193.729 cv
480.16 193.756 479.339 193.764 478.573 193.764 cv
478.05 193.764 477.552 193.76 477.086 193.758 cv
476.898 193.758 476.716 193.757 476.539 193.757 cv
476.372 193.757 476.211 193.756 476.055 193.756 cv
475.363 193.756 474.776 193.764 474.326 193.812 cv
473.669 193.852 473.307 194.021 473.307 194.021 cv
f
481.52 190.679 mo
481.196 190.679 480.878 190.645 480.556 190.631 cv
479.682 190.545 478.832 190.375 478.006 190.184 cv
477.183 189.981 476.39 189.731 475.63 189.478 cv
474.112 188.964 472.751 188.356 471.587 187.84 cv
470.423 187.322 469.493 186.807 468.833 186.471 cv
468.18 186.118 467.807 185.917 467.807 185.917 cv
467.807 185.917 468.213 186.041 468.911 186.294 cv
469.608 186.542 470.603 186.896 471.797 187.32 cv
472.985 187.751 474.39 188.197 475.894 188.64 cv
476.646 188.863 477.432 189.052 478.226 189.244 cv
479.023 189.417 479.836 189.568 480.646 189.636 cv
480.957 189.651 481.273 189.691 481.581 189.691 cv
481.67 189.691 481.758 189.688 481.846 189.679 cv
482.041 189.668 482.241 189.671 482.432 189.651 cv
482.985 189.542 li
483.747 189.347 484.544 189.086 485.277 188.836 cv
486.765 188.326 488.16 187.843 489.341 187.388 cv
491.721 186.505 493.307 185.917 493.307 185.917 cv
493.307 185.917 492.945 186.139 492.294 186.496 cv
491.638 186.84 490.714 187.365 489.562 187.905 cv
488.41 188.444 487.069 189.089 485.578 189.663 cv
484.821 189.948 484.077 190.256 483.229 190.476 cv
482.555 190.617 li
482.331 190.645 482.108 190.647 481.884 190.662 cv
481.762 190.674 481.64 190.679 481.52 190.679 cv
f
561.883 281.11 mo
563.364 278.592 566.018 274.085 568.375 270.114 cv
565.311 275.33 561.884 281.109 561.884 281.109 cv
561.884 281.109 561.884 281.109 561.883 281.11 cv
573.004 262.108 mo
573.328 261.265 573.652 260.192 573.972 258.963 cv
573.627 260.419 573.292 261.543 573.004 262.108 cv
.305882 .313725 .4 rgb
f
521.007 309.556 mo
520.118 309.556 519.218 309.511 518.307 309.417 cv
496.557 307.167 463.715 288.06 457.807 274.167 cv
456.913 272.064 456.037 270.111 455.195 268.31 cv
457.892 271.472 460.933 274.957 463.869 278.288 cv
464.838 279.767 465.602 280.946 466.057 281.667 cv
466.634 282.581 468.257 284.041 470.546 285.805 cv
474.33 290.039 477.024 293.009 477.024 293.009 cv
477.024 293.009 476.77 291.884 476.339 289.97 cv
486.938 297.193 502.288 305.999 506.307 306.167 cv
506.779 306.186 507.343 306.197 507.982 306.197 cv
515.477 306.197 533.498 304.774 538.801 300.167 cv
544.557 295.167 555.557 283.167 555.557 283.167 cv
555.557 283.167 556.656 280.936 558.132 277.889 cv
557.994 278.424 557.971 278.678 558.048 278.678 cv
558.368 278.678 560.427 274.262 563.119 267.37 cv
564.279 264.841 565.209 262.711 565.557 261.667 cv
566.147 259.896 567.852 254.558 569.488 249.416 cv
570.638 245.834 571.97 242.072 573.015 238.298 cv
573.043 238.212 573.057 238.167 573.057 238.167 cv
573.117 237.931 li
574.017 234.663 574.844 231.394 575.575 228.239 cv
575.576 228.236 li
575.576 228.236 576.528 237.379 576.276 243.167 cv
576.089 247.468 574.989 254.665 573.972 258.963 cv
573.652 260.192 573.328 261.265 573.004 262.108 cv
572.999 262.119 572.993 262.13 572.988 262.14 cv
572.519 263.031 570.537 266.432 568.375 270.114 cv
566.018 274.085 563.364 278.592 561.883 281.11 cv
561.854 281.155 560.943 282.524 559.55 284.567 cv
556.057 285.917 li
556.057 285.917 541.368 309.556 521.007 309.556 cv
.603922 .541176 .494118 rgb
f
558.048 278.678 mo
557.971 278.678 557.994 278.424 558.132 277.889 cv
559.659 274.735 561.589 270.705 563.119 267.37 cv
560.427 274.262 558.368 278.678 558.048 278.678 cv
569.488 249.416 mo
571.15 244.19 572.741 239.166 573.015 238.299 cv
571.97 242.072 570.638 245.834 569.488 249.416 cv
573.117 237.931 mo
575.575 228.239 li
574.844 231.394 574.017 234.663 573.117 237.931 cv
.576471 .498039 .443137 rgb
f
477.024 293.009 mo
477.024 293.009 474.33 290.039 470.546 285.805 cv
472.183 287.067 474.161 288.485 476.339 289.97 cv
476.77 291.884 477.024 293.009 477.024 293.009 cv
463.869 278.288 mo
460.933 274.957 457.892 271.472 455.195 268.31 cv
450.474 258.215 446.807 252.917 446.807 252.917 cv
446.807 252.917 li
446.805 252.907 446.805 252.903 446.809 252.903 cv
447.026 252.903 458.54 270.145 463.869 278.288 cv
f
550.566 328.333 mo
550.548 328.329 550.534 328.326 550.516 328.322 cv
552.691 317.821 557.05 298.445 558.39 293.083 cv
558.971 290.762 559.43 288.845 559.782 287.332 cv
557.849 295.904 552.485 319.713 550.566 328.333 cv
.298039 .309804 .419608 rgb
f
542.446 361.038 mo
543.543 360.144 544.457 359.136 545.218 358.046 cv
544.759 359.045 543.769 360.053 542.446 361.038 cv
549.131 337.506 mo
549.165 336.202 549.231 335.041 549.39 334.083 cv
549.497 333.445 549.663 332.554 549.878 331.464 cv
549.747 332.151 549.495 334.471 549.131 337.506 cv
549.886 331.425 mo
550.065 330.517 550.277 329.473 550.516 328.322 cv
550.534 328.326 550.548 328.329 550.566 328.333 cv
550.189 330.026 549.945 331.133 549.886 331.425 cv
.470588 .427451 .431373 rgb
f
522.167 369.924 mo
522.167 369.924 525.807 362.417 527.057 360.667 cv
528.307 358.917 531.807 347.167 531.807 346.417 cv
531.807 345.667 525.557 339.667 520.142 339.667 cv
514.727 339.667 488.057 321.917 482.057 315.738 cv
476.057 309.559 449.057 272.667 448.057 270.42 cv
447.102 268.275 446.829 258.633 446.807 257.772 cv
446.807 257.714 li
447.311 258.641 448.695 260.47 450.612 262.828 cv
452.321 266.738 454.664 271.74 457.807 277.917 cv
465.057 292.167 491.307 309.667 507.807 314.667 cv
510.278 315.415 512.764 315.738 515.22 315.738 cv
529.163 315.738 542.081 305.33 545.057 303.417 cv
547.639 301.757 555.567 290.409 559.55 284.567 cv
560.486 284.206 li
560.486 284.206 560.224 285.369 559.782 287.332 cv
559.43 288.845 558.971 290.762 558.39 293.083 cv
557.05 298.445 552.691 317.821 550.516 328.322 cv
550.277 329.473 550.065 330.517 549.886 331.425 cv
549.886 331.427 549.885 331.43 549.885 331.432 cv
549.883 331.442 549.88 331.453 549.878 331.464 cv
549.663 332.554 549.497 333.445 549.39 334.083 cv
549.231 335.041 549.165 336.202 549.131 337.506 cv
548.338 344.106 547.012 354.09 545.227 358.028 cv
545.224 358.034 545.221 358.04 545.218 358.046 cv
544.457 359.136 543.543 360.144 542.446 361.038 cv
536.118 365.749 522.167 369.924 522.167 369.924 cv
.654902 .576471 .529412 rgb
f
450.612 262.828 mo
448.695 260.47 447.311 258.641 446.807 257.714 cv
446.807 252.917 li
446.807 252.917 li
446.807 252.917 li
446.807 252.917 li
447.232 254.475 448.379 257.718 450.612 262.828 cv
.619608 .52549 .466667 rgb
f
515.22 315.738 mo
512.764 315.738 510.278 315.415 507.807 314.667 cv
491.307 309.667 465.057 292.167 457.807 277.917 cv
454.664 271.74 452.321 266.738 450.612 262.828 cv
451.927 264.446 453.492 266.314 455.195 268.31 cv
456.037 270.111 456.913 272.064 457.807 274.167 cv
463.715 288.06 496.557 307.167 518.307 309.417 cv
519.218 309.511 520.118 309.556 521.007 309.556 cv
541.368 309.556 556.057 285.917 556.057 285.917 cv
559.55 284.567 li
555.567 290.409 547.639 301.757 545.057 303.417 cv
542.081 305.33 529.163 315.738 515.22 315.738 cv
.486274 .407843 .356863 rgb
f
455.195 268.31 mo
453.492 266.314 451.927 264.446 450.612 262.828 cv
448.379 257.718 447.232 254.475 446.807 252.917 cv
446.807 252.917 450.474 258.215 455.195 268.31 cv
.47451 .384314 .329412 rgb
f
439.552 298.653 mo
439.888 295.627 440.372 292.021 440.934 288.182 cv
440.705 293.457 440.548 296.888 440.548 296.888 cv
440.365 297.345 440.023 297.944 439.552 298.653 cv
.278431 .321569 .490196 rgb
f
444.557 344.417 mo
444.557 344.417 440.181 312.909 439.145 306.706 cv
438.936 305.457 439.122 302.531 439.552 298.653 cv
440.023 297.944 440.365 297.345 440.548 296.888 cv
440.548 296.888 440.705 293.457 440.934 288.182 cv
442.667 276.329 445.136 262.243 446.238 256.075 cv
446.444 256.84 446.635 257.396 446.805 257.711 cv
446.805 257.711 li
446.805 257.711 446.806 257.732 446.807 257.772 cv
446.805 310.067 li
444.557 344.417 li
.74902 .67451 .635294 rgb
f
446.805 257.711 mo
446.635 257.396 446.444 256.84 446.238 256.075 cv
446.594 254.083 446.807 252.917 446.807 252.917 cv
446.807 252.917 446.707 254.998 446.805 257.711 cv
.701961 .611765 .552941 rgb
f
446.807 257.772 mo
446.806 257.732 446.805 257.711 446.805 257.711 cv
446.805 257.711 li
446.805 257.711 li
446.806 257.712 446.806 257.713 446.807 257.714 cv
446.807 257.772 li
.560784 .478431 .427451 rgb
f
446.807 257.714 mo
446.806 257.713 446.806 257.712 446.805 257.711 cv
446.805 257.711 li
446.707 254.998 446.807 252.917 446.807 252.917 cv
446.807 252.917 li
446.807 257.714 li
.537255 .443137 .384314 rgb
f
506.307 256.417 mo
507.307 257.417 512.807 260.667 518.057 260.667 cv
523.307 260.667 530.307 258.542 530.307 258.542 cv
530.307 258.542 530.807 258.005 527.057 257.711 cv
523.307 257.417 518.318 257.711 518.318 257.711 cv
506.307 256.417 li
cp
.976471 .854902 .862745 rgb
f
583.307 199.667 mo
583.807 198.667 586.307 195.667 586.807 199.667 cv
587.076 201.817 586.55 205.122 586.006 207.72 cv
585.497 210.154 583.842 212.187 581.557 213.167 cv
583.307 199.667 li
.764706 .572549 .54902 rgb
f
584.218 192.667 mo
584.218 192.667 584.237 192.631 584.272 192.562 cv
584.272 192.563 584.272 192.564 584.272 192.565 cv
584.254 192.599 584.236 192.633 584.218 192.667 cv
.584314 .454902 .427451 rgb
f
584.272 192.565 mo
584.272 192.564 584.272 192.563 584.272 192.562 cv
584.901 191.34 590.873 179.786 592.057 178.998 cv
592.765 178.528 593.472 178.426 593.953 178.426 cv
594.322 178.426 594.557 178.486 594.557 178.486 cv
594.557 181.167 li
594.557 181.167 594.55 181.166 594.536 181.166 cv
594.214 181.166 590.153 181.394 584.272 192.565 cv
.529412 .392157 .376471 rgb
f
576.305 238.167 mo
576.294 238.098 576.309 237.929 576.346 237.672 cv
576.305 238.167 li
576.346 237.672 mo
578.344 213.713 li
578.711 211.024 578.91 208.715 578.909 206.942 cv
579.557 199.167 li
579.557 199.167 578.307 179.167 577.557 174.917 cv
576.807 170.667 574.557 166.332 574.557 166.332 cv
568.307 163.367 li
568.19 163.256 568.048 163.191 567.886 163.167 cv
557.987 158.471 li
557.987 158.471 535.307 161.167 531.557 163.167 cv
527.807 165.167 524.557 175.667 524.713 180.167 cv
524.868 184.667 527.057 209.167 528.057 213.167 cv
529.057 217.167 531.869 224.096 530.329 227.417 cv
529.451 229.31 527.465 229.742 525.234 229.742 cv
523.552 229.742 521.732 229.497 520.142 229.446 cv
516.445 229.329 515.224 226.333 513.724 224.083 cv
512.224 221.833 515.558 215.417 515.589 210.917 cv
515.604 208.656 516.557 195.667 515.589 184.057 cv
514.62 172.448 509.557 165.917 509.557 165.917 cv
496.557 162.167 li
496.557 162.167 471.758 158.167 467.415 157.745 cv
472.148 157.095 501.307 148.167 501.307 148.167 cv
501.307 148.167 503.557 119.667 502.807 116.417 cv
502.057 113.167 486.681 106.917 486.681 106.917 cv
486.681 106.917 478.373 99.4506 488.703 96.338 cv
490.419 96.764 492.079 97.2639 493.307 97.7499 cv
494.094 98.0613 495.141 98.1891 496.343 98.1891 cv
499.995 98.1891 505.073 97.009 508.594 96.2139 cv
512.422 96.5278 516.528 96.9416 520.691 97.4099 cv
521.595 97.659 522.524 97.9183 523.458 98.1775 cv
528.181 99.4881 533.056 100.799 535.753 100.799 cv
536.048 100.799 536.317 100.783 536.557 100.75 cv
537.611 100.605 538.779 100.278 539.962 99.8549 cv
551.565 101.465 560.486 102.917 560.486 102.917 cv
554.438 109.417 li
554.438 109.417 526.807 119.417 527.057 120.167 cv
527.307 120.917 525.057 146.167 527.057 148.917 cv
529.057 151.667 566.057 152.917 568.307 153.667 cv
569.856 154.183 575.195 158.371 578.291 162.045 cv
578.291 162.046 578.291 162.046 578.291 162.046 cv
577.608 168.44 580.06 177.749 582.016 183.885 cv
582.868 188.828 582.802 201.119 582.208 207.807 cv
581.45 212.526 580.496 217.802 579.3 223.516 cv
579.017 224.832 578.733 226.147 578.459 227.416 cv
578.459 227.417 578.459 227.417 578.459 227.417 cv
578.459 227.417 578.055 229.258 577.633 231.255 cv
577.616 231.334 577.599 231.413 577.582 231.491 cv
577.25 233.016 576.823 234.365 576.825 235.105 cv
576.591 236.257 576.422 237.147 576.346 237.672 cv
.956863 .898039 .87451 rgb
f
576.825 235.105 mo
576.823 234.365 577.25 233.016 577.582 231.491 cv
577.291 232.853 577.032 234.082 576.825 235.105 cv
577.633 231.255 mo
578.055 229.258 578.459 227.417 578.459 227.417 cv
578.459 227.417 li
578.169 228.761 577.889 230.057 577.633 231.255 cv
579.3 223.516 mo
580.496 217.802 581.45 212.526 582.208 207.807 cv
582.147 208.497 582.081 209.126 582.009 209.682 cv
582.006 209.7 li
581.665 212.326 580.493 217.951 579.3 223.516 cv
.917647 .847059 .831372 rgb
f
578.344 213.713 mo
578.909 206.942 li
578.91 208.715 578.711 211.024 578.344 213.713 cv
568.307 163.367 mo
567.886 163.167 li
568.048 163.191 568.19 163.256 568.307 163.367 cv
.937255 .866667 .835294 rgb
f
466.987 157.782 mo
466.903 157.782 466.842 157.774 466.807 157.757 cv
466.807 157.757 li
466.811 157.712 li
466.83 157.71 466.855 157.709 466.888 157.709 cv
466.995 157.709 467.173 157.721 467.415 157.745 cv
467.237 157.769 467.094 157.782 466.987 157.782 cv
.956863 .898039 .87451 rgb
f
466.807 157.757 mo
466.756 157.733 466.759 157.718 466.811 157.712 cv
466.807 157.757 li
.937255 .866667 .835294 rgb
f
582.006 209.7 mo
582.009 209.682 li
582.008 209.686 582.008 209.689 582.007 209.693 cv
582.007 209.695 582.007 209.698 582.006 209.7 cv
.905882 .807843 .788235 rgb
f
516.242 277.889 mo
513.945 277.889 512.056 277.833 511.555 277.667 cv
510.072 277.173 502.305 266.161 502.785 266.161 cv
502.791 266.161 502.798 266.163 502.807 266.167 cv
507.558 268.084 512.723 268.722 517.501 268.722 cv
527.056 268.722 535.057 266.167 535.057 266.167 cv
534.807 268.167 527.057 277.667 527.057 277.667 cv
527.057 277.667 520.835 277.889 516.242 277.889 cv
.87451 .784314 .737255 rgb
f
347.057 558.417 mo
359.324 559.75 li
362.451 559.75 li
363.057 556.417 li
363.057 556.417 372.724 516.083 373.724 504.417 cv
374.724 492.75 371.057 472.417 371.057 472.417 cv
368.39 493.083 li
366.39 509.705 li
357.724 490.083 li
361.724 516.75 li
361.724 516.75 351.39 481.083 347.057 473.75 cv
342.724 466.417 339.39 469.75 339.39 469.75 cv
355.057 532.75 li
356.39 550.417 li
356.39 550.417 338.614 533.557 337.724 532.75 cv
334.908 530.198 333.057 533.083 333.39 535.083 cv
333.724 537.083 347.057 558.417 347.057 558.417 cv
cp
.333333 .333333 .372549 rgb
f
692.153 455.152 mo
691.93 452.068 691.74 450.058 691.61 449.676 cv
691.445 449.192 691.679 451.371 692.153 455.152 cv
cp
f
630.689 559.75 mo
693.676 559.75 li
694.057 555.75 li
694.057 555.75 699.724 517.083 699.057 508.75 cv
698.537 502.247 693.836 468.583 692.153 455.152 cv
693.217 469.842 695.057 508.951 695.057 513.083 cv
695.057 518.083 689.057 550.75 688.724 553.083 cv
688.39 555.417 673.057 556.417 673.057 556.417 cv
673.057 556.417 675.724 551.083 678.057 545.75 cv
680.39 540.417 683.724 510.417 683.724 510.417 cv
679.39 523.083 li
679.39 523.083 670.057 544.417 662.39 554.417 cv
654.724 564.417 649.724 546.083 649.724 546.083 cv
649.724 546.083 650.39 535.75 651.057 534.75 cv
651.724 533.75 659.724 516.417 666.724 504.083 cv
673.724 491.75 675.39 450.417 676.057 441.417 cv
676.724 432.417 672.39 415.75 672.39 415.75 cv
674.063 432.415 669.057 471.083 668.39 473.417 cv
667.724 475.75 655.724 504.75 655.724 504.75 cv
657.724 484.75 li
663.057 470.75 661.39 439.75 661.39 439.75 cv
661.057 451.417 654.057 480.75 655.39 473.417 cv
656.724 466.083 652.39 433.75 652.057 432.417 cv
651.724 431.083 653.724 432.083 654.057 429.417 cv
654.39 426.75 659.39 384.083 659.39 384.083 cv
652.407 428.083 li
648.057 424.75 li
652.407 445.083 li
652.407 445.083 652.057 494.083 652.39 498.75 cv
652.724 503.417 648.057 525.083 648.057 525.083 cv
648.057 525.083 642.39 521.083 641.057 517.083 cv
639.724 513.083 635.724 523.75 636.057 530.417 cv
636.325 535.779 632.282 552.781 630.689 559.75 cv
cp
f
422.531 325.615 mo
422.531 325.615 452.33 372.506 457.724 376.083 cv
474.057 386.917 516.879 402.083 538.801 384.083 cv
560.724 366.083 554.724 338.083 554.724 338.083 cv
550.566 328.334 li
550.566 328.334 544.516 367.847 518.318 370.914 cv
488.708 374.381 472.699 383.75 418.378 321.417 cv
422.531 325.615 li
cp
.317647 .32549 .380392 rgb
f
437.253 199.957 mo
434.307 197.645 li
432.39 195.5 431.486 195.423 430.778 193.383 cv
430.692 193.134 430.932 192.885 431.057 192.667 cv
432.057 190.917 429.057 187.75 425.39 184.843 cv
424.648 184.255 423.989 184.021 423.408 184.021 cv
421.118 184.021 420.057 187.667 420.057 187.667 cv
419.39 185.583 414.781 179.421 415.057 175.175 cv
415.242 172.332 415.856 171.111 417.236 171.111 cv
417.919 171.111 418.79 171.41 419.89 171.96 cv
423.474 173.75 427.39 180.75 432.724 185.917 cv
434.344 187.486 435.442 189.432 436.186 191.382 cv
436.636 194.252 436.995 197.383 437.253 199.957 cv
.584314 .454902 .427451 rgb
f
422.724 195.417 mo
423.082 193.087 423.383 205.75 426.387 209.75 cv
429.39 213.75 432.39 218.75 432.39 218.75 cv
432.39 218.75 430.05 218.834 426.387 215.459 cv
422.724 212.083 422.057 199.75 422.724 195.417 cv
cp
.764706 .572549 .54902 rgb
f
527.057 176.417 mo
527.057 176.417 534.057 171.167 539.807 168.917 cv
545.557 166.667 552.057 163.417 556.057 163.667 cv
560.057 163.917 567.807 164.167 569.057 165.667 cv
570.307 167.167 570.057 170.035 570.057 170.035 cv
574.307 174.667 li
574.307 174.667 577.057 168.417 576.057 165.667 cv
575.057 162.917 570.807 158.417 563.057 158.417 cv
555.307 158.417 541.057 158.667 535.557 162.917 cv
530.057 167.167 527.307 170.917 527.057 176.417 cv
cp
.556863 .396078 .27451 rgb
f
460.807 166.167 mo
461.371 166.661 475.307 164.167 478.057 163.917 cv
480.807 163.667 496.807 162.667 500.307 166.167 cv
503.807 169.667 509.557 174.917 509.557 174.917 cv
509.557 165.917 li
509.557 165.917 502.307 159.167 498.057 158.417 cv
493.807 157.667 483.307 157.417 479.557 158.417 cv
475.807 159.417 468.307 157.598 466.807 157.757 cv
465.307 157.917 458.807 164.417 460.807 166.167 cv
cp
f
501.307 226.167 mo
501.242 224.894 503.17 229.917 504.364 229.667 cv
505.557 229.417 510.057 227.876 511.807 228.646 cv
513.557 229.417 519.807 229.202 522.307 229.684 cv
522.932 229.805 523.746 229.723 524.615 229.533 cv
528.191 228.752 531.022 228.56 532.224 225.103 cv
532.921 223.097 533.557 218.396 533.557 216.91 cv
533.557 215.667 li
533.557 215.667 536.057 221.225 536.307 222.696 cv
536.557 224.167 538.296 226.167 538.801 227.167 cv
539.054 227.667 539.809 229.447 538.872 229.75 cv
537.935 230.053 535.307 228.878 533.557 229.725 cv
530.057 231.417 526.057 234.667 523.807 234.667 cv
521.557 234.667 518.538 235.167 516.672 233.667 cv
514.807 232.167 512.144 230.613 509.557 230.167 cv
508.718 230.022 501.807 235.917 501.307 226.167 cv
cp
.784314 .658824 .580392 rgb
f
499.307 181.167 mo
499.941 180.829 500.575 180.494 501.218 180.178 cv
501.179 180.637 li
499.836 180.03 498.511 179.394 497.197 178.738 cv
496.539 178.419 495.894 178.083 495.24 177.789 cv
494.603 177.496 493.93 177.224 493.264 176.961 cv
491.937 176.415 490.567 175.968 489.202 175.521 cv
487.837 175.072 486.444 174.716 485.061 174.374 cv
484.37 174.218 483.674 174.063 482.989 173.967 cv
482.816 173.936 482.65 173.923 482.48 173.902 cv
482.354 173.887 li
482.291 173.88 li
482.259 173.876 li
482.243 173.874 li
482.235 173.874 li
482.497 173.875 482.303 173.874 482.359 173.875 cv
482.085 173.892 li
481.656 173.881 481.5 173.999 481.259 174.045 cv
480.991 174.137 480.663 174.28 480.365 174.409 cv
480.061 174.571 479.753 174.72 479.45 174.893 cv
478.844 175.246 478.232 175.611 477.632 176.006 cv
475.24 177.609 472.925 179.403 470.557 181.167 cv
471.455 179.99 472.447 178.894 473.469 177.824 cv
473.979 177.288 474.517 176.779 475.056 176.268 cv
475.592 175.753 476.163 175.273 476.737 174.794 cv
477.323 174.327 477.915 173.857 478.553 173.435 cv
479.203 173.015 479.858 172.628 480.659 172.3 cv
481.12 172.144 481.654 171.986 481.968 171.984 cv
482.242 171.96 li
482.392 171.961 li
482.41 171.963 li
482.447 171.966 li
482.52 171.973 li
482.667 171.987 li
482.861 172.006 483.061 172.019 483.249 172.049 cv
484.019 172.142 484.758 172.291 485.498 172.443 cv
486.973 172.753 488.399 173.211 489.813 173.688 cv
490.522 173.924 491.218 174.196 491.906 174.488 cv
492.596 174.774 493.279 175.077 493.953 175.403 cv
494.63 175.727 495.281 176.086 495.944 176.47 cv
496.595 176.842 497.215 177.247 497.822 177.666 cv
499.04 178.486 500.246 179.327 501.435 180.197 cv
501.884 180.525 li
501.396 180.655 li
500.705 180.84 500.007 181.005 499.307 181.167 cv
cp
.235294 .113725 .0588235 rgb
f
535.057 181.167 mo
535.057 181.167 543.307 172.917 548.307 172.917 cv
553.307 172.917 561.807 173.417 563.807 177.042 cv
565.807 180.667 568.307 182.667 568.307 182.667 cv
562.557 181.167 li
562.557 181.167 562.52 176.808 557.307 174.917 cv
552.094 173.025 545.057 171.667 535.057 181.167 cv
cp
f
487.888 177.792 mo
487.888 180.322 485.837 182.373 483.307 182.373 cv
480.777 182.373 478.726 180.322 478.726 177.792 cv
478.726 175.261 480.777 173.21 483.307 173.21 cv
485.837 173.21 487.888 175.261 487.888 177.792 cv
cp
f
554.066 177.792 mo
554.066 180.322 552.015 182.373 549.485 182.373 cv
546.954 182.373 544.903 180.322 544.903 177.792 cv
544.903 175.261 546.954 173.21 549.485 173.21 cv
552.015 173.21 554.066 175.261 554.066 177.792 cv
cp
f
483.23 176.542 mo
483.23 177.811 482.201 178.84 480.932 178.84 cv
479.663 178.84 478.634 177.811 478.634 176.542 cv
478.634 175.273 479.663 174.244 480.932 174.244 cv
482.201 174.244 483.23 175.273 483.23 176.542 cv
cp
1 1 1 rgb
f
553.23 176.417 mo
553.23 177.686 552.201 178.715 550.932 178.715 cv
549.663 178.715 548.634 177.686 548.634 176.417 cv
548.634 175.148 549.663 174.119 550.932 174.119 cv
552.201 174.119 553.23 175.148 553.23 176.417 cv
cp
f
486.557 250.917 mo
486.557 250.917 505.307 254.667 509.557 255.167 cv
513.735 255.658 517.672 256.391 517.804 256.416 cv
517.81 256.416 li
518.019 256.391 528.075 255.164 529.807 254.917 cv
531.557 254.667 538.407 254.25 540.157 253.75 cv
541.668 253.318 546.066 251.816 547.061 251.096 cv
547.007 250.966 li
545.27 251.253 536.481 253.525 533.557 253.75 cv
530.307 254 522.193 254.263 518.318 254.513 cv
514.449 254.763 493.616 251.923 488.331 249.428 cv
488.285 249.424 li
487.985 249.521 484.816 250.571 486.557 250.917 cv
cp
.360784 .2 .105882 rgb
f
418.378 321.417 mo
427.375 312.961 li
427.375 312.961 421.057 314.447 419.057 315.738 cv
417.057 317.029 417.217 320.089 418.378 321.417 cv
cp
.317647 .32549 .380392 rgb
f
417.939 168.752 mo
417.939 168.752 419.365 148.75 418.378 145.083 cv
417.39 141.417 418.378 145.083 418.378 122.417 cv
418.378 117.072 429.608 102.75 429.608 102.75 cv
429.608 102.75 432.057 93.0833 434.724 89.75 cv
437.39 86.4168 444.39 81.75 444.39 81.75 cv
444.39 81.75 452.724 71.0833 456.39 69.4167 cv
460.057 67.7499 469.89 64.0834 473.307 63.4167 cv
476.724 62.75 496.39 54.0832 498.057 52.0833 cv
499.724 50.0833 504.364 52.0833 504.364 52.0833 cv
504.364 52.0833 522.702 52.4166 524.713 53.4167 cv
526.724 54.4168 551.559 64.4167 555.475 66.0833 cv
559.39 67.7499 561.724 67.0832 565.39 70.7499 cv
569.057 74.4167 581.557 88.0834 581.557 88.0834 cv
581.557 88.0834 589.724 108.75 591.724 114.083 cv
593.724 119.417 593.057 149.417 593.057 154.083 cv
593.057 158.75 589.388 174.36 589.388 174.36 cv
584.218 190.19 li
584.218 190.19 577.191 172.341 578.291 162.046 cv
579.39 151.75 582.724 135.417 581.557 130.417 cv
580.39 125.417 567.36 106.75 562.209 103.417 cv
557.057 100.083 548.633 95.5934 548.633 95.5934 cv
548.633 95.5934 541.39 100.083 536.557 100.75 cv
534.125 101.085 528.697 99.6314 523.458 98.1775 cv
518.285 96.7423 513.297 95.3068 511.555 95.5934 cv
508.05 96.1698 497.307 99.3333 493.307 97.7499 cv
489.307 96.1668 480.724 94.4367 480.557 95.5934 cv
480.39 96.7501 469.557 102.75 467.807 101.75 cv
466.057 100.75 461.133 101.083 460.428 101.083 cv
459.724 101.083 456.724 109.083 454.39 109.75 cv
453.562 109.986 452.944 109.761 452.432 109.536 cv
451.5 109.127 450.917 108.718 450.057 111.083 cv
448.724 114.75 439.446 121.75 440.585 127.417 cv
441.724 133.083 447.198 146.083 446.794 151.75 cv
446.39 157.417 445.39 179.417 444.39 185.917 cv
443.39 192.417 440.585 202.417 440.585 202.417 cv
437.734 205.406 li
437.734 205.406 436.489 188.014 434.324 183.833 cv
432.159 179.653 421.61 166.449 419.057 168.083 cv
417.939 168.752 li
.301961 .223529 .156863 rgb
f
581.239 109.171 mo
578.637 109.171 572.321 94.1799 570.724 92.6646 cv
569.057 91.0834 555.475 83.9016 555.475 83.9016 cv
543.217 80.7501 li
543.217 80.7501 541.967 90.0914 540.247 90.0917 cv
540.217 90.0917 540.187 90.089 540.157 90.0833 cv
540.062 90.0653 539.914 90.0567 539.721 90.0567 cv
536.34 90.0567 518.911 92.6646 518.911 92.6646 cv
508.057 92.6646 li
498.057 82.4167 li
478.066 83.9016 li
454.39 92.6646 li
448.673 103.478 li
456.39 85.75 li
453.39 86.7499 li
464.39 75.4167 li
458.39 77.7501 li
475.057 68.4166 li
499.724 60.0833 li
499.724 60.0833 503.428 59.9351 506.341 59.9351 cv
507.798 59.9351 509.057 59.9722 509.557 60.0833 cv
511.057 60.4166 517.39 61.7501 522.724 62.0832 cv
528.057 62.4168 540.875 65.75 548.633 69.0834 cv
556.39 72.4167 573.553 88.2461 576.305 92.6646 cv
579.057 97.0832 581.557 109.083 581.557 109.083 cv
581.458 109.143 581.352 109.171 581.239 109.171 cv
.545098 .407843 .32549 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 19.0.0%%For: (Marina) ()%%Title: (mark-2.eps)%%CreationDate: 2/25/18 11:17 AM%%Canvassize: 16383%AI9_DataStream%Gb"-6l`qeHE@1G`nIGAMB&r;4'`\:9"F"\,:7dA5A!BMo9/Bb8NO>%O94X%IdT0X*%JT,=^X(^:6tW%U;jSiAX$3bfF4(_QLqq!g%Qd6[:qq:6$pM[ckq<%FL\,Z>,LL5eR0Cp(l-'uM3rTn1sp#YXKI(-:6+*0&UM5WBUA!X^lELV$b=#%leGAj+'s8'^(pV2.NpA'X8%^:SgjlKu4PIW`1!j0L\"^O>g&q<$Ahs*jM'e_>R<S6e@*riaesDZ1u4rUBC.Mhee1?9`dd=H>7Ol"aW%&)YJdE]O+'\U=?7YD)Pt%Mtc]%Tql*ZkjSNI1u:u`/3j04hnAg`bO=<&HhRI#gGf0((K0keDcU`LWu'YW;n=gYX$`!>F8>BGpYoPOIK/TGhXJm-ae/$OEKCt8%O2GnM"lVOL[*!50YF_j!/[Z2'TQeFkQ[du_GY!UD\,#E0mr42`hllW[ams;UqVdS1Iu]:Pn,<3CfAF;gpAP69/X:Y;QFIra)642)%q.I<+`k^_&3S(^_(t\FWb&Ro%3Q+p5p$mJ#D_GJqql^M0ou47U?G+`q]Qs8NX-`jIN0d53j0Hh6b;@VMIeWfA([q@^c-,k0EGTC=%Jb\!/hn41[0A7=hGkI$U3kQg>f*[$-m+q,;]U*p>p=8mSL0ktdCg[.spTK)Fm#NeRgOe;?2rD>ooCm2'4!4'\1#t\MLNj6UWHm>1%+YM.IC-@67L@MSsd/YfnG)M='De8eDk2"5<^O5XR3hqaJSX4j)mc?BU>07JWqB$gY=GMBqs3mm1(OlD``>a0h&APsXgL5ESa1qRF%mX"oqS(kEUdIH,9Vj#?j2_sK%^&>WnfDankEr#Iel5T6af73NqC;5.K2Q+=M2tcLo^A;0MqWi?D^]4"GhYbROl/t"_]`%"0LYq*"%hS&a0)u8M)LXWm(^\bq-n)(j-oo$`%JpjJti6-?5obu7u`UVX)Dh%9nF0Bc3[JS%3s'N=WmB]lt?N0r[ZZ#m5o(f]J>ku+iDuB#J%DCH7kh2C+s5Pjgj^A=nn*5lX=])Sed^rRVfKR\l+r:_#RhnOReh!LTKDuTQ^aTlO6HdUg@h`Z<=.n`(83_u.?_GIt3l7`1^]Cs$$%II9=+@JK-0MsPE_btE>j8+-&d3a_j_ZhMfGnEZG@r7qn@mFO#K>WaWQcecA8pUBVj'qP'CMe@IQJ&:.ClO19%`Bu*Ie!nm1qWc%h%Dn^#cTHF%^q6fk!d[orqIsh4@DdU3UmWG.J"6I#_TJ)qPHL]N-^O-"?oaeMYEeqBK^a_mgJ+IS3?G6;\=H$GP$#f_+fpcXCcA);L%S6O<MA*=Arif!R2pn8JNF8th%NU6LsYJ,M^r^H!5DdRu%EUiPK+.doXJoC$6^M45?Y@YHeGGJUFncN*]86DcK_tSZZmb'NPAJb9p%iTG^hp=2)ThAh!"V)Rd*adu]HVf/G^RV"($ANB\TldNK1^J+7p:H0kE.*9V@-1daq(&oWV23uZ_S[Vn8)9POnXd-Mlgs6M[r8;/\%@,k$&8fGjX.p:'6?R;dO$@g[$CqF^$:9E<[EXI"gr6sII+7;_3$P-_b]8dEb5A;Oh:i]f<-N+\&:hnd]kl3S/3GFo\YA7YDfP%/<%GV6n4p9Bl<[GbDG6.SmR8%2+,DiAGeNUJcaYl$`=;#=Xmg+_i2N:Qp,g@E#XbZDhG::l'P19UD3Oi80@/<uu8c:7TKb'n/</Fi%t%jmHq!rMGE]fZ+Ch#K_a;Zb_e*RV[p:<ju,t=RN:RT_Q[HbD]pK3(f*OHtA))\4@[n2j#c.o(=oTarR*6fFtEX1@b\amu.(]PgY`G%<)QFp3_?kT%l2jI8^"F#V(?cBQCI!Cgb&9DK61YJ.5,tk-#`T+TCQj5cOZ4%:lnhkXEe+'\o-iYH<P7=]CeJP6BH(e7.j\U/R(6#%gN$@:A=eGmlV^0@WhjV+VOm'Y]rqr%?fJGhD:t_UX_um:g2=Csm6N'n\4JX&9tjbKlHOKnF*!LbHZOCPc^>L/"dW(NPuBh_o$uuH%Hb)F)aQs6IHTU%9\+s&Gi-)`G\NSd*hVR'PaCGYuL#jrEX`s>TGP,jc45J`Lh;:BNcS@-;I^rhSbC.(]mc@dL\+b*qrVcZsB#K=D%fL(+L2gpd#J%1Ub[sX8f+3o=G/8#jFpA'.cG=/n]b%W7_]<Z^MjM*a?16co_nkbXGUnPj4S0"Di4U^T"G9.k)If-b2Q!5gRJ";=7%1R)`)F]Z^^etM0h5.@ia8fC;A8f5_+Mg+u-IuI/frnJ"FUkL=?2idd_gQ.b`ep`GK_]hH&%AU0MJpk].]A'pmXDcdedm[nQ([cTf%hda9IC=CW!24aDrp;W)WNMTf-/?>%PARS/2il&6;>Ge_*2Z<<^r*KAD@_&bLYuE6Z[O:lh[?=Z./'3[S?>&oI6%(<Q3IW?9=693f%%L@etB"-[&Rr:8d$i=pP^BO>\4ZhfENi3WK4nDtLJhpctN\>@h7kT2+Khiu?+nOf%3qHDIerB1&.XZ%IDRKgPMo*a%8LDm!o^]+<%]c1C0oqi!>beapTlmP/CfEW;a46_dSFsCh0DFGCU(.Oa'$OX0]5KH7&PAWDf\(teiK^l4^J<u^X'aNF%+(U,]8KXPHNNh\OMD4EK%bW?+=&$jSIaP==iN]d]$hh9An@J<pWIM1cbep3EmHnSuW.iZBcC_0UTM)Ar!0Tp5l6"G`UR;R4((+7d72VD?XZH>)3aEA5.e!Xe(%hoi+2Q&Xus2P`CUcEsH"HW60A.Yt1s+>`XbL(CmE[T..N=Z/3T`$*D,>dasG<X\T5(@0(odS1bQ)g;4?P(?44,!0a-4E<MA_Zp&0%IPJd$fGVTE_!712Cbhuq9W0(tl.T*o[RY<2_2n"LJa3r\;!.'9S]LLKCdkYaL_.@KA%ufKh(#b4?J4aEg[;<!h;F%#\4I+NAC0=6%",2JVM@IB)LYP:QS$C_q$]rj"#Am@&:melT8$!J3/&!18?'O7<c2#pO$oaDCmaH&a.2%@^oVdG@Jr`NE[hQdLV<MAS[_@bpbpF`8%X^G)a:iD)JYW)46X$*/;4:[ScdS<o;Ul]-JMp-\bkJEX/i*DI^")s8VnshmD3o:f8%sa4ZnJ-5Sk=.\SMmVfr<o[gG``!P#]lZ]?%mSo]cC6+[ndu6t)Rd:Rb;1X+mU[I4[hd`+,eg,[0e$N'?DCIl`;LmZZ=fH&1/!9\[3k:^4b&UA-7>Y*'rCf:IpHkRkMAq8VpA=8m%&O%p,:&EM+Z'/p8=3L;NWNPtiK9EELI:DFjAKK%%s4E8>rU7pm*\!Tndi=u^Y''6!1-Mo%PCKb"m[s1D`>\As0si!%.FlE(4"Ddh%\P^5''\.;62e(E3T1j+qjm?ZB55if/ZV.72HH-29dWOn+rT.cGblk7Saj!)tD*r#BT[OFT9_k`W-+\BeCcV?D]UK,#enF,*?!WJg%SS@G26(0OiI!sS:Q*"8'gd6(!M71aZ`QC;MKU7VfK4VVJ(g^FG+'QElbB"S<OIs4@5I?INr6+Md2gA%b*OVM4rC>t39Duo-O;U+O%4f+._1r%T%NS(V1LI'oJ4,G0l)UPVM5h(<2;1YACW<rbSBVl!03m]I<5H4t=V?\ErK:iP,MAC<.*`QiG=sg79JW&Q>>4EX$+P0]B%KN&b>2AB.1U-<[3qTt)q:o->YN<l%)9VrLe:r@ujUl#a`UIs&Bb0`Q;-u^Uu:d_gjL'/M'>#LKpU8fV.P:0%[lnHdCF&-rC:=LR<%9Mh.M1dPt.9;^\OeL?VZbuC;V9X-cqR7(qFj9F;>:juVG5N*tdId1/X19HR*QdShgX&P`gQDnlh$`Rp'Z.tMB^IJJjMF`teVEkLA%1"?ZO\W^9A4EAISVk$M5ElQk:ZF(36&=4$Ie(DU6m,LaAA()4$N+T*[B5a(T9T>f!N9UeoA:MO'8\;8e]B-B)mRimjVS$q]k,UQW%i+AGF=AJ$jC,R^uG8KB3kM``A*1Os=qTSAAVZ3\C>qK[1].Ec?Z9DH\/U,ndFplR>+"H"UPagp]TR<l3Slj(hVk)rG6fm`MA\(4@%2Mb-]e"^8uim6^5qPapliFZumB/G['(,o[%6.=)J`JRka2_/JZS]k'u5L(5EZLRI(cKZmb9Ccts<L`A2d:f=eD5C@6X__$U=ufmI%;=ZMK0W8cgWLN=ZF/+9s9oh!%a10H*>\DtO-e`M\k;=@>0fu7AN+Mi.:V">6IY`\O+6FM<?l<UY@2c\p-aSP9]g'LRT#_*g=8q7G%pqu2h[#RAnL:X^cMTBtA`_JR'+_RW_R7,J-#@Hgh3.^p9BCj3]-_'@cXWgTQBD)hL=kR'03L_FS_EhBQb,=[(KqJ(1Sm(g;-:jKq%fA[$!gD^L8nCqCQWUCVZ>6pPei(eCR<_1qdjIV#Dh)0EE/E.`s8bdBDGs"X=Kjsj),5McI]=5X1m`ip:hh4S^pdfZOmTql#f:,)u%IiBBBFT"hJFG(bRBOFMU"2b]ZJ\9>M>c6%?T<NWqDompAZleKRSf>jqB'X9afkY6$`_iYR8imE'f%HI'kEVT.G2>3!`4N#=_3+b?%^:39J,E!Mog;(q0JWK2$f,:p+,5GL7UHtcf0"3s_A^85SYtQ8!)F):iT")Udl8gi@ofl/t%!t+dq7+LD3L"WM`=Yu7X6F8(s%p,P%G8Djmq,"t+1r&^g7YVhkrYX4l/`@h%5a.0;UX$9e7K+\qg=J(?FgD;31!OuX\+m$op_:&JT6Z\?ZRk/Pf8'J[$9$YlQ99'gFUR56%ZMY=)gYX=uB42bX@D5!2qFp3+bS'=(0I'OaY,T9K[2i-EWjWq%>G<,US%Q.PniUj.1OX^VT/KlX*,A.c>,f&KT.sm>/R=usgNF:F%r.2t&($+Z/?%XReg@.-'nMfp.s5E&u^R4p0`e$2:n@5Vep,\.6MP[BW+j*,[=5n"SmV_:B'aMK?"!?leK3b/]/'@ST.N`r0G0j/@%>1R1UR'rW+_g_!nFR*$.qFBdKr%Aj=g7ePcpP]@3.AH2AfmJn#G(^gh"R\`lYqc$mn4UX7.D6#e%Yi53\?,k(FlITD5YI,Tj"!(X%)fFL+jQlkZ@B\71qM#cs]5o[#!Y=+FUGcgDD.EU9%CE*P=@ZZFPM:V(q([9W[@bJOXJ<TlRj!KO4[hFDn'DUVkJk2Ea9T[J)#AgG%]mBiHgh(]JIMgM\&04QbF,^+J-G0J&pQ#gamde+m$"\)Q023YDh"?/pirmcYd!q-:X!@WmB.E>Q;RV6P$&LE15<t1?Q,tp_FNas[%].<0q7^j::U8'#X?jj=8c-91498fC1n;<Y!(:3Q:1L<9XjAMV)E)A!32d*2F4=VDoE(G2-4`\bDD'nUccm"/XbnO^VGFn7(gtCVV%C@Y=GG&!I2VDbYV,:M%K.P8.he.#/0#2Doe"WsZgF>Z>rRi"*7'i\E$q>rMY_f.)_'066&L396M:oQFal>X42+3kQ+diU:9NqB+W%iEF0AVFFrgC^0mOV'LHG+J=ihKEFM1/`N("`'&dpacqT<-kXE4L_CMZ4":dK'(*9J1?]4p)k,nCd4WgHLJ-_PS+8i;U$3%7l4;Ac%PReX*c7mED[#j.XbJ3N#hg;A+\gN+ob6RV\hKMbis#'dn^uu@9Y=<Vd7>GJT:CS&rJ#D,k`Rq@]W,ol!X2/,Pij;(r4(c4Zs(^fM%s4%/)s1d7_"mue*D4#U#Fl;$qnC8ObS]pK*)SUMTs06kt3Y7msMeTt+pEeFX=sAdaI$nuo&F:UAs203-B\,JXnNZ.J0G!4-('r0M%0KKq$SX>amd)A-]kK_Q":ZLp8^IMINP^a5,=<>Fc4H@EP]>)fOHs"\L/>Mgu\t?N_hn77`KmuShY.K73YP'%*K@%:Y4#H3d$C\==%OL0X2*B\)@;<@H*iFS(Ba;]$,dHah?BRn1b-crfEh=UGZba[b7/7_fDb+'j`FFWEn+&9:.h=uB`CR\\crd4encBF`jCkIr=KB#]d%mY)nBF-$+O@m1jsF&Kip]UJ#ncc;->+2E>#"5N7,!,"U.nhlC#3Kj1?+Ra3M2Z*0sYg)@pk/S(Z"30$:!-+TZ!9O.RXK6%*56El@%"2]?%2pZ?85+!omhb;ch[5k:oG2loL\NAL:?+C^D8Xp4/Vn?9jY<JZKXh/HUs1D*E.?i$G@^CHYZ9T!j=YDeFDA;BZeS0NZWR&\i%\:n^Y[IZ),o5`Z6(XEQ](P*&t"!7.Qr/9KgkqW>"%&/57&E5ehU'3qiK(q!/,">E/%g>Ful-\.>X3hMDY\n"59NN%VBlF(FoeWbE%@3t:lDT>J)b`o(`6[XZ#6Pr7G5!9-Z<giXldA#q6eN.V'jO-^;;R;kS^-l24k1"P0!]BgK"Q5Tgij^fqN*<:3%^[9GAubeY53Zh=%[k(*Q*UHJ!#ckH#67=&@j/qee?EYuu,ON>=.[Pj,<rB$ge<X+tPh9V/D3Y;efhZDKGoR0oKn2pE;OZ6u3R=I_jRZRN.!*N)Y@#%h%#E+H<6%bJ+Ta&Wa"g1^;)FGH:K@)^YmaM;:mp.bO?nN^*(S>c4O\:mkHZYs:LQ8*H%gAdj2[tn&[36oEOJeg('m'2\:78(];UCs=%8QSp7D30!<[T2.qAgt;;&OcoHA389nZ!gQAS-VG2KI!Okl,r/1pHR\$mPRgL/fGMZPhg/XjucK[-+o+YL2&3;(>FPKm<H0Y[a!Rm%^n-;HS/Qo?[?=bY5GaY!b"XCa?DdC=.,>!>GCtk$b-3C1.."RF/?Ru=\brF>A\1iXVK-`TDBC<O+"5C!1L9`";gJDq_MLD*pa+'o%>\oI[/M/mSe5pA:a*:Q9b#=Aj`DW4"h;#u+E1&itqI=a$DAJ^^2csN)?QZMe9XZ9cl*6^^!,].Ug.HG?ND8S_g0-1]'?uEfjsDW2%-dKXlbWpC&7a@dsVS/[mf#EdG`B\-%dJi79PtGO=Cb$&FBNLVHY**L!;7GoCS?d?Nh$!n>'[jQm"le=glmhYJ:-[["m7u>OYc6D5%;ATP^Hc,P7J*_:>OBj=4G1;F3AlYSmn<OQ"l$sP0eTBr@?$Ge'm/jr+F4(P3Q%i47D.=)MEO"gLIr^B-\\u#6:03N(<tQdS>^D5`%l".FMq-HLl4TVpu>Xu7dL2?`pTdCi#3*MB9p"3E.RI0OMrXAZ8fssOE;%T?no^5%hO"PUt\P(%-piR\P3f(Ar=g2ZX@n.9<X+-o(%f@7N3hj^dIHe1t'(TQ>[SnFMKF@Fa7.slVcDm/Y11Nf"lg#]34I9lMejY+&A)"XC%4q*>,I1uN_V!d;&^?Ijd/%(YVGP,f4\$GW]%RGQT(a#N:E@FQS.NO"mJe)GUIK8sua/#S;GF&oIBe;<O6?`rhP2!$i+RM[mS5L7LCd=j[7[&#EQ5!FSp__KXL>Fa!u(,+^HpX+or%=R%W0g73([1WYQq\9j^Bh%7%O_l5;lH/m[%GN7^fCj`TWj&pcGD%!i0cCt_F\&Famm_7IN>k'1:s32N_Ku0h$-Ijg%SWeEpA</o&%P\p#&+UIA0N4UcsHh+4c0Z$;QUbi0[2Y"H!,ttQ*d@U)?S(o%OHFLmC`\7Q*<)@SU_\G"96.H=R)5\1[n6l*JE_g7e-X$UjbTc8e%$tD97C79f).4J!@I6:1[>_uO//7Qk6+8/R3gLTU$2@,t:"fh:%>ROa.d+-=3bLj,@6CP'-e#*T%rMPkjTq5`LJK6AX1B9k8X!i,/%abV(O)$hG(c4IS+i>Q%_,Hq"^CVW0IH1UCqMf0*?2prlI@_,%q=HtC>GB2.aL<Ma<n^qgj6%AA0o#[Ptk:k82+T3>]W]j_]kMGQE%T;"eK%J73uh,W:,Z!8\GrnnjmhB2dq"\t8qJJfo.RM"H[B\'/tcdO!2A.RJUoZ,hFp%Mu;*d3T+C3#@]0XqV,9iLN[T"O5V8.tL4%;M<gf9KbhcO-nJYV[)o#*c0DA.7g*n+(J/@13DtO;sR9i9iq>(@"b0*N,V3n"7t<YFo2)^*-7^Tnk:4%r>jLK#4BA)]d5ca&Nd4:%SV!U^qXQRK1@Jd?W`c0=#q?'LduW<Y%=o58mL!f^G=05%7j'gJ]r)f"#$iTqh9dQJK:D5$-3c<[J^q*[7.t$]d5#aW4\X*_U;2t+%qT*-#&r3ZoVUW,Edrboq1%f38>DhFpmgQ-MQ6(^a$PW")$28"G>$EZEC0;T,H!dF)_YU'+*\Z!;?e%q&dmmBOU>0%?l"S\>?@HYY%8qeT,\C@oE/u#XPjN_+Uq$eRr6%tf@)Jcr]<R]3gq1G+uL$a93BUEIp>n-dFEAJ'recB\@>\7_Q2ij9Xa3$6)"-D8+[#>(Ben0jU%r\N5$]JYK.]`h0T(-<1'rG^t)DD<tSgpWk?2j84sn(2HtE9ftPI.YL=DC>hSAK#X`m&VgRa6bKP^*r&rdpUoj03<N<O-FN<Wmgb%%8`dg@ZS0c<<VY5;e-;QC1HiG:J!^E^iul\lmL<KoWAWJ0n#,:A>"qTX`2MT9VNOXb9'?kH/Lr;mZ%n'lcF]%6lH4+fm-)I"b!DPQ%3)oTD`8+EGid@OEPFjUoRiNkRKD.AZl22fq8YpKnD"bk(%?/8UqAe>_Po[0j*5LPRB"DA*O"m.!83,]idh<VG&$_m1V@S+N$0?e%%mZYdh%K6YPr0Z]2-i\Rm_*.3F?'mq#c>I,MS#KOVG1d5C0H&SYeEl-lOh7eu1God6Tn:[&Ylg9W"EpYt-64\F"cohO#>.M.,!ZL'%#%W+U+Va5rd5e="#-\`m[FGEf/3oq63ZFFeCdpQoE/c?J9$J`SPo!07L2JU(#end@gsTAROo&6A^N-e^#GY.AR]&Mp4_[lK7dXfk%OIQ]\_iH!ln#hnu$mt9(SNg69F;piWQD]u3C"7+QVj?T3<WBrnk[pp.MhJ8]RBu!=bG%?.e2p<h[5(>)bk,!bg8%d'UOo>[3lrqJ%lO$*0R%Ri:K!PfE.WnW<8GnJsY7qnH4kCE3;(^mJ/KP?Y2%]O]df#abr,!m448+"V09U[Dgj>7o!ZmfZk\^BPh[CC)\snL.U<,Mc%mN1)oL>4N5SO2-Y1cg:fpBF?e1MGqW3d1[s4+SICs%I&8TZ>hP46OqF4?q;)Nh:)^T-sDZ(gHU]Er2(V4g!E_QDc<FH@"-A+:VKi%Oe4VS:E8FC%e:FG56(0mr/$((`'Jk3+Fgrfo.Rkp0a#kSe)HroKPS6=V1sutl=DJ>L6?,.JPo*@GB]Dd$$G?j9,IDjC!KuF+WYS_%cGHhUL\X3CH>>Ja[/Q/Qiu35)V/'Gk'h'%^EBV89R,V/d/'bp+&`*0N]%]EcD4fU#h_K0,T0\8$c61&d(@F.@G8KB7j,,a9%MQk.%LO:EbhAqRWm_Fq;i7rMca*i5<;8%p@EF[pOoNE+t@,ksTj%4r;jY*d)Sj__LA]*hW.[pf,'`7FRNNH6kL1DthKBH6K8'KW-0't2/%:SH1"^=4=^M^NlIg^58N8o%F];,YC_f>9l:L&&dS&e]8Fc$A")Giau:N9H0VVbs%2`hDPCP/oW:,[B)S6dB+G$um^t-"2;2inFAK%++LELo<TP=MtY,&ZF[)q/q,p[oA4G@=&&j4GYWl-:(E'W+Zs8F^b]:!@@j/`FcXO6PTOT;qHI20GOF=#nlPZ%B]BW?mY#dFDZ<AM%#4N+d7g=@>ooFV4mb;ZB#CGl9D,9$YJ<BW%D<'m7gePJlD>:;ZQMko!?DO\%^83sZ#uC/3<1%8-4&*p9btttpN39'9?!BA=)iKd+%GtPQ.`q`*(?C>P10o4(D-dp+gGjimWhVgA,LsLcbWD9JuiPMs^=PJ1\X%e??bB,FtnW08e%(!NV9f^Oh11j:<FGeCdQ$`4h0n7=W%\1p,^\^A]ZnA(%KJK%r'ep;ae4WW+"2O?WT+2NECJ*`HUCZLq07YZI.6=Ot']h5etkk(HbEk'@m0DN2&<Ne$V\kB?]15U9/YqZos%__t4Mia?,(4a%ZV#?3N.WEsQ$d&6I8dHHqn`U^nSG5:oNbp/^f?r#j:9suhL%Zd-rGWcG\TAkGTJta@,(rZ$I1Y;3CKI_=\/Eb7,%!kDPln5)F^+4M<F=61Y>dobPdh2\fIDjfsj)3<qOR'>4Q_XtS@*r5)liWiB>[(CHU2P%gZ7@QP`@q[ne[-0qe"nt,eBB.)pknKp(%@ER?cR23@-b`d*+RdZCrEA-b`K3]*j#<U`gP:Fc:$58K63Q[41_QK(Rb6LM#h=*BC9EmX"n[dfRKTd^33%2]8Tq>sb?iC/a[k4L$%-">&shXKciUO%lim26gnkL2&R^LPJX)#4FM+0jZ3?`d!SmD,o,ElENYDk;#FA:s.aquM=t*J2&7="QN/VZI'X*0b`8.A8u`@gr4(%75t.H%`*sXlgV@nF1VhqkR^m/ABc?$k:APB;*'d)"SlL[!!MJ6,5*>sF)t!U9d7:UYaTo*Bbgb_!1!XD-5$9`&_7#n$?.?gAE158%T6KY**]#j*c8hYK)XgHtp.8%<LkVm'rCH$5bSuiAFe0C?Gt2!Y.5NYLF$s=5TfKHZ88LX_q_-Tt$BiRPR85oJ+Y\h@FIRA$-,lU5%OG%`>n]DqiDN2\2eDfEn^K?\7<r$S'oGWbBBYU@^gRH\VS<9``mj[%E09a;D2NG_g<deC']"dgVKqSDK)Z)'/I^pfC00B%hdgmT0%::4Wp%npO%bR\F3+"Y5;fWQV0eiiNZ2SEWn27Bo014B#%l-nVB&)CRGd35*:],_eFSf':'\0MH)g7P`oG0&,2J>Eir]g#b93+cku%anOcci1<sjVN3gAkD.6Q^Ho9.C!,.XS.TRLYa"Aii$u^V"F"SeTb=]4'daI*[1/R%cFQA1?F/]g/arCB=jGe6Em%bH_%=#:-BP(#%,pTR9C??%$,rAj&Vapmq*6t.kXBMd2*Z<IYX+OX:/?.7s3S)CnFhQk:AXVh([B-!(VGFu!$T4k]ULu7OP]!(U?I+f,"G+PkD$/Tm%)T+h04<&=:>@L944T:E!@l!7n8..Q^`h.o7s.l9Z)LTC*G$)[6X793nFe&)]1L=^cm!@ZJXq9Y<KfFm-&E"\F/Ng%Ujrpjggd\i6%aH4H\[R"kJU>&uC,O./@\t?%ga"!m!32"u(aS3pMisDa_j5&%ZI*8V$5E#KX-a#\u5is.L3rR)@b:h_FRTaUrN8mTqb6XiBQ;0]/%$+*A-+$TU4C'S%GH_]$7@XT.-%CsI3P7<L@lVQcd/CtDuQgW/cf=,A05.)5#hai(Qao4),cCE2N="Y:84]:;41-P1sps_'IqP@Pt%6,b*k)ujU5G<:;a5Un`g@6@N$kElpn1%*K5ojm&XaXjpI/]S9'*[6bN)5Bn!#ck:^Q)b-UhG92$^Kb/?SlTa,*sSKf>l!tM3#_;c%lr*A7dGP7PMs6?WXs`DIbVD@o)lH^n>trka?=[d*B5.hk$d"a_BtEtiJ#`=qeoi<,5PE,-K"-t)-Cf(&-Gp)#:UIVr(hcremR_Tn%#9HSM:;69aHJM[%lr*B:1jE:p=<>j=9]MKm<0.K!jX`4X#iFq$:Xb,sQ;6--0$VD;]8OfnR^;\<5fY6e@DrlE/JRk%"YCi*mNtPS%\!B.[(uUd\ngm-L9R$muL&hhI]9t),>L=?hr_okg$@etQaaKEK9[89<#H82B*/(d?l5Gc%d[rX2oqr!IIeNW+"nYRWK:c!ScP4+,%,3Y\ke;h2pCRX!7W1*BQeLWd.eV^=UT@kq85C\h#5HGbcG-%=$l0?Yfk@Ylrl:fZI/p`X`d:<O+nIU6*!FPZL!*>j?WCqDZeiKV,%ZeTkqXNnM4US%$CT#/Z=JNZ^M'Cp(d/%!WhFj#_%Od7:=\*&$bHJ7DO>:TWB"s;55*\!t+9G]2"V6[C.Ad1E]>!i4fkMNahZKrSp%c2R['a('"t4?ekOj"^#dkSs29Zo@T4p&jfY*Ls5:hq^sf;g'ubG,8R7QM0W0cX)nBL:pb6,Cam9pr@(;K=]%oa;9mf0_a1@SurZ"%6T4gJ7YRkC=WVqIFg9KP#c4H2T1k+-8!0E;dC[VM5Ft@$6$oZC'$PVT3HjlN**GF9I,1>:H[C6dL*A.bOb!6?[Y<1I)]$ZRGgPr$%5/]gf7i[2/.*F@+1-"/T]a;9Unf0StT'$Yd*ap;+11\Xr\>1\\,*7A0G(3dgLSYuE(&*LYXB+t8TI7KD/VghUbO5A%FS09,c13`i%=l(;oYMrX/pSB5b;dG]1,g/36,n/t",+m;F-.WT%oFlTLs*in`rj]m!8u;.*dnU#_:HCTS"s@$):t<jrFmS516SD.c4Nf*5S]2n)%W>GPa*KWh?n[sL0iS^ua!tVj!d'3J2#>7/L+ARuhHI+P:S&#L:Tec!+Sjo<O29/mXT.ICqZ=kGes#_;"aq<GOIA*6"--LfkAXNp!%/9Y%dGQKr]rXr!&Ok5$<g:@XCc9L9qJ&6"$K\-4)Q*kM]<gHQ8U3sfkU3n$.h/8\7(H/D&S`EAKlU`P.IBrS,F8>nu-d*.hLZm62%Le^0(a,eL;__BD]qaYYNh5pM;/+rgjh73U!$$P^Jc^IMgWX)SpLEa_ZNOJ]!8H:h7nF]V\/rQg_VWuO@>8Hc^;!cU)YhibNM[_bo%UjqpAf>GHHB8)C&_qgQ*S@^tM^OBQ*4H3o:.<#.[M53Eq*GPj8=!;sD19]GEe(Ro<S)<6dRV1sGZeG4Q&SD('%klhTps4`EX(TcY%<L1Jhj.G<FN(`cn-_>rF>pNhNoZ`tVF\KJpf8e23kAL!`X1(>ah-7J@38h[JR.\MK`K/.#:E?A43ACBc+TjiHpsZ,CnZB0_Ln;-G%gcTUhh=r_N(V-c#Ie!diPH(%3bS8B7RI03,SLcp2YD]bNB<R,s)km$Zbhh(TT23Q*I?q(gXEu%plocrgiUZJh:Q9bSL[+WO#L67'%gg(6_J'q<kKTfX&06MH]FCcZ_6>#GZ)^iLI#,b7L+aN[7VSWiiE8IL22KS=d5;1CEHrA`oT,q`&9T`bX9TL/lYtsiXjeQCMOoKM4%?Lo:F3s`Fa\_D4[\R!T)Y%H\LkM`haT'8$UH]#i:o['2odpmaK")q.J!mM#8DOG$Pm*g47?V0>KiuHnHBr8>>L\FIa@r,qJ4%J(O%,."nQb%rgh"1+E'A7g$]8nYS.AnFn+e)uDgBlpJN9,SO&I<o94Oeoi6XG/,,QrKC#_caR9E[;sR:K-5MWUSA9ph;3?QA4X\$&^G,%/UcDs?eV;$KWkFDm@3"IHhlh&b;[39jY$kpHMh7K]5R46dVjU3m/?etn(rlKIIl`bhgP5me8>*CY\hEt9aa(QbIXQ<>aD.$g[[j:%O"to[5337Rs2TVU?f1HNpCI8`+8PHAae/T+M#T(\IJDR75Q/q(n;UcF48J"4n0S[LKm7U4_llS15L6Ngl`\]Z=20lIIs(ANrS>Z[%mpEeWoBb9T&&4iaiic*qhnG8_ru:9\YOB5Oq>TcnY><K9s/YeCf73hkeVgV\pYu#G?QB'O>k!6c5C:r\oK=/'j4jKd;]t(E4LH\o%QoQ$"R05?^+,_3V>5`i]AZKn+%fc<_%IH2/KlER2\fPlT-B[AsA)u17#Zukp*ENiH%^Ns4dSrEkJqHYVSZ>_n0cb9u#$FTSkI@VU%UFauBaRQba*)e-]j!(PfY\ZfAnlI!9`ukcXYb\%qX_=&<a'#pf+j$()N>K94XN);hPcs[5DjsGHE_J0co!5P@7HKV7.fs5BDQDQ(%?IhK$qFi$->dm(`f+;Xs0,%e#[2`_ECQPf.b7X:kr7Dr42b!%piQMIYR&[jR3Zk&K*1$8RZYp=N\gGMp4"T?X7%ZKH)CZaE^F1'j%0O<FCa#,+9R&1un_QS)F/n%ro+j5ti+QuhkE=6JDi!,lmHm!-#g8YP+Ia.+j$X]9Y?R0R-0)K3>$;3]eVg=kS%>RCK:tV<Mj=)c)%!a/(Fl_Mi-]f^sWYH\?Pg$m3@iojYC]HBTWj1X,r--Uc$:O,s#-<fB6OF-+ihD6`E?;!K)PM18XE0S+K%^"0_6/G6eYG+3#ej[S1%b:T&/2j&8b\X<l.?7&T'8B2anMFd!S:)%TYi%iu:KHQ1.jWNrl1<W!uP=eltMRF(QHUtKUcmIdZ(E$j'-COY!_(m<j^[$]t@ia0(%qHRVT*(;WJE&2dG.T^8N;b:R?Vf[bVlZeg+YUD8h&^Ws-+JJPj?LmH(:@W;.b&GnGE'`B$a=G`WTg%)Ml]ES/$i0][>;cULbI#,*%7!?B$53q9la-*R8f9)=C9&.dL&c>Zn]9OdcG?[qfRZY/#(Mibc6CXs!TO,h!UU>1:@fG45THduL8s2%boBQ"/\ELRt1+Qr9h*@(h%<&fQ8g+9#O#WcWSbCZgS?>Is#p3)s6GLOa*(ltDbb+Q.c_Jt^c+7<_D^!*+JeafVUm@:kZ^\!$P#Pmg1T"IAec$*Opm5*EoDr6$@%a04D"$TF$ZIeWR5DfpiFI`:b^I/DpVq\S.;/[sC",hq;@^Gu/Os1#A4aMc0c9\b]uQ&XYD\J49GlmBT,9$H=5;Y1B4h+a2]/6eF"%&IW3uRG3S>%fj):9G#VCALbkkWPW/AQaI$\`en`U/dfHr,)A!WoJ0R/L^#i'XGo0UAi4h$'>qK9FV26mm*$WS7M4Ld`bhC<b/JPn%?;DoNesi^(=JK\42gJ`n6t%j@kO"6Z(uBGGka)0n%h&5$Qq34bXhn(Emt`0;J7AakLPlGKcERGZ)As:eW,EfJ%\R!3"^RL+=))S/%K&*DK1l4L&Zf4a:bcK!ph.lB$[QdNfj:C%73I@ma`8=;"PifOW9fC2o5R5Z+93B_G:8]L\$IWQ>Ir(&0fK.ucm%*Lj]YLM8PuV;T%!YguRL_[dFj"0*M/.<Cp$JY5)H]@@sGh+klYFL;.YHj>%<Ie9W@Gf`([RIXU.\!'3j@qP)_^<!G8.p4dFoZfu9pgPerWDmPfmPaj%H:46acb]p=LbZ2jCg4:68;JQnh+*.a*$So4d?)_E,0YT\eZ4KF_DUJ_fO[BSjGaYTkJ>`kS#o[Y#MDN2!f?-R5L+Ef/.V$KEaKe<%Dr'MC]J"G;H-a,K:*[uO-p0,TbO+nBn)I;UY9SBVnq?X)S7&hSX.1R_/DAsS2,hl0bM)FH"MN##W7UT1DXEt-fP[jG_p,Z_c.W5p%8(fX@Gf\aFMmO)&N04UP4S^^2R4C%/'f-]>6kn,(#g/o116spSe<4-C75F/q35P$[QT;;jTl;*"4!HFm)?,(D,Nr_<9WaUFF_g1,%h-09HDT1K0m'RaBWas2_QnlMnfn%K^Yj&;G2Bm&D@HA]Go$Kd\=K0/LA;II32_5B.%l28BBSGtgb]8hnNtL\LVZ/^#_?^loi\`Uq%3s)]OKH@<BX+l!`-0P"l&<18ZmR@oLAR/m?#7-XVk)3LldSMOJ'SPj7HOnIBMTja=?Gk>_MCRD(Z3mt0&nUnlIV#:36k#gqGF]3'%!gX2f`rW;\,$&joYEU&NX"sUdSigN)bJGillH;F)NF<4JY&l-2LhL/ZXMj;BR`tjo_$Wt$Sj2E]nOcr(M/uema;+9*N9r>OfPP.W%cE^6eW;8[r9(/H5b8:Oqjn,<7-6M<#)Ha1N<R950o@>iqN]tH;bWo&,r&[7p-ldcCaLVke4X6I+>e&(qQB-Dq<d?sX?5&^@Cf8\e%_XY*<msdMgcaIQO%\0<q[j`Z[F=P3rH0Z1bX=,_ElOLe7OW1,qI"Ep-n3al;YJ5gcWCF*Rl@k3I*Kc!s$r)Qm]#q;rDJ9fuZ9;Bl%f:K^aFoI]`$_j&(mpJW23NA=(Z)nm;`2TI9Mr6aN,3-H"*Mo^#V;ot%=BRL'L:1VU"H5mdVc!*/FH")Za*P&7!`Cn_eL8%V2JRTI%elI.soCm&a+KL0D,Dn$0e(6Z*ORF&;/86aj<L*%r\j=1aFFl:nA:s-SeuHXAg1^]%gN/j%8k_!/+Qg+UU:jC8Rh9ajq_PW`rm]fM%q7AdBXaQ5?#s.&sjO([Ep'*t/btCk<1>n=5?4)T]@%q6"bY&L>AaeBBGtA_Ti<!n'JquJ6bH`oWTreb*S"#b[.sX'40*RdtKMRQh%-#uZJ4?"q8Ric(ADWW5V@bb1S6<mKI1[>[`X).6u=dR5+7-W?,QcM*SG\kqWC`(T79=$7Y)Vqt-QFSQS5BVc+$>hWuW-Kg[RJYaa%\-,^/_P,eqe0G&R04BRb<4AED$&gejiR?&a,`?>oYbIP.$&_E!O.C8^Q<p01F(SX>jY-3`\nO`"VM.LUDH[*+82s#U/5+DZ9'bVo%-/mT6:h=9@&i#m/l.iAI;*ln[W['Y.k3Qb[,4F8YBJq/Y*J?sB.ET8a0_t028jVmf-06JM+O`1M9^LK"E*LWAdA.JL]U!G4_Y-"A%F_MVf:nu=qd@u;bMIN\lPiTQa.E`sJ8a0\mSaB^ANsX"TUst3<%Dm4c=_(nr(PTs&IsEk"@CM+*m^u;Fd1YS"Do;sWOf&l;'\&Rk%@o9kiBMrRUe8+l,GWY(A2Y(UFLR+K&W>!Mj"MU83gh]D'F!@u*gKBcV;%]BUe=-'-]br1+2P*Z#92KQICdn;?K12b&;QJm)gmU6M%ZbLU7d\gmTZG9rr(Gb%+l]EYiR0L7b7Z`TK^el6XSM";;3Lf+I.`E%"RAXnVpHUcC,Xkt(PF3f/'h]"h2V^T+p4!p'Z7qGR`YTAB%CJi`@4EV'lTGDbXkbV@4A\Em*?`Wu;S?QkaI^?eALt+2_GY$N3K]?lJ&L`UR(`V(XTJ'A8gY`_<C9?rVRA_cco?90jB!lPd'+c<X%m80?'9Mo?q7BO)l*5lO9!V"&cLJH6gK+fH2A%eh4JtXcopc[GLD:E#I\^hO<-]VNFVc34[J$rC]^Ql9NnX_t&W7-_'OE9#r>P>cf%W$p`^c'a<4U<T%m9nR8NoBLcZF/R,T/Ku=?FFT`mpTb=Y_e(D"gPX)HH1+V*N0edEi^2h.F1:tpTK.g1jD2c*C/Ap%Jk>$02/kK<%>B?iR:[/]JpT%`g$CK8dZR56p%"?@T[0A.39QhLEo:/)c'616ukF/IS\N/97f7=*:1#]jKbk;P7@ACsj[i/Og8R4D>*ucNP]YrrC%K557b4#\fsT]iZI]kgZNTnYBW)amKTNT/l.>L4N?"`utulsol]mV!!\7qK&rX,Z7r*8Ehm^,EX6qGc8'#5*A%R,@=L6O1npZTn2n%;8(ZPNp^kEF+SYIFcW"G;3?6B6Y\6_8/Fi,h<2d.n\394#0UbN4mmDZF1&roHei)-Uls1(DR-[,TOnD"k'2dr)PQMZc1;^e)$?FE%cI]q7F*$MkK1Ul.VE<\.>V=I^LWbDIM#.Y=F'635;la`YEU+)o(c(kAbq7Kp4"&f[cQ$ag>E*+dgc=B0#\p7.f@kg#9*9+EB;=g@%EC7G5r2m*mpUkIc7Hpg'S[S:5_#VB`f:62&a@9B#GEFmokE,#;D#Y@kC)";=c6\5Xc4H.c;c$+R*,]GCSPQE?C/<\)3e,'Ih[34(%"Z9A9"J_VaBC(B&lgV;qLY,aB)!R]B9:nP7V7i92iI7T4U8\X2'eq_57"h6eYdk%;d((R6;M1T?<+APcdHgJ`EhaH^Nfl=T7,qDn%KD#)+U=In]Z6Ab0Eoig![XjPTqpEAuSnUFrq@maVH1'GW5Rk<XTH..1@>3M=R6,d)0N1#$2%s+TBjQR@_KdW\]\ZVcbam.'Wk<q$%hlX"LfKfqhE)3Ao[uoaHokOKuXf75fHsF,U&q40^D`@uFNaC@XFaW#o$T%bj%o.3="qcMr/(j`FBdr20m`#FZcrnpJ.1^L";&>j'%md?(f3MX35)eJ4#mIf7q)n?$u84fXRW_UN0k0_#'?#7eE7f+6Q`9/'_$6ubRlTGtHJ@Kd+Dqd#&);>EYcYp#L?JXI;Vq<SFhHt0%%<8^tbOH4*Yo347ak5ZR'[ARq;S\O9Ihua1u'#%3:>%48<QIr9iXsIO\d&8^7M;TF!lGobJ6D4`dR%S5OYW1!93,4;pNosST1WR$-%#W$R*A(bRQd/E)mQ%Y!1Oicr^U445,7&MmW&SC;Crk53+dGpS%Fg!%,MH(ES>H?A%c?7(K^-&kLX_P,nl%knqH6(6cQrQlT_]N[:%AZm?,lB@Mne-f8nI_DjQ)>1CgC3j0(bB:RKcV[4!cdqEi[q]cN^ZT`po&lCWQY`l?(nT^YID)No;gObKSV4%Y&6MpgA<o])HT3UI%6Tsf"E6\'a)TD./bepBK=V4hAZ4RBZ>DIPd`Js-EWbh@^o=)0Rht'A./k<!A\n>S!TQj83?.=V2&7Q>RE/9@:lp<LX696?1nPX&q%#BXHs>_bu_qP%@oO$VHrMB('\U*W6['t+tPASIWTO@+]m&Y$&Z@L.=rJqM4"W;t%>],V`!ZS_c]Z:.4?aNGpqqJ.R,A_GXghGkJ?%dBCu$2Q*8.-bP`2ql4kXdoAtj,8rW@<n)!m+\MAoe*]VXP>*:Kq5jYNRIVFY56]u&Qk"1!Up/ba7K?YH]ipY<^&W>J8seRq78t#r%\Sb5PbH1QFC<b2.Bs7UF?d)V%FEc+6%XXX8SV]gkP[*h)[/DY*XK!MU-q8_RU$@a&F5T`uMlYi-E5b]jK/\"SRgh&eB]t^F.0.gq%4&o@p;07gD`T%C"A5`moO)6b3h,CLne7A(#hH&..Ek#cKS*09WX^6ARf%0YDr[:ZPbROoG9:#]!'jc#4_b2\.S1d/:'++Io7rrZX%6Icfo<nL:c`R1_[3;[hp([2GEV6*=!&2jp(%u>gPDK+tFC5D2qd?T>:!S3nW[FZpu6NoE^")"Gs(Ud0B/8%q$6L>/KPq&sqMCb5D%!Hr3L/n<=R#/;tb`'d@I`?Ef06nS[2J[%umG4gWU5P17a[b#VYo7jQGWkAs*"RLhn(-$5J)mgu3+$M6oGC@`\"pL(r*L,5e!/,27%^F/4=]Mu9Da]6K-<Q's,I_eKPbVTp[T]oN-)_%ML_h'd:l]*j7FX=XX(qX*HS(.Rk!$5I8fRmt!@&Gge5hX\50L"i4BL(jE[)TMA%*Gp[?cLj!EJgh!K)d\8rZe'Q(Cb9d,PK176*NK?%7r/[hohNor+<=b'4+"Z8^=8jY7S/6CY#@-:T*g@I/Qd^WOmi$$MI+u-Xjq45%hqC,@cfT21BhRn1ju^&Pf6ce[Ak[_TkSAgL+OcOZ!Y%`6Mbt2Q&/;`4e<BPDo<,2bZ$Z>47P/62C2Ldo$<(TPVc34[J$r[e4b%85%r&n6paM;U0>HTB(KI+@h;6_tpRd4UqQXD)L(KM_&)SoMQ9_X%?[NIk@)ObCT^SP8iW"=IB1\A*UV'r%pd69(UnE9@7rIqnTMc]P;%LV:).o`\<=15G0\>p0(q<)80=FYlq#L06@a<'!Hn%nmlqOZSi$/j>T12,NY2H=`j@'C:$Ln,pK!d-k\5kOu:VCoq#jIV\9?4^/FB%\9F_-R7)$Ls&l,6^'5`#S8cKlPN>82%H-,#DkU+$Rohuns%j4[#^?SY;iTeGF:l?fB!pi>$0q__ZJX(9l6<G;o1Jt8]Uas^r"8Ss%L1/(s6''V-e;^SFA_p3QF^ke_1E8gnl\7tT<O]_)YT&2.H5.FQ%30PGSZP2iUPJtsX.]t'TL+_s+WEGM)]bab9a>m;B$0P:0lT(r%+Nq?<F>nmn^ePf\)uMO0BCKfO)$*A>h[R2bh<;LmcM&Ia6K8UA?TX'&FI8l(Ma=AR;Zg7XOOoK_gq+U)I]-lrm\)51pcVml12>?G%Ce`$BkQC4]FG`_CqImQKHRWmur%5+Qk?e;Z9s7W?ZtH9d8u$s<0rJRQC`S/a-u,n=W:j'6d+l=67^+u>KoIRope"Y*CT<aB\DOS#%k2QARX^6ANf%0Y$2Jr`J/Y%5cgP&QCp7bDQJBDpu7%afg74ir(I#.C\i?,lo<nM63ZE?R.1`K8t[F?UR7qYFdKo$6eYML$Ae?Y).%FGbruqIH^/HhQ%=`B4&IVMPL-`Yp%cHA'"2(8K!uZ0tdC3RQ#]i-4BE4Ts3\n+>[l"Z6!9jIE?jf^\EiU>h.6i-R?%[R8\*)n8hT%0^:_h,qjs7gd(?C)H@e4'KfK2PH>c4*mSe++WT@!hPUM0.4Yf8IV#:31c%Yu1^jR!Hk5'*%0k]<.fL7n^=RFNHRsn.kS,s;\DUoI%E$Qja;=K]c*^BiJ"V5.hg)egBn8LanS]jt#E%e#mk)P%K0%#pp8&<*f:A@4E_,KMf0m+Hu>&VPR_ncFt5^SF,i%Y;oWso;pN<G)Y%9L(?U4;@=n%R>8T<.'GD.=5Y3G*Frj0d)kCoq!W_(lf,ELi^<%2IPL7i0/ihoj5famR'@$@Q2dE)q>\8eeEX5ECA\CMI,NXf'B`!%Df)&[A<ZX++qC!l&j4OgiTlKW+RYWqFI!?"4G8*(.L]Btr:RK@BG:*gmV*BKdbsFY4bL6TD)KK(SrMHqXgQ]Ns85#a%ldf6F/LR,%^$\j.@0FG,n6?+Kj%O^*j3nsd=VG61]q-J)HX!%MpO#.6Lj8231o0cPAp^k5:S[,gDpR#"[HI:m0&H2>M>'[$icecb#KA^(=@:(e%XB:+pn$$71)rIl/%3490@a-"'_hp<rI)Ch!I!ihh21YT7/(P:&%4g!PndR,3)#51OXF]FO<33ps)cWp7f60uq#(phjZ%eK]:pF>>%KShY]>^M//QZ$!2L6j!D@LY$KOCB4bmoZh!R3/\C%5QhF@LefE:pGbC+-C"A2"*[a8'Nu_R,d=Q3&(Z`2jfsWk8R%;Z1C&=R"OQ@%7a09O%3fERq&M`%iTD.FbQ7>F+4_"q,<i1PkSl^e60Pp"gHkHnI$g\m)a(4<kSlXciTPLTYQgnAn?@YCDtpQ[[<V*A29>S'+#Zq)%e()8"%JSC,mQ5euK>RA/NgB-NFio6b)Q8DTC2Gi`=1dW*+4d$#W7RWugU_XUOnmIi[)7Y.<.f<RPhgmt%IZKt_\t#=f.u.Zcq^>E%BWZi#W35!A!PeI?#C'?tW`H)^GAHC>rN<,dh3/+cS$31)pG=?N#t:\l9SQFV]j]KY)Rp]FU?]L7q-Hk,<*I/k<hn;1S)HW3ZD,.W%LUM$B+7;,p!Q26h^&Irdf#<!Ep$asKp0#NbC3=5fj%R:HJ%_`aNO"*eV>r?-_4$Pp]A2cm`JlRK9XT2_J1eO77^6/]2hRYuP6S&t%D.W)$H+^%PoLaV?<inN5C[1gLHXD65IL/g.>ZBktRF.hX:5*PCaX_lu`srQ/3<fFFRk!Y:e\""A8#s[l]"AMiFc,!R3P&.u=eWUD%/YSC<N2GF[.=+d>[U.:P^UJ@bSrFmFeKbT?4BO#8pJgdfU!L0;/Th=1bX'Q*g,_[["*g1Oa*P&?csYS^C)":XmqIbb=$l\p/QgBb%E(Bl.=8?o_S`,!uQ1Hs4,)\.F01(f:e;'>(>kE><"Xj`C2XI=5S1_Vj:F(UG_,BN^[[,J]a*R:Vd/b-=<hn;1h<`UhRO"pk[4qSk%\>'[ag"V.)Xl58HSb#qL*VgQSr#%Floo2h9(:s9e:Bff1Bmd8,U<BbVGk7o);ZM$!.Vl@W0NtmLpt+(rVq<TWq.isWWrhB&D[L)W%'*7H[7X8l$Y!#pgf:K]6FoI[kb+s]E"FaelrK2f]*(s%3FI.T?Vf!q'TL;c0RE0+0ZbDXEH:@8RlE'9fl&@[=DWT$O&nN4>FFniq%7DgGJ]ugnch&`M>:k_->[<(kIh3AmY#Mp$=idSg8Phqj1Fag29O0N-1-?Z7bNHKh.ekHn3<XWl"WZ$Drdg1+U^!)>#*+2@?*NYlM%)t%;@GJ38t[9ERZhTkr/r><_=gFP`.W#P@I^"u[2hlRYD'B'4KU,#6(-8[NI;k/oN.Aa9jhL<XX>E*+dF?X<dU6+f:X_M<6^Luqj%225aZp"K#H[a*e%98F6oI2T@0Tdaot3;RqkKs:e&@45e^SCMFFq)Z*4`<[r4_M,F76`jM)AOAg[nJgbIN>hU>LY`a432mC3FGaDh%&(^'S=))TC^Z:G!j+;9RQ7sXF7\g]mJK!IJ-!IOlZN5ccVG9r&/fg(>J#nA^`iL5`WCF-S](0K5\429oCi(>@BrJp$NM%)r-Yq91%iEJrfYP@3,,],6A`Daq]E=?l__Ut)QhNBeH*iQo%n5sRBm1at!k02Z$H8Ee^6W6aa48O*+:WSqP:iAlQU-UHM%@uMWY7K4M[>/[;%S\O6Pfiisn8K.HJYf,-T@eHN"X-jJ9la*NQ(WlJ77>6Z=1\%l!,%Vpsd*PggfIbnhUK$J6k#1M^`E<:mqE:D?g`BLgXk0o"mnK@d%Uj(W2$gW+$>jG&Y$iu>]B(9_OAcTR]X?$SBbDXXL3$60r"-f(el:*1C7I3If*Q_Q"i(>$2>VI(1%qCp901%qj-t]8nXDfjQLj;E!%#,7Ok$o>c/<Xb$VQshD69C3!s3$CmcHN5kGcEeabR#dRF`RNkiR/lkBGZeoBF/0hgbj`]`G3nc,^]8N7Na47?E%N*A>W,`o`%i9P%R3FDGK*-'1-JY^SCI]u^64W6V2('T11@)C9Z-,DU7+e4S\dV_X8KG<g1"pu4@ti;JChSJRGG86EO`uq_k[7qSFJfcFR,nB6^q+Yt%O_:^k=M:8#(r4%[BGfddNkphSh$16,IjVALT%_o/Gdk`l/"_OXLjP@A#S'[c38_Nn2=FqpKs;i$Tot*o,7@8a,VtKTg`r!@rs4p'%O+:bsc5gGSR>iO_.'fr3%<h209LoaSi/81hFG<(V,A$;Yj*?\FSibF=38fZ7bE0^UqSsK!(^bB*(e8o]7h-bXd^nl:`='$%FW(mi%8&LW*>eF/`,IH+M%K)a(:E-)HO9&t\*8KVBIjH`g:L*9Y*)2B;1oIP_':3GAgT\W[QOug5I'`,[7k?2:LJU$j(rkKVm3(ClD#B%.%$Ogj,lcLBhS8jQ1hG(c`g'5`'bk]e._jtI;?fi1,7``um@)hAs@Ecum%`ADgHjIER:)LdYSS/kthN#F&gW]r,E.9&Vp1LgG0&FfZ%*#>oOo,]=8M2pu"AU6WA!f14/0Z##MQEZ>[@G+*$Z'@f2!JI$-QsO^/_1(c`4)hDeOOO%>>:UNYjY*,@nN28C?]RUqnmZHuD)g<0%+_u"!pS_J%]g<_h@>CSHd[P6nLsYNW"7gaoL@f>l)W8EuH+Zn!$ZG)'[JYH8M^cm)*X^\ZL>G?`L(X-K)1+=cI_!E"lVDrVCV_l"%XjYs<KE71hM2'dPm234>hebUYpLj&#mA[dio69emL7'DFhrfOhD+$n\b2V%do@OnY(T+)sch2he'kXnm1(`F$jN6;]*@He2geK]=%DJR9(^$TD6lF/p=f4j^4NL[c92.mbrhN<BP,@%HO*TW!cd]dt00S"\Zqr3"+4^J\Kk>5V8<hrgR#2EW3N6o7-FG+":a$G7CDBi&`%5Eo+DK6p7X0DNMoMGHt_nIO*^Sum&5jr:r'l<,Y;mH)*rpr0&D.$q.6?7TN>+e3FMdC-<71gN7W7?Ou"GMJ)3ar>6NQJLqQ?:q!$%a80qnrYfWtoq16N'q-8!PKZ"L2D-tK#SLhdm8M?3NIG4$Z:i&s29.4Fa=WuH)FTB-aSLi0L`cg#g#76W2%Gr2\LPG#.gp@1TZ'M2%gh^h/j>Kmt#*(sc)M';a4/lXH;CMm%Z7U/k-"R$)Lu*nB.."U^lj<c.E>o-\-NJ`$ib#1]$0;bNX_]/2;[S']PBIfDF3%1CZ_Cb5%&'d_C-"-<EU6UBGgRDo'n-"Y^i78eJ/FCN38Y/S]'9(&MMtpi!a1!%FE7t$[JF>ehhO%1s.=mo(+LEd3S/\HN)YCnRCeDehNuT^[%dS*#&^G8m]ZA=_",O;>ULO.VTGr-0h>$k;L3TQG0=rh5ZAIU;hOT[ZO<mCS2V%L6meg@Hu7o'-ufmm*t/BMX8(;2kD7H:O9MF&O>%aT:>cC8Vh$6ui`KQ"0%T%#9gsn*1c!n<4)Qf=3k\2RlesU+;Uo%;,FI(hHPOXRki%Kf6;g"/ltk=u*uHnh0H_F52rk4eP2EP-Mp-%Y"M2&D$DVV:fIXdfbK'`q],nSCi>G?/i4c:<CM%P`tG?OXHke\2B*"d%ZkTTl1h,Z2%s+u0VgMK$joKuac:o0@&jkH5+P.&DG%k8%ab67TmZN:IZJ*_MAbCf^`6,7+XJ=JId!EtEMBiZR'^fOY'at@%4^c4/+lbD9h$c4Pgn<1STa_c>WI*qI/u$U,9JEWjXu%B<`<M+!%JrYXF6Zi+/H6<p_7ARqR6%fNG=[OnD<39#g=\P8M4IWgU8S$7L5gc=7NG1s,Pt$)E:_!2FERuObLVU[H=;>p(4@@1s[P?U8VRP$-%O8-T3N`#'JWFoY[nB_q%Y0*gU(?CQLV=N\18KuS'_(ZQ@9![`*%S`PjB*6(VkthrBd)08T^BP:lg#R4*f+lOAYQht-1`NN;$4X#V%jNM=5#44lHYKC[gJZcq+(*IPrIBu>n2:SLkEDBO"5b"k[>ZsO$LP7@KBq@/S&'M&4$j7J5TpBTs1!b:OOq:[_NZ"PCnh#[>/e]+C%)(qtYfteVVDOiFb2(aXc",W.GZV2(#Kh>Cd2D)dW;^F`e/Ekms+s!DO!?ksia;nn^![_#d!99Y6Y9/SMJcQG#fi>BG>s]*oWMTa*%"2]!lZQ?:=Y,UN5i[a;iC=-K*a#%56nJ?h%19tg55e/0pe;Ygi//n4Sk:I,8X+OI\c3qFi!97Gm2f(U1-R^jq@R+*X)#,$0!\qi&%>ZU6-g)m(2.jhi51!&`O!Y/=KCqX4.Jk2Bd\nW9Q>ZQFgGdeDAgXu;eL=D"LH_h>Tj/,rZ79!.EI4VUAA/\js5VU&G10_$VDX-\S%m@FELBmX/fSQCN].bT",@^@C$RB-Vd5?f2?AM,`$\%j0J0!5$N#"(c/+gV#R%"#l/(;`+?nQe.e+f$_%_.j>r3#Fm+3mt>1'Kj9\%#XV)$TtIKVjNt&e]</BqR,LpbGnXHaY95mBU@0BkWq1i\Adb_-$PMjCQ%KMH,$\]Zi,rnI_e%SSK+>o>=Y8UV0iYq0<_`"eP7I=6%,"_i#aokg;rRcZiA%EirMVQnF#-_f,(39qpjd$LH7lWD06:4=u=+Y4O!&uj!m8-mdJ[(F?>hL:o:^q-]_.Hg"\ioX],,DZu9g6eN%ifrrfK_^9)enQ@.4-MI4nD(%#j^>/_o&@Ko/?TjYq/!XP#mt8]-+4^"#U_#M!k.&inC9;@+9Rse*HPf99`#eHoX1W#_ke*-0SE\1%[$J]gnn\i%HfDo0#iW>I_.p"t%RRC5aJq=!FJRA1%\Jk^53+&i6IK$[>t-[biB1"KN#0<1UR;mh(ME$35%:8N&f-oUc,tSORNPGY%Kp[Ou^f@_=1e1pf:,ZRA'Jkd=S@\rp;krj(r6h>:TY=K-IjAVdbodno5`&X_NO)#q\mZW2dNuA^gT4TLnI[!sr/rnCXUoh02bR>b%r?=H!](p\@*gVN+Gu]?=7P6#!jsGEkSPmPh9"oms&hsUTh.op&U.<F-[;+Qe`#d9<R7`S#*bS#>cm$TM(5$odZ<BYKZccs?n=jBR%%"sCiMiaYmCGo:#rB]g`]%j>5>Q_7XAl1GH'82<YTA\MADM^BC6G%%<W"E5Em4BF\NiY3QN@+uC=3I]6VJIecDm-0./;kk=Kd3b'%H>XS3#`EUocGp@Sc-7ukGu3i>7GkI'B,RVu)1hOFKtJR.Z.20G,5*C)+#!uSLg\[R`'U'P,)fKUL5Q0#!8I=4D;/PQTu^.FP"R,E%(AK(>9M!TcfP.K;`7"l90P29o94]aC18[rR()pBfE7>3k-"q<U`[QL9*J>J5k/toYRq[,B:-f(Mf4`YI;o"<bKWu=^G(`@8j)g_m%Rk?r+0@Y0q<[<l)2tY**A*(Bhj&/8r5*cEZeMA%s2=J"m&2DI\O3T1YX[%ID&Xq/V!N#Qr]b_9I%Xs/#$]PeZb07aYV^]B&!eO!l%7r?1Zl6#QWfIU[X^BjO1#u!SL"?',VeM.em8j%/s3Is\4GhA)i@?5q*U00+FklkfB'9CmI>QE"trO@ap.34)?hBl)+bDHBs+m&cg%#dG6U#5s+hE)3Pt,A88]X&c,gP8:L\cde%S.Hn:iY+g7\:$&29)ZB%?N*)'iG[&75NEIF5+2TS!H1Pdl9Ve=We;I9=+D5(3_ITu&%Jp#>ZQ@,3><Ztg`1l33qM-Pk&(V^d;(ut^"?<4OC<ohg`-A'O/a:O\T%bR@39m?nPUggnIpOfj')g$"'"UbaUQMP>&i3kW3d]KLq%Q(UhqfA!=8+AI["Fu^U29diXc/sca,$?;"rct&KuCjAWI1+nO\-to^7Cl9T0,O.,6'W%DN"cr_H=ghn/N>d.qpg_n6=9(UuTN?+F%`*oHs:<f]*e-Shu.VZUF4_csTT#XFJ4Oer+9NglO&a\Efk%.uTE!0A[c'D7.h:^u24e.<ZU30>/po91ZD9*R67oB5@A'Gt1k9NA"%gM5D%2;_aq:'lLn4JZ/G?Uea:F"UQ9;20lCgMjFl0e#qMjQ+C(8nKbWaR3SiD`lY`mP#I!<s4L+>Rmd+Dk.doJ94([&K7\8^fn5s%%[:,8S`$LW/XO0%VPYuu;Uj0."N1LU%gQl<Qpe9XTT^CN&#hAP9S@;d80n,\jC(WXSEB\A5bP@0$A:*D*W\i7;rt">76(?H7TNNT%(nT!*p+[sr#+9!Z%lY]_R+4?(rqom1N=XMr#A*iaq?rP3i8"[!L%lDD;.Kej.'k"L\%o2T0)I/e.:)C=oua3\!$RlV('sBEUS-i1%YT3:o1;`Ig@ZLOjQ)I6X*:*cTb>^(-'8[2Xbu@K:'OZS?+kaAEMa^Pe=)Ee<"B2#+Q#AqS^VMBj=b>eZk@$E]E:Y>#J4F!uPF@nQ%T.;Eq;TY`tBl$Eo^3fQ8.Sat`rf1`M1P=!\"U^r[a\Mf.I7:=J.Q+38O;W>/&>i$BS=#-s6WR0r@*C3@A2:J>ecR6Dn>FM)N&95O%An9qtYnhUeh>E-)/3VD]Ck#k%jJEM%TMW-%Qrkrd9\R2R:^K"WK"A$!;F+52hBHkF=!eUb'Pcl]-)Ee%o7joBBT!,_0_7ugkV(6*%`74aWU^[RdbaO)Dk%H2IB^k.(>;`%3!mZoF1:D6kgIf?&66dYT=n&X!9Q40V!(VZr'NXmZ4?'U6)Jd6*GS+UYPRMi'RmsCJ=^f1J%Z!XtRZ<*L.=@kdr0\OEYq#W"$AmG^\5LSM%n.rU#V\!ag/-p\k>ShT*/;4gjJ==$+XTonCLLku=<(+JGd^:j=1t[[UUU+1k@Gtau%"ZqFS:JaTFDTo[:j7krq"O.A>m]$%N!nVa\EpdO['Y!^tNP[+Q.=LgD$[r^t2rUcemM#6pF_B'8%O7q]mRjB2*NFK_]R?sJLIh$<%=)&f8fd%OSe7`cc*h_&c=kP:MCYWU+K3aT7PW!,.2*t"G2r8p6c^(p@_%pS(BS@40Js@l[iM&W\CR[5$$D=5sdK<AQE@#G@@'GTh%B6%h>D"!,._+YOucY=N<Hq#[B`q/^W!0PKs#UF&&n:`R-4!IU&f'$U*Fbn`f$-:&9aR3LT91Ykn)S6oOrF!`Oh"J<m$BT*W71#Y@%VOI1^iE0`@3B/NIF3Y@/O#=8[a_qA!/Cemf$klJgCn,VO14>tk#\IL:.Ym5Nc`3cA9ZDHVLh&(5)9t4]@`*?*=B.T4#h_hL0d_"[%b!]BcB*!%A(Cf?#M#lT2bq'lT?618LF2<2h@K]3"Ah%4#`QZif"Dd7`=mg-o08lB]bl%qScBN0M_?/l5gh?f:QcH\TNkuH0MV8,f%MWMk[:C"UpWF&$oUG+dC-A^Pi2M0<D`H)'I]uKeOR!Q"%Bgp&&>;QH*`ip)<1LMlQ-]rZPoTcGsj!C3<Qs#,g.$-Y95Z@mfq&VI3%KKO;nM,fVTJfU$!+A;ro=VF>]>9Q=8*C>32HlKV"@UXGX9hfI]k9nD.bTjG?Xe9-!<V&/4K?h^))nCfDeYF<S9/eo&ZC=ENX@VO_%@YSqL>@uW,;f<8Q!-Er2f4R[-],r(nmM0E(BoZiG2f5@lWuV^$N6pH5=?mLNlm"*0E0UdB"4NZX5A6's1ImZiclgb*L8,s`LRS_C%[8OGASfXgI5TTa,V-@e,YXIV%J6,Wn@q@O7(uTap"d0"C(Bd&2@_9o\I@ShYbEeN;&\O'.K0(ig(6iu4=>)K=#4s^Qm)9,4if^)!%A7g^qXf<+6-+^0V*%skm7LpSud59[ZWJ<%84:J47Pi:$@,GYoXM:D]l+bI/poFNPrRPhDu16`O1cW//7?6IP^XEs#lVMf%LUD-F$%((i1G0%BJK!YT-RH@_euSYQ7a9<l2;r8?:e/%f:M0HQD[5W3$#5p/!IS&g?UEoF]6&btNO4/dB._jb]?5b&f)-F8W?*J'='e?0u@%'Z=D6#Rn%Q)Ho-cdnR5n<J;U^n=d`jPEYhG'dg\oCdeT!e4r.*f#/-R?YT?C(9+`nqlR(MQu&I6.jIk15i)q@RVFEBrM)#H8@]YG%_OtkDm@N-Y#pQr<cO,hg1C-o6cYBA3Hc-A0IL:CX\ht["S-HY>eU1tokZ3>:$&pj1!&AdbqZ*:M(11Z*<?!g?:5Gdc?=BI+`j(`U%]FOP.!8\MC'#FrOlb"S`%27S"dCBL?%RDfQc?ec[:='JEZt&i&&9d+d&jY,(0f]8)Ic[^)]$dgX(Cdkt!"iV2W/,9D+.'*T3'lTi%"tc=>S;ArY2IhOH#j>`f%l4`_X]37uZh^77`:IFo,2s8Us-m?G%F'#m00G&4ZQ[@oi46m>Kksk!c[^Yc>ST'u!0dTmH#Zag#^'X-%8"mu&:]RAX]bE\cUJUqQkg>8</(%t!UB+AQSYHEVBo1_*F1Xp5+6(@g37bS_"arl"5]GECSR5?`=9.N8+P8GVX=EMo9mP=SVU1Z6%Rth@u"%)2C?F,7);cH.'$(Dj7B*UN6F:YVhg$i%'<WaV!n`iPaSKtU<a/r]:^FUqn@F_Rr]&/qR8O!QWAu"0p[qZP5Pg$]AT/;Zo%$TpXBqimia4k75aJBf:>&D]^SV(i"gUAnoS]?-8rZAni)ImaW%n8+t%S]`gkgsY'e(UDs[9^m4[1PfEP8@qAK3=$0b22#EVgW<D)%okrp3KSqL%RdGr<T=HWTf`3_4=ul.N=!%5JVhPe\Kj:q=UlD&5*dj-ms/adP<!PeYUKf\H,#ouCAP2N$3""IqSZ6=]T+PFi]Nc16%E)Rh\[odi@Db79,^cInNa@D]pOTCBCWm)%;:6bXHT>B=,\!dW[;p@8j+D2UU)Ze6MdZ8]Ng1ET9l9LVU\<NXJ6ICDo'f`;l#UVI9%o-mQS=rnK+FSH#;]l&_&VmXj9'<2p^+N%hT_#f2k/[:61-umemP$9,Sb,.m1?suMX?:B%`c\Y64AG4TG&sIYBN$rF?Y^BHp#>pA0%MDEJ/6QB3GDcW!h&YV"]jl3'G"3mP1C_-ZmfKl"!<58n^W1A#4jP`Qn91@<r#Xs>[aJ64M!ep#=:O_E,@4cLdfLH3LM?Z"mbBcp4%[olLCLLl3<UH+l5Au#=o6DD#]*_ja-@iD?Of].eT=lU&tr8ARQjPX0/Lpa]'B%`.;Z1UOQ\_uJ:m3lZ]l#g5?UI71M@'(06QhIuD%5.[%MKFVCOlXC`QflU]=M+66<oFtc.S,+%&m>#n/@BLj(0bMAl#sHs=:!72u`F1#"Be+]P9\)!M_$l-c[VcuMLPo>MO@g;f9f<HQ%4U>Ir!dOkS[G(Zf#".,J@g1,'7aip,CNu6[c\ddo]pHj2O:tO!WMeASJda=HaHrR_3\)2,fJ!";L3F\C<@kkU8*t3*T_tf)W1I['%RE-pf3"'h,+9W#/'ehu"X,E[@i?!S'#GU'_BOh="U1p'p6clnINXpY'N4)#U/X\b>d9=VC]iE6^^dOZE5ns)G\mCO+jj:J;FkGnE%Qo,6_Yq&I+pFrWOfArZ/TrO^VW!f4T^kX*]qV!SIHtG9=A2'c.\o1a<DW&DT,hKP>&`f'!CAq_;?Cq$$JnBFe$\e%ZgF9p]$4]-#%S&!#O8X$/&_X3.?JWYd"]r<fO>8a/5@5Yra^eP%A-o9FC^b$_%+:TM\6)bgX5U;O\58"h:nDVM--9LduU":enKHU_>&+-7o+f]+*%iRp>m1asW5KZ%uVg<k?ah8C.4XD"JHA3=?Up^.KLJXlq8Ygm;6>SbD^'d/J-O>&408r;Js@[90Ya#S@nh$c(S([7sIq6V&LBlc@G%1jrs]'nr'!)7D>OY%C[6#YIe1A3ce(Op(MQiUh*1K^dV,&5ZfUPJIpH-<l3Nd07[$eoetKj8$U^?"Pqq_(SioK&H$N[iKoP!m6$n%$\$#@Lfk=,lHt7Y$mmF?+r@qOAdQt;JF&U7&HH:JABknOems4a&0U3N39`247eX>cY"PQ-Tk!R.0paUn`[qXn^h'\;<n/W$%>FY/%U?`RaC(oM.L_%-O^jC9q<i"<N"p6.2o>]+6H<DhKEt'V.l:"9M-:hA^('Qi5IQUp`Hn&mC%J%"akZ_$*N5p*-5=\(dPbK+7-J*9t%-0W&5@Y(1;A\p\<Y98IGf1a/0Xh&nPgIQCN!>*Htn^Ve/!.p&MK0[.#:9$CGnUsnNOfR',=0]Re5q!(Ac>u&SBJpTR`cBt8ePJT-%SW*tLeaWUOWGOtU7b+J=ZS(NWA$BCE$EbWm(Q'@Q6u).RXN4DG&UMfCq@;p'AqT=L!Z_mr\D;?5W)B3'1`DTjZa-?oC5;ScI^?F&%7^f:O&=>+SleTPk4-T!H$o`lu*Ug/$&b@bSHf#+o<`]JqR^O\`-C@eYlV;1cHTGfpmQG>lX+h1G(9bP^fBcC.<7g/F#W(i@1[li/%Fn$!C.s!>ENoL5(TfaH<+,[%OO<[^q$&^_.2Mg3(')#60J7/W?[QJud_P^cu_3*sN[&PR&D)4TA@6/EZ-Uac`.3XCA+?68R3=9VB%6\*7tPAO[[[.asecg>IK_QJ@e94h@k;?+VoYJ,>_mcBqq++AZ"h)p2drTi@SIK'^uGO\^WJd%qRJf\;7Kb`XU;(LZ\_X'$WZ"u"#%<`C.E"K!&kjj_+.1mJY+!GYn>O<DPC@pTS1:MH*A/YRkSXGZFu'lfqLSbHY/$rk*gN-so31l@/(T$XptgN:"_B7qa/mYJ_7=N-!0%'oIc-j2a-W2UOsR'03noeaU(_R-0q989n%p<TD<HXJ-P1@#tqY66,RLKsU39TFt$f8m^%_CdA\""#iK=$,UgB%;2[J*lcZ-pk1F9%Zd(c;=:U)FEpa!!I3fq+ZbmDR"-6QmE@d(C.*&4UlC#MS7,mu,^gQ2DYYetb'!>E(goa8b3AP1#U/qp=!1eQF)W*di],>oah[GrY%i!FNph^kbSUU\PdS-g5OgJrlG&9B^ME>%KX>3%A7c$CWXQ=I>0(JTe*PCof4)q^UpG#h5qLjXka$T3<UUU&%U+Y3Ek,Rt1DC<7an%O?n#"d2@;sg?WLq6$S?mARY)\@.f9Zk(cSpVu'IfE5L*+R(ZI=2DV.`7KELa^gYf>Y]_B])6^BO7YlIHJtNlLOoC/icZSr'[\1H7%L&Gk[(H^k9F8L_=NNGGY?A#tZ?8YqoB@B;DKdmi\"!OI-RV#"o5`Da(G^rkGnB!8,;kBnal:o+iO_@MB%(D8Ba(Z!=%r%<5X0."f%&Cc=?JHY-s!9ETh9]WDc_h!q5o>l\j$E'<[XiN@03LB8IraGlL6_1?n)Bl&!=VZ!Ho,NsRZ.lN(H\;eX=@FoAEt8BS&-6=oca1'T%l"=$s"Pe(>eEk6p6o,!E.6qVtZV!.F#o9n#eD.C`Lu<@g)%5athH[a)93!EL#'>jfIiq(N0'\>Vc'G.\,\7:`7c9I*8;dPp8Us56%@R@ub/9KF*W,Nm1g)/aCP;X@d1q]EW"hcH;?Xrq&F>pF?Yhqg6V[LNO+rJ`RUR*tqREiQLBE_-G!;nPaK<;ZI(1.-1'SWhnbKhan%"P;4UJ8e:c.@jSIRd;9T"ERFa4_DIT8%9d%5>W%ZGf8(JJk$*t3bpo2Lk:TPK'n/A)QDCMl[]j)klBp&L(eH)Z&Ig&]$a45\@":/%c?>`DNODqX('2I%NOfm])8qn"DM8h>d7:kEW_sf(m.rh4&hL\T<pa*1BT\qh/&@U80q4nDUaq2!maV-i1`?pN7N5UlHj:qHcAX/N%8XJs8O`'P%<un7S<Am922$lfY!Z*l-2^=8`@;5$2rESuNDG30;kQon*I9tl>5bb0V#o8uDJ72Jdi/BK.X(K_ToSJ8#.I.:3giQu#%L;]bOC/`@$<c(h=d&$/D`3>nI'B;g[*.fL@_5`0-5Z2_cWdBj,C$7Q&&=s+3[HhUEXfbh\._)[^k"?%g0j,b0.31ZD,6sE>D0elm%$7<f$?dYXmnu=d_@lTVRN=;OIg^0Y;Hqk/X@aqX!%is<I")^)hJiZXt;#e-r\F;N\IDXEBc:R-e^g=^uRK7is5ldQkO3Yo<8EiUN%U.4oCBjoI)R,et*gS(W4<0*Qg5ifACC8<kkCj[U<g5*?C37*hV1S_)dRRrIXEN_5=A0DMG[u;$b"^CA&NCI2*?5:p!n<BS;p/SQW%bM?N'[O9Fn#E_uVbaO28BW)_X>fO#NAPA1O12e#T"sIr'd0r0;pG<WnCJ<bWGcV1Y)sESf:[$rlYDh>a4BV8!%uhmboQTqLc!33O%L'RZMo,jcOdC.KRitiG))WsgF@AXF18V4SkSKH68oEBqs!VT'6(]t"'C".UO2ZqjJnuraLS&5a[9iar4,!6>(Q-@LjHSKb_j!2!+%HTZL+EFDA\.fm[JOkq.(Oj+m]B#_&0jVV9#;;L%N"E[0!6'Jf[Jt"F@</<S'3V=c$QL\ck,7q&q(<3,/ThfH=/WK,kpc4#A^s`ga%7>lDAq&Uo.C_fqLF9YL9!BQ3`.\%SIZSB]>IaqmVS7)5d2-FAl?=ARfN;(27e1c>-SO*]n>7=sA/AM&IJ;8o"(Co+6YJ<_g"k&%p%5t+Sd"\QBC&%pK++=fB4:^Y)/OoKE8+`OZU5mIANI+3Q<[(,uq64fjG<Wk&_9V0P_<sV,Af4%3-*m\=^C)W6F)e"M.lVU\F9@cdF%Lt6(YMQH"\&f)NeX2\)QX?`J1VWU]b>,oL*\K%V\T!21Ybo"IZ/=rIXWlG\?H0,4N[RV(,)q:IhE3@5p\IbHL_%m5+TUNK*42*K\%G..go,nJ`eh`+F=HGl[IT1ORE*63j9Gk>&Y.tcIu4Xu>'7)6$bSI*7q)OZnc+0<*%6aq>cW#oK`=ZdlJ,$C[7PHS^h:EkCE+^@;X%,`+'DAf.A2)[>16]>dL93l%4-1<>9CpI+0Oh22OJ=D9am$)(K,X"_@(27Tm0Gpg)E(/+IR<;:lr"?"c-eT+'cf\E:VP/^$Z$8ZHY%heh$\D9);H=c]*!E9[I;D\9Bfei9ICSpQb7L3+^P4bnk2gNPF'N&?.A"Ce[DF5eb"ES;+Fbf6'.CpX$[Lu4I$QT!(hdHoVLO:o"[%W,G...%0C^U#8pV!(9cMW($@rF3t4SS/Eh/>>.*YKU@'fP'(q[Yc7n_I%q*P=]U61A>J_1E%L.Z6&f,Z]8U-7&2cMhU?](raS6VW%Lg8F0Ti]'d+cIi`5-2Sm$F9.`1lLI,5R8i-E?-j:/3"e0-A@_h2po^(]dYPE>]Ud!n8P]f?"6`s(BbW`5[`4X#]R8'i2/1>.;5A+%7KXk<)0Sder,.B4.gdGIDEB#l`<E4sW[>4+Gu^8:KRcGZX(44,GZA,mCF(;plGG['CdVF7c[i?BV0T1.7&5D>e<*#;<q1-*\GG0G%._:6)ZD%X,E#`&hSBWn70q0Nm3EJAEK42X'nMuE8)Y98_*\ksK3@Bl'>nqet+H]l+.(I*f%EIaGP$HG]lF"KA:?nLT2nt5_%j4]0%Rff+Yo\V:tM.i\q6#eBc"@WtiZ&"@tabBeQQ:33*\<Zs.>UX+9'SbgNNKZr%V^8D0PN^Yef#2!P!L<k$+%5i.c$"%Fj78oJ;4'j4%cU52eXeH62EjZ*m)LgRY+\P397C-M!]2="i.;XX^6*ZB/nAW$s%*_Pi)Z`3%Z#%sI*Bac_3Xe-:@nAC.CKLrJqKBs8VFNI1WhoG#%-iNULX[;K\jpGQ5dm7)fTsH4@LO`llcIgf.`Qdm.o,Uh:GCJ(/(U0Xtq3`UcH0V;K!W7jJpY`qkjA;CGo[=1ZG$uTbjMY'3R+u1E%p-_rf!Dp+7.8V?UX1SWu*[?nX#)&eb/fG5E<"@QqQk$.gPZ8.P!n$R%d*R]ZZP2P,b?_eIgN<&)j#kYR-m.:Ijq&nL0PD@P5kH(L%6>tnaC!l^i4JiT.'D@ZX/I/=;g\=nlE-(XDC8J%7LM/B@*Z9R!#IVphgJ13(?on^1@1pIE#A"GHGslZ2%,*$3!(:an,;j6q]RMcZ%=Y19%;:(7()W42^!`D]fjS<c!8eaph_L/Q>@`k'2V,S1C=tNti-Q.J\R)DaubBTEeR;X&@5h56@GR,Y?Y'-t,'3'.UC)q6#[TUkm%#eFGtF<f!M[ag2aZbO@2$G]G3-=9crUf$11TrgmH6tJCd94t;jQEk7WH\Q=fSQM=;NikhZcE@EY!X+X%%6#e`=gMPsOdNf^6pT`K%re3mPT$Y(f4qJk)C2OSX7jKNeBqj((10`1+T'<2R*CH&@%?1hf66[0eL5:F:#]O54kY*aJUst$0M##GHH#Ca:`Z'nc6oDh+LsO:J%\0]+sTUD*Hai"bcI$eR\fu=Z<<S;Q/c.4C^-]ZQkI&pJ18005"W$>!m_LtcPND\5r>^F#T<gRP?3\LT2""&-RXWUFCX;44kQdN8N%,!<(<.%AoAR;n'\@n<!?/U&RNKUiL=]JR?Ad6&K&?("Q@*QqsB@Sp-+?d2K)JZ9(&k/nDe0JmNP*"oNl<8lbKIB:#J!McZa>S!*\%Q4o,i`_aOPYr-`-e3,f[c+fgJ3GLfo*LeMC-IrcQ#:bdDfBG]<'":./,,m*D#l9"d9d$J@%U]<hT*#Kl&I.Q[)=j;l9VGQt``<U&%'W?*fSVRfVWeTIm>JL]ahMVONWs29gc_=:RbW*Eh4d*>8X(r4m<]'sVN6YD$C_VJ_I#UG#YmuR/7!f)a7s_jJNSa<k'rp/^&r,%j%:5kWG]4dWT3*>uG">4>J^k$W\SI/_)U=n0u($Lf4nXtang#CUsk:F$9Hn='"Ym_5kM_ou0,l::l/ZF+a>GrVMS;RU5LTpD4=;jb(%]tufmQOK7=giQ-j<5=s'l*>704eeGYq8lp10IeF+Qq)+D:q/`U5P-p!CTqQBZ9;l16ZuQnZmmItMP4/eY*%jW0i<j$)D`&*nZXJa%:9S2/f6-;,KXVZgGj?j)#,J%Zh$%WWY30ko/!B.t_!8AYU.3F>UY@FMGl=O1Oq3%a6\#(\`b3tJ5:t4Lq)Mi`Sf0b(h8MtqV7*23%O[g:cQ?*iH?Q>(_VVFn8\edNk/e4r#r:c/^/'jhia+V(OV(mTch_$``\Sk-M$QZ84;04DEDIcGadZX"W1EP(fmGd`3)1#Me?!\1b%bI!1N9A*LCh8kuV?(,%A'J6.'*K%)-_Kr@VG-`@$L)dh@9N))&'Y=X8KL*R5ln4$Kg*PAlM9N08,YR"Zl#i>gk1a0bh'FM5^EqK#%#&l%hSm-Cnn+SHB/tHg`G\5dN&3cC^2qp5Ok1'X2;KKTV>$]Hsf!=SX@\X<[8?*&u"V4r6S@Ui3V/AGm/tMM]m5+$>$P$kWF`UH^%?-B-=_OC5`FE=`M$_C'/mDR_"l"1$[m8E3.-l(!3TUBnQInXtC=X%-bAsu>#aJ2E&B3KX#>m:_&Sj[e)%Ug8rkX+9)#$BmA=c-Z`%4bGB\@*SU5,gbXR]e2Ht/gIhf<ABf,a*6pVkBb(0V9_Sl=REY?q9]7bRroe#Xnk14F"U3#d2g^LkMi03YYU`mbYmD&F-.[h4/F=L%Kp*MX=_#b4bmn:RPdt"kVo082iZiYu+YalffbVo"]*7"t/6OUD-YOl;Y2$Ug+4=*L@Kf-br.!CH\(05rAA.F<qAn.H_)Cptj>lg0%.Wf)tQAn0s_AFG"ZAkQdNGYB@p\YL5,Nl)lp.YpB+Z@TJJ#kBE*66:ELbF2hUtk&IoJ\07i[d$K-RY6,Z1q:MPKOi(&@\,gb\=8a%jQ(@41\"NEjs;3e?^tA9aRG=]P=l'^OVC^Z8JnC5gc)l\C2FlZ>ho(og<`>-E9<K?9($\CQD!=(1KOAs<hOD$7W@\5jN=u.dVN?b%)LNl;ld=X6@rhCJ:i:,D0"hu,ZEE"#H+YlBa)pL;jFZ2aoLVl4$N9tNJh%_LVs9TMOm<0I!-6DoId5qQ_M4+#n@49(TQWE\\2]Jq%DDj+&mYmD:NJgm<d6XaYKij@eeea9l:t7HrEcLpGoUt2QY/H4d@cDu8lF&ATc]04T.u:^qV6f7h1p$Q^*\Nf`psHn9%OqBp)"(5Q%.o<aSn&;I5#oA*_="]XW&eklb#7#HBEua?ei%26X6ZAqB]EA=\3\_HW>f=8Eb1m,)f$_hY!*n`Mr7Ype.n\jXptP47StOtmF%1SM%iO@h([4h5j2dRc^\(t%6J\K+\5e5\2gH:M4[nLa+p+5]Mmja(,\[Th9@pj3eL$id^obKa@Gifh8Q7J]Y!d\(KSpN/0Is0'\*%;IR%-Kj4!Ogc`r5\S<Y>L4RKppL=^%X4b]H+/Go4?IPl_rXKV]>Zt!,29SG(+Tj%'bosL^GFOD>S,Xe[4\sS[mVHG1u)t0DI@@EVafb3%U>2Kg]WIce>?#DpIVd#@FJQJ[[fC[4Pqpa1\B3q2-\ZS"h\HLXp<meJFnX7&>Pu_Yk)4*2SR2l6/\b'qFc1(*IpQO;^6O?ZYjH(s%Ur$3N>)"O5DQGF1gRrlteonQX+K2a<6?1UqW%Helfb8(XObCga,Alts6QFl,g>Z)QP;CQ$M)#bF#L@R8`q"#9/PQ):N3gL\\EcGe%`UEo=`soA/_aQP`=gen%+j:QM>@:HcT^"Nt+Qpg3<[:m_'+pT;O=f^`Xab>,WFYeZUqkW+#6TQe$h,\Ok8Rk<UuI*4mER-c_%n:g%I`N>@[]uGq9n"\1PFpGOn?r&'SG#CTX[i;tJCdg*rrQJ1#n?n9f/C+.27L"KI8pqbgSbO_?dr8Tbc6Pl=A]J6Zd)4DT*\Wpq*NXV%"]8Wa/JK(-eHN/mOocgj^OW_apD&bC^fns%H:"4g;2sJJBsf?@)!cn+_Y&E0bGot95Q=(#!k#Jf9<,tU\N$u-LUimPMhqbJQpI^*%jKY\DSSHU*`r$3A$e-`iKgaE7/Kp"Q#dm0)TeAY_12"p*5V:,f?92r2%.BccOhrZDT2JM$D-DA8Zq$ZC^X0@/)P`BAaL%mZ)s7CR%`nr_A2Jdr@4^-$u3",^5f%:e'()<*J^`-M)q<s09c+bnUD:en\Mg?Hb20lQXc#+Ng@C^VY)D0+piM$I6p>HWdY`.'_VQM=\[#fJC%Ae?lRLK^tV9r#\Z8WcQjB`H;`'%We.UO?6!.i*(63%4fsm@r"FX2<bFC7G(DD\aqGL&_Mt7Jh@53!L^eQ7BrK9qoTXrKIH4!b\hO%^C1Z*7L4`6D@eD3DX[OUBHPTn&Xa.B/QTh-(iKtf-sG`ocp$U4"bmdYQF=OVZj7NoWY?"JaCLmiJjG<7k?7Hc6&QUlU9;uK>!N6n%2A?<N#Sjc@`Lj8"6biH'XDCr-1,J=mH],M.W?rU^NKs!9jHKf\Z=\/+Zu_pRiJ1,BiKDs6^.Z'cGSVJj"CZ39CtJeN$Yd]=-)n5`%+[g7]3cPFan?)n8(/b-kJUs?1^U$#?7@]'KZhKJ*/^8Fn_4*lJ]oFc"/Fr.<ar31mNo?jIc%9Bib2o_aldgamBbhp4(D0-XNi#eS%c'a:'Nd+j^&AKHBcBR#WqhE=lc&>d^Fa]XqeU-qpb8LjB!lCgT?&2W@`)nf-Z_b:$.M9"K+p`ts&nXdX(,lQ+fLiYNMg=g*0]6pQ%An`h5,o-^D7Y<?u=:mOD2d[?K#F8h+HVVudP:oSPY3h]3MrR[KR!`&Q6;Mt(ZI6UsT)c3NM`3";R,Mr5H&2OF&tQVVrW^Tp.cdN/%ZhP'n1_VRds'U0;-HlfJg\+:-jjg=hH`4mP:W5l]KNQdllFA%]1Af!+,7(W'1k_[\KNTRVP_q5)(AI(X]=il#4o*XC$+%j60iAjA%=gCb!<??s!K'4)`]FhLF!L18C@2A%$r)aMBGt<ZsDo+&Z9oLh3@?rnNl@-4*=]Q3N^'M'.7*QN%9*782"CMu\EJ\SM/E*\S?NspS%YtDu`K.tKaT/)?A@@!<9I7P^/1<+B_T3/dML*/QbJ6=QBUd5c'((<S4ZNDk=7TF2gG2[#YM!@n0A\$?;l*<:mES<5-Z3].Q_$4,0%JLM=6Qn=6^TG$LI/UNMmKL!_P,+`/)AW[r\rL5<q32,&])(W=gE+;J)K`UMa0<"6?d59*A=VsO11f@B-MtTl07>\Iq7h(\op^C=&%"NiKl5M#Z8b4:_]1LHe++!&,5!6TnGM7DWkP<H';1engk.L,oIPJuF-hCMf3-n@#E('f'u>pDq,Yg(MgFG"*3ZgOY88QKhO-Q-#O%JD!^8`JZ"b6&[M[+Na2OGJ,Kc1uLi3<52;9%&bg:2C(n\#"72I,tijs[#'rG%VF3YaXU#j=/'5jIl[B6-&Y^!4=j=7/@T&9D)?Q,%\LG7RRjH5n#LF"b9,9lV^GW?.Gu%NmGHk[m7/Ygk=_>YcJI[ts$qql#/6NgB5YICo%>_%f99odj-+d9bPWViBA!ef/K&Gr*Qn3t&%.Lp?bXCRE8-V]n2@J1%sCoP]_gb`.NR9g/fCl0N-P:_I^XRS`CKos);ct$iU(b]R.1pB!a7?b]h9hMQsZ6K.;&i<b"KZ8Obo429?%R;;k7$`Th:-W$*5<cMJ3=W*@'0Mn(U@DSXgZ7qC%IKO07#m&`Q!6V<DU7MA-Z4AA@i<q'7g)-Jc%?s;n)G]!PP_J[r_Ub2)90'@6%dNlu$DR?U(ZM^3\oS&O+&JBX[b">Z>Pp%?,Mn__udZ'KVN*>*r"WD4TF&WN<U22<TDk\f=\kt?+8`0mf5Fn2bb!JMrPb3K30GYEk%##Q-O:Jjp[%e">-0p/d'D-p\H/<@cA&V61#.%Vp30;L/%;1;OgAN:h_6#/e+gmdsM;3jg%QBqbP(Ak)(/Vp^B&L&1L6s3(59m&Bl%(,$FfM?(ebiJs%-5ZsDr:_==*=a&b%C=YXQqVhK#h*BX+)=I^Nb4=P&J+(7PF-!TuO]";]Z@X@OUrd(^V)6m_=ZuOY^2UA7_A<TM%/.PATF7<^Ki2h%lA=4e%.rhlm)m`N5A7_.kM^OE)6Q.t(ZMYaHOJEtPRDC;WPcGtBL(]ceaYGMPAo_?8$LP+5@'UWqS6;Y)7Vb_l%A1%SKB7H%S@=-4Gh:dOL&ohHUcJ;hA=a$P:gpVaS:=f\r'/k\So*Z^'h9n.dZG8pm$48"IKN>@F*\Mmm@B?A^M7m699R:OQIDKFB%A9R>5S/YF0YYnW"F-0ta:t.J6B``qj3&^cM\?Ta'2YM4[e2`s9],s>>/nf(JEe>7A*t<(<N89O67U<r7lsoT:@l)j@P2O=I8$D??%Md:4O'=:m(`Y>-k/J^/DEq:nc/0Ua)-S%*JU4J1j!;\J_gn7c:n0nMh(4RPF)P#G+EpHGV?']d?,^-_F8MFTkUos:s&NfA'"<nVR%gLc;P4Lc-^!\QfU@&!c7MhX13Ad0?#<[I2f4=j4/-63l6&4pOp/>,5OJA,u)&@'q]1b=fX83)S:$Q'ZVOnGpU(5mTm$]DqSjXS9e%0!>S".P0>BZGKR;fVp`'+CV1AIl@t*-dn1`b;Rg&%<aMne\>Lr/FLBEBGTqkYqo4\H&*7>4.Y7:%d\5ajN3Hb'Ne0\&;gGj(1U7Q%OKUb"A6]CBkd\,`M/A9=9*'Phl&'0+QiBZe"_u,C9#@3apIOr.D8!e\J)(=R#5f3NG?-Abr<ec@b4I=WlX=J9-284U9f@686#caM%@:.Jol79@s;e3XSjVZSe2tQ\Z$5:K^XMahD#4e%(K:umSM0t"SMIK#UW9[j\BLV1.e5Ul/?O9,(MDr\MJD?#c;BoPZ"m)TtneG(?%8*rRU_P(efHehClr5QEZR=n34TY9o4*c7^1?har^Lt8XHJ?+2N%G\#>"@7(YVQ74*m#?A"X3_LR$3Nf)^qJ13o&U8R8jA4]DVQc4%#oIu?p\Ht<j-N"/-fr#sKEd1Wc$Q9!;9%P-.]h39!aZ`r,Mi;B^+q)<iCOSfM0\$q7=77(n%oN]`<C=**l-B4#R9c5@5%?K]Rd8$%I40l)`)djrc928U;iX,Xj*@@u"RoD'[5elpb*kMWg+VA7"&"]==csLo$-7bob4l.HeJId6*CD&Yq>OMFTXoBZZH1C"aOf1fR!WfU%4HQa73Xhj!')>.n3CGELHnC$=esaZ]6S$k,ns'PJl2cik'bbDj7)%XmEfkDf?W!DG-"IQo;-$(qZDq&gRqg`k=(ma*Q)<.AT+n%c%i*I9_lK[r,\5u-]VA^A25Oc0YBAd*1(okf,CL:cA1NBT\%O.EoHf_H]rC)'EN/kT69mbuBYd==\omD]POZ*!O?4hp3T4V+/J_>]6%@\@%13`5bjknQWSKZ4r&]!f+c_0K<=d^h0:YVfE+;UrKd0,fr(jfdWt]L%s.b]JOM;RFXj]WS5)c4,#(_q"JC]<7tS<7>+b@NhfM%K"Iaa"3/i@]?]I)Q=da(a4bF</!r[0)?nf:.Y8IA=#,ZapqjVJGmH0(U:T=iGf'UJb'qEII5,$*X"U6,'g4+J.b@h0L,6krq^/n[%s);l_FCh.gXiYVf.gf&.NH9fs>BN\7QD$rZdq'*Qg0Fl,ZWsbYFRsf>R!g=^Q6CbU%2\pH\[%q)Wl]6lYFO;ZisGc8PUe]3(%mW0%\IEO!6e_a](!7;nNGjJ#CiJJ<i<i#t&:0VB8LS1ECWl#5d?Te!JEuE^_d<5EK':4`U)ogNmq,UR'-?pLe<45=]]lNu:#L3shE#iR%Uudu).N"=k06Sj^piHSn3]t(Y\J=;T9SeU3/S*cF[2IbWK]7=.I38SJM.[LNJh'!e'`b`XM]7u2S(YC/8H))e*j9G_fm;GO-]"nO%oFg\;!F$]aAJ(\_XXp/+-ZQ98-R/V8d97i+:0-\#(ctQrpcEpN8?E<E_po5pCP:%:e;CgYE"Hn^.r+^dp,&Z>(ulEsf&M#C%;A7+%5]9*pP[1O7@TCgGlM?+>dR^IDj\pjMc.WiZb&B7deJlrZ#1j.Z"f)kH]A\9N[$GB$E%tPR,FQpd!tdB+BVg"s6&D)Y$83`4#c4NY%J?sI.)6HZYShEP`4YO6m0VamN8Ba-2B`4L>(;[#c+/AM=A]kma'iA$>rI`ISW,!)#E'8h&]pRH@EgB'bRA$`"/mqL!W9LD9N<tgg%cH;kLH.><hT&?XREE1u'$e;9/(;:k`%V%;:D;&<cYV?($lWdgu]&Clb#FLd7*N#,)bfUKgC\SOGatOlP,L'f]H(e8"\ZBml8`';h%a4[;q=.<]#`9d.AZ)k=:'C1WhjUSAG0p\(@NQK+@f)5EbZ8.rnC40Sp<LLIG@Tf,6@WfM@AS(A#%H:F0efH8%K?Hm5[gKA9eeGuB%W[4pOLqU.YaAc4>HP6H=WN83,gps)`QKTP)<*"nN0o4[c<Z:d2S'">*LD3Zi3LHL`i23g.gV\:APnaL(`s.eD#-,pd.Ou=#*;`09%V6]&.A>ESQkcg<`8h)>-RCI$`A]9!*d=+npQ!8)'MonY`"HWgRAQ=>obbVNg2U=,>VQpiu0a(e4=9uq'I\Ej#k\Ih'.P"L-#S[H-%Q%gUm.fri.X"//\<jY4-`HuGO/%Kaj_7V)4>L<nkWN6Xn+Oh3(<p&-0b@H;:L-^`eaU4UTe'kiB49kp($tVl]KC?hiAVH8k=Tr@?%%#F=:5Zs5@@>*j!ZB@A*-"fJG@A(XV:f\JWQ+irn"SApihb[>cHTlX0TWHq.[4W8[[1'Z]!G+]*/!gtOAQA>>0SEd]/(7P#2_gP^%-f*kl&BY?-)aOK@P8-"SQC4h.Umg/(a[uZp-9%,'7UjDiai^`1rFWA+^dXdgA?mEZ-VfA`XE_%h<s=dF%6'LD24DXEK/4V^[+.Kk%ESXtq<b+ngFQHP'$^a2bk2-u;2/E;(/VJ43MI7QB^5P"4Q'kFtAI"<^V8>bu#EY3b//.O1md;bM\S(bjOi5,:,_2si7d9BCF5Vu5%Fn:A\O<=!8LhOT=@f:QC=GaL*nfa8]DS^W,+=ff=qrY-r$2@IkC6h$m<Q,3(Pol3Ra&e%Q0%[m$<r>+C^^D26%.nXZ*\30Xe-D&"%"udbQO-PGia6E'%;O&RdOd4U"MO]:>$G@?NikC5MGg+X,FTO:#_8"J1PX&9l[g3DQJ?76,<'en(7:Z:tCp&>jGjF#Xl&3Ui/,?tP%A>KHj,a#18:saA1=a<-<3Y*Jd'm$HK%4!GTN*BRY<]ZVlIN$=#K%6Ul.**RNUr\J9R^Qb4E\a@A1RP8V=1eD6AVF-fPbG04E3Z$3%<c17KbRJ-[Ptrg$XMTH=@p4TPX;^WCTWAjT4_?9?c(%^"77(/!-r;u)K!I.>bPL:MZEa[t=uG>@q:>/K0.8=e/`jC2k_0cX^bjh7%f%4T^%U)tj)IacRmsOK:WuM)L'4$u^(WWPUnrbh1GjAUC"cO1YgtBGFX9]HD][eL^.<Tcr=LUoT^HekBgEJ?%86*_X&1e5$.oso.%cuX81Z&Y=J/dps_KWnYKq8H`1/KfoRN*o)$%<4p,?q%_KPl:hoL#a-ep?&P&oS&aeTUQ!5$i.i&?\N>1aX[-:Joo=6p*s&7.$hEk%X&*H(^`q.+q"l2PDt5CW7X=Gs?7!8Xo-"6^(#!^W)"Q0!ZK5i^7>W`:!k2:a<N)r;^35idJP(-*K.c@;PW-NRCHu`,j*MnMgLNtD%Mmj$(U11Z@ga[ZS4Y:BKT\B'OJ&>;kP9(iLX3cG/,$A1a!<W[b^.>:Y68BIPeOIE(I6">;&[g3(0rs\48P7,T18/5nqF*]MR4T%(%`bIG:/eG(BJXr'Z<@le5Y.Xh9Lea&p'!\IWe,nZ1VaXWF>no9_N!re,5"D#477nZn#;3CKYf&!3Wl+5e!j"FlWd2F\:n9;%DQkT9%&U7*2<J>M(aqn"lJP[]'bZ%k;bQLgdZ-_qIW/:_&'eP\5eRc*`i)Hrh&-Opd'hT;)^C4&[C_$HM=fRQlYtj7EWT*J&8I%g%Qd6)?%_ik?J,1Lp[<"XA-DD<iFbZ9XlaDB[3U&N;5S`]_Q68_AgK:k82s*k,Mg$kZ*jJQV;Vt$aGV9.hWT%_H%$@"$CT1G$2SN9s6,86V?%O@8J-:*"4&']@JLQ/^%_KrkZ38l[IB'!ioBFYn[3Dea$r^cnEjn=nPmc,hb@5I%-DKhS?,@'q8WK%,>^a1t[0!@TC8?7Kd;R>FQ?%IW8#.6X"57lD&aC;?Na.XOP8\lPc^$r)n#>(F^)Cj,n;:T[\]t:F$T#p_taTgD;1O<BmS^;IN"pRQ^e9MOG`0>q\YsCB3Wj7&n=0%-OHcn;pP'T8$,]YQ@VQFhggFa*>O&grHuFY/+Oh/GhK#<$`V&9@T1q)&,diM&s-uM^o.f`+NG:+<4o;4JCESR%\SfQ(Q40]&Pcb2%;%Xmr`)9;Xl=%q^H'tV%'pgQd(#tTdUR-ctKY'f"C@RO&+=^]O?G:BWG_=pl":Z*W8Ye"kL5K,rQ[?PF5tQV++]tZK+=]g:M$@,V%\pbis69R,2&1Z8tq@SltfQsmSD[bpo`<'j".B"#@-3P'phVPsaW!GVprZY/nFgMs8M@=-chu$D@T?huVVg)4p2Set6cc"^@&c':>%S",gQT2s:^JNdXJ0A`F]HjXl4>ff.J!eM]1^n.87kUA_n:B?"7#sC_Om#aqpTp&+cWb!jGWMBl;bUuI<@Yep0/EOsj;HGlC#sC^6%?*n9D:LOeQhJf(Dq71uN-Q9nbo(k29VbdO^E>?^H5UQa+'Y17r8neo6YnDg#14Z8NH%o-@Gc)eso^dbu`@(jr_6h[";IdL;nb:aE%W70]6GE>R^*CS[G5c:E55fS.j:<*o_,QbqM,f/4@J16!jc;,bJFI14%dY>^rmsqDRJYp7ur'm3nL)V"`dppV9!N.&-l<b3CMF]X;%]qCjh$AO*`DhGtG1.sR\FDnS[%('`!4bHnK[aGmLfG*:%p_RA.>=-]PR`=5DeMM(C2-leZ"'<(2(6LQ)'FN#1q%dhZ.'sm\e,9(E%RYED=VIZp&SiG21KYgG>KuB3$'>mKE1ddop@&='seb-m:?1(-#.+;b097T\*C:Cdg5c0'_)LkAQf/Cl80W%[X"gp-7VMME5`=!QA%i8<puQnj\(^)3a%OI8A$DR\=+JuK^DhY^9k/4U4u.<D"'-ZQ:f%^b-_d\-::]6%sMK*cYap;cnr0&=`@9#'J^,aPqC\.jEoKo;.!%8mBu*/HtGTU4o8+U-8`EfF9DqDoXP4FqFni8h`n@j\`dKV8*0V$5C9R]Q;NGRo^N1J%os!3rk4*.m:.@$!8Y"Y/^HQQ't+1Uf*`/%R4kHP7451T].p,f$PHHFH(S'%&<P=&_M'DoO[Ct!F?@GS4OX#3Da#U\O.r6R:V)I%>[g3)2hC=mPKlFIL(Tghi]#+/V0[C\D`$^!%;sGWlP)D'L$RT0*>CRR>hY"MrW'[OJmd(NbdZ6\:R5^@P3ng&sdeQ;iUs!Z)E"PZKRt.<`J<g=IY,_&a0-2Pg/,_ud85WD#(cOJj%h:5;./CK!A1>"!QlI0Bf>`uBT>!-BA&D<W&'EQ^gGEDPme`]bUImHV\o`E5X78do[,`o1%i8+H3j:<CY&,mtY6f&*VTd1bLMA@ZK%PQNdqmT<fMX&Md7*plrj/\]T,*K04`RGp]RTUKPX8%[l12g?#Gmr[,U[RI>HYbOEE-boR"*M<@**W;JW;>+@ka8dILB8i*d[LIGY%-.QlK[q.VSNisj3&r`1+&<^F7ZhAQdG=$DD3<%Lo$<URWHI(*(:hu3Qnh@Q_6`ikSFlsa!_&M^RMLT)4l1<=)"D.jt%a-"tW::MD%q@P>FXf;kZc115t+CRo:3*%A2;4:`res8`akMm[l>idA<B<oA%+_;LkO2?)ZUC)*>jE7.3(I"OYO)?IE=kJVD5WJ72gLh7>NZpsu%SS[11pTLtSOAgm,-t-Q_4#=!lB#2p<]-ebB[#QT`YkqI/9o9=5KecCkTQbq^LO2Y"aX`[jCtjD`[TLj3d/I_.A4,%k^X''1.U0fq%Eh7tY73-J7F7EYME&&<Y:G.NkfOK;L!Ju)TAIVrCAoo=GCR"dAW-eim-Pf<he'i/>m]XO($S2Qho'``rHU&?\ghNcNfICOF\J?`;%7)L*7Q>)cSD%83a)^Mf?;W3b=%FZO3BUR/HCX:(YEHtEgh8;u):rHCXa@>34G,(MK[GrRsgJB?k*$>ZTNsVLqF<(ob%FYjX"kt>5%\:o=c8ha?Uar@As<QgM&`+/VFDLY9cPW2llIGPL&&,a\H'HWmss0,m]LSY,3!8fB/WU[oTr2IOg]G1lO!*&VC.J(-H,$b(34j=JT%pq0S(>A<>W*L5Fs$D5SsSuc@s@"VJkrFf@3Kh5ei%</<t.k7jhi1j1`=:&E9.cT'R)"t"kHX+]+Q/9ObT!1g+8#!!IqC3)t"[TUt%--L;@iX$JZNi2l=Lm>4+!(Q(MY1.9J%]4U0>$A`^KpAhLh](_AY[fq6g$SW)DY#gp_)Bs4k-u+[ic[Zciti'[\0:*H=o04.fYJHE%cg:PEJ0B=G`%1>!3X<E2\-cmM(`d^hNEA,_?U3u_G1:-Y&3)jSIKr@H.!d41)Qpp\:N8m>nm\8;d,,JIiU7D'kHWUH&@1X#KK4nf%>ZICdremBR71]<nn9hPW"AY21c`o=:lm'`;0!P*UZ+MC#$#k\f0I'4lr"ahe!I-fCq=mO1Q"V:alJqW"diNU?:XKQQ@kA*KY)6e;%9qm;K7G\QiWV2O6RI!D$Hq\;#:@),Cc[ZXd4iU5QW#s5ep?('\^lh..8r['C_L\%IaZ:3l/Ice2!BH,1C(<;e2<)GE`T&)M)h7/n%0V=Gf1+iI$V8X..g-r/[BLS)4]!338`"4*TOncm2fS3Oo/1^@\q.7(D*.+u!AV*Gb@T@YWM(%NEZ_l7;ls@PX!<hWs4nR'_%Y%CF%*F]57T4i+LI]LOeB.&5.5@5Ih+kZXMU40bBmH%,Ojah0?jY/;<T93KY:Nd*B^7D6Y8V0?T,%h]VF8Q7OO5GQ8%ILG8^?gj<c2:-T%%a#jJpho($^t$>8cVh$bfTn0'Jpb6p`UJk)0fX(UnfdW?fqYDPOo1Pb.Ch!\Q$"X^PU\'P1OQ\Mka+(D+](aUkuLckZm*EV2]JS-%JT^!!,;?B;8R89)SaM)8fN7h<;UgI<<^I.$@;RQ7'm.H'U#4T-Fn;1l(j`<SMg@+7(%bX5T@r9q\FYP/EiHiOg%F&/+]Q1jXda2C%h$hCA(b8k3i<HZf^j=ei@ZX:/SmU#BWh;D)U28(&mt1t10.(dQHpTVc27J910^Ta!3,+@N$FS3qVQ4G=?f:jCgapGpEW413rPae7%,N]<nr38pTi7'R,n[pDWBXi#DM5nA36`oL,Nm1Z^GICCcWp1^B@u!Zm\h+4,E?BAO_LLM>_Et9SFOqf+(uGnjD:nil.@EOrPMu"b%RkFY<a4BI:2$1D/4rP,T#+(q`s/MB_LEl&(:,PNh:$TE$=MWg_OH?bYZd*<+fcnP=kC,IAP/A@^J*u?g03eB9.8cpQj;MG%[:A1F%,Cpa:_<>"MCY.47T%_X"VI-u^TQjH)<`a>S(5oM]$HGMWgH:XF5',C[70<(#la0$2'A#rY?#gGO//76tMC,)Y66aM;/&#P99I5Dp%a\I$VH)6fmAV(?dUeko4R^<qA05C'ih/&@-(@K9g@mmWo,O$Kq_=Ym)FAmW-LqdC&g8j\q7,TKo0[6:3cGXS>LTE4n3@O*lW+&M[%Z;4c*qfb-'W]1@fVUHVUYk7q=b?_LmluTq&5:&^[kX\NU8T#)^T;&[1kDW@R"(_J2XPgX3_cW<(,B9[3);(4?HV/]VBF=p`gT5,%%8=au@Yi1TnFSN8A]g!oBlJiLRem<lN:g#m>3_6n!>V5N\;Spu6L8Pb,T7d3Rr_]n^A]f**Eem.d144gbYTBhIkVL^LJr2L9nenCU%kjhVP2g8&[7O!&cgFhG():h5ja6>mP;Lm$TX[_fEWUh+XJd.f$oXrcB74Y+8*5qp@kHk]3Uc^tJoV.,ep29'D'qH]4XY1&n-/LA8%@u+;^/099@T/me$q7;/W![g<1'#Ag_/GnW@EHWZTZ.0D\a/"+>YE@r8/8WcuMg4RXh\:2r`(4cKHK&E'fX`+:Bs5DD$p@do$>A\Q%c<lTT+FVYjVM'Au9#,kkNbP/B?SqqL8rk$2aG#iC"uVg_XK=*%NCsMB88nh:d5F?Cp`A[P0XSs;.R`/*!n6-l5@0J$YkDbSMPUW7%lV:$K3(a1Y_!k/%LE.7:,&8I=.mT+CPV44TZ\dqR@oXSjobUn??s7$e5tUV;qdC;GfM@3oIrObTT%">hC/NlCYV@HSk^9.f*s$-5%="l\EquXin8Ld7c4/+q0a@<EbU.9mGD\or8fr;*VciM%q\pZcNjDB?mkQF*?@2-,%"j]m&q;Yn<_P]!e39qI[#rKptCYFi:3Uii0%e,kLu&NcAtT??XDCQ[mb&S(o.LMn'3O5$^n>t(;pdGrZ<M>6uc?[IGj=Z;=+Ne"JcMe7-u9op3<p%[Jrc5VCk?&$F/ZVbk(7>08&%o<I>'!ZHjV@S4$.c*fGk]$F0=Q5&pq-9Gmt<EV4_o6-N_=U[B!(.e8H%"C%7L_%u+=[ouq&s+d,cVAqj!@mB140%<abelNA(0S^@%Yo!::!3?AjXC?Lk]Nt1>*cAkER`kDBS6KirJQ.#)S(NXmfC\YDa9SY\B64g,.67[Q,BQD*iiJ8@U0:2,3YF\7FC.55e=qH[8-Tun%?hAQ=C'AKJk\5$]QFBeALi<FPm_b,`PmS?E!TtD1;U-Q#6pS!m2hOWD$Sk#H;R(nICi28Y;s;e'_C>Zj0*!^90QPjd\/B)f$X0OV%O?L=NT#*S/_kC:SRn?%KqHXB%_Le3V?KA=_KYPTYGoN1fYT:>Sl!3cY]/5;Q=9aemUJ'A2]LSZ7'Ab?AT*oCC4STMEJKnV\pEYWb%QW3T<f%PgUJ5d)NK;qh[]#]j/o$%f,i$]>V-Zf%c+1]i8oahPD@uTbLl,0N'19:b#_kK+GqQ)rT"9UF]*'@!<*U-PSmY2iH'Gc_5%Yjd`==cNrW?WCi=EJhFXD9YU4KDg2>(s6-aON*i'"1/@0jbL2S^/1=0i+O=P)4bM?/Anbg+SM;Be0qqUQnE%rj`*(?b=CC6@@4Ic%ILNOn7J""u_r;e8.'V:(_^1Kj0^2@7,b"QD-r,.H<ZHdV(kq+!M+>30k<n$M7Ws?5;77B4(_%Y=;%Y0BG:T77TuYQ)TSUNW,=IZ1%InT,>/=a3n"sU_d^2aUI1A!iYA5rE^Cj0\#$l4%J."6a+a(IafU.Ep-]P<j7`O9&E'f@ljT2G^?(l<O+\9NToJH+k6HV1R@fHF]k%eYan)_t[Y0$hmQCPgN"oH$'I-_B2i4>.g<nm.,LXFYRLC<@H%#.H$0d,F[+7m9&E1@G?RTkTtWchN]-B-]Bj/6-(Rn1O?/!W7>93%-Ck^r_EB#\jaf=K&*rbI&#dX-Ymt(+)#8X)Trl;9MV*-]Bh+?-GaF:*;RDU^N[m38S32P.4XRI7G/IP-QMQ&6m#0-#<6K917H^n?%[;&1d4:k)o]b=^)EMQGe`_QZh/EYmbnJI>A_a^B].n:snHt^LTS1>pPIuCU/7`k,,1H>RQ?*jh:=\J'[(GSl=J"*lVq[m_`a9T:8%Age]%Ek'(9HE0:;_pI1Y/-eQ2Ho)nK0nCAlAG'c*4TpeFKQ8_9D`Q3&kHFZ=RE0*^W%*I[dBQ,u=]h=<KLL#g]=lacYf[X4;TDaO%[G=85J!)&g[`k<t4%$6s<@HsbGX(/*D*;nl+t=d*Q.H<;XEHt?*;3*eDOB@3o]fk'i%9Xo4PFD%6=/6F>K0DC4Ofh*E/_^'NM^&F%mk8hj5*;3n"n+$04rg7m81=LGWj<npS_M4cg5>eaV#Y_:P!J4V&:Gq36&l/6&s4/9GFKLh=>0p%H+&o`bc>0A1H`4dRmS;,r!t?g%37G)tQEu/V$T;,LFF'BJAaO2[-*6IeJnlRPM^)7M`N6'V?V*?B*T7P:o`R-0-Rlu*kSmqU5rPJ^nhZRYK3>O1(c7(-W\H$QqjM9Q%(B]E.4RK[:puk;XP`fV]RR\9dVB.>KpktE?#iPpc`F86<Ee^YjUe@XC^RM'!2Pcc_?4fep:M;Ei-3Z#\kd#0'AtL$RbN*?q(DH^O%6cP%8W?E%/\*Q6HQ>0@4].u'uG8]L$Y%`H,Ccj'>Wi16B%*YHKLRZu&3"-oFe>s.\e50+]2u&]$^pI\K/0FPKhlD?604;$Q\[;@K%b$6Tmb,N"L1jd6Y6JN9LqJuFoF(a3=WZk8,G&]mq2*E<$<[6RA(0e\ll&8iJF`P5%:(48BZd<^CT7Ht\Pe*@QRKkoPLqn!()+pDK%@DO9s9NOF[DfjU.aJmjU*AX^&P_`q"2\L>a;8U/j<8NNTLMU#Ek1FSE\2S)rK6YHm`JhZp*cY7`H*:'N<kY%``!"1EZA]%mVV;V3%Vckt9Xt,ZCf65AL0`s?V4\>$$9GE'QS.Y)f`ZgqMTGXntS8Z7g8#j],H+,lQTG+7gp^GUQGYJJ]gM;5m7HSiDB72d9)nZ;+R_tkH%gD$T92ll@^d%e$(/W?2)52`hl[RVqqr;+VQS)!K"!:&3TMHG.!8rVOd!#B_s@%K\63g1'd8U_mP41aT!^-'(Lq_#b&7R,,QT,O#O%U@2tdbrG"<_[JM0!)s&p=V:3;K]aKabrcH1&P.U0Cc!=q"3^D[Z5/AoHmWUXVVH++dC4u<LJDg4?SW<*fa]@'P5TZ'$Q%)m@2iQ4%4]g&H<"GiJ8bQm[=*9eDZ$J["Q<Y2;W6"OB%M^.a2W\W3WqhL8Hfut";Fi#T<V:^"O<;\0n3:;XBG>AXNDJUiYnmgb#SX]g(#,1M%'J?8o'o$o!W!kVd#Runo4@E$'<:doB7PX*io]A*1)^4t<&/Z?;(T0$e4N[lKkR18j]tMW=L"4q'&P("s$=m5[QN;L?@SRK!Bk913%Tkt8VYcsRC*Wq9,.1I.o3[1/>Bm46);;oj1ofc?#Dep\LiO5N&\#dZ%dE*g2#SInZ-Bh2Bdo*QDOVn4J+rlGS&e63rd0O3Cm^q:X%Y)=T;$YKL:bXl9na?e"Zr2*.3/`J,859=MSFHrHO@n38L`/*UIZ:.QWl6J4IqOD?29oN4g@DLt)+3CNh[Bm'\k&UJZJ.*A;`%UG]%lB@2tp2ZP0BaS#U^O;tpdP.AO1k?4n)IB(W]P+!p.>]XDMHn/aarPXFjFbDW"?1:R7B'U0dpGf`3GCSq*@Ft%+"%gB3&4Hpbe./g%+'K6sBk"%rH4KV9UgU]`/4"F)-sWMc4X%S$S'C%;D`$LiE,02c<s@B^k-j)&o"nP/hW=]5n4!eOHIS$RVkjZGb<8j@h=O1a^sNne%F@sfX`M:ocoFX=`\0"RtU;NJlEX5Z/'(^O`=hjn!5:PZ[JOhP_foFQI#[3LqSJIJF4B[R'3mFA>rVdg1<!fNH4aj3%.m?/H_F)^$%]cgdu<-M'6A(S.7YTF*U_(@7'B@ZR`&hu*%MnO,gVHP(=$P1o"O_PpT,OKYl``J,+.hkFS&N^*S#:PTt&M>hV[7-KH/G"-SSJ(V#%3k<?!AW6gbf`r=fl;(-B`Q=#HkEqf]))WgKqh%\[6(tk-FCAU%g%jd_\hte]_MeR2/?CM.O7dVE['Z*FWXPU^&k-dm)f:[#]HtkR%#fGZm*A6pieOe/$6STg:I&M"_7rCE?Ib87f,,;GM!A6.&[92AlY`1\`-5N33H5Si"N!2S*VhA%BJc]`IksUh$R7B\uOql5#lGV'h%`k`J[EV?bb[,<h^_2-b#DhQ@5`ZD0hMkeEg(@U4SjF@``MH(n=U.ZlN+=L`7Lc!O8)7`qj6ZC?gd%STH3].Zc_\;1,)E1#MTJN<J%RX<b-VF5,AgP<3#1kSj"/C/'KMQ:Im9"=.*H7WTO9smujP];iNfeaGJG@Y^D*"=X'B2)KLpk8dUm`$lD"W&>_o[%jS@o"E.=W0QQ%a:PA\0Q5AsX,Du=$'?N,gF[AjZ!n\&>f,QaS>E653RinhL+:hXr&fqfYtG.bNfKsQU3UcZMcVW;eF:gmjZLX#k[&4"L"^l51QfV0%,nl#Kfi^c+YZdjFp*e"'G&jNXqm\0`HK%L_oYqjsIZg`5/;!Z-%9NQ#5NKpeN@Oit=GLIFb(:hfaIjO7YYOG`pDb_93eTf:_'+Hj%`G43V*DB(;/K3!iKTb$8ARiCSN[\#TPl+A]=<D;^=Hp%9#X_:?d<0=c42guQCD_2imi9pq2/*V2&^.Q([JH<2GQQPfh)Ys7#-!`(%1)rDR"&S$k,9I\QBNW<::eg?1mQK529*\7\X#Sac-#d,JHYpXD/QF%=e%0j+`,_pR(TD?6_VHe/k_EXT@Q9#BZ)(7q07F6";,T$,%o9h>t;(dn,1fb.9qR/>H5GsqZ/r(o9;,b`%l<%/SFmUJ[&2"b5Q,&d<o\4C!+Zg`MDf&&>,4?M3YEt!e@93m%&mO]G<@rpY>j4Sm%*hMHQ-L`^0A^4N`:Ot'u7ga1sG%=1Z2qg']3<3Q)O&HeKN]@Bj,5t.HJ7<&$^6QlOVEH,-;A^&5We<E[8@l\XT`K>JJ/!$#('?\H%n8];`ml3i-[@95]!,t!l7a4UH+9]#;:@)qi)H<lAao3s=[&C9P=XaXNJfWkHFQJ:0p-&&PC1oG4<RoaU/d=QtO`dAm"h#*lm(l3<%aNJ_=TruEE'g>"B+F-kPri7557fk:h';C3_<]]NiQ#Gp=2a_V%-sJ6ob*iQ[O;,Z#A'SFp0f`!a.=U`F7f;fFLG5THdMR^&MVJ&@%lW0_*#nLofGtcEJ%aU>gKKV\*`Af'j>P3!:BD/ht%Qb2&GL1\Kp!h&DR45hH*]PribCrQR\'SR1iFEHNE`u;r<p./e0utmGe&!^n%I:rV(_?C+NCtLI\KTC4PYIG4`>bU)W;h"(XT-;s%.^2WA43qckqcsem/T+\[^$"F?B!JLq(,i0XY$<hC`UuKMI>;kul&rS'"ZcT_%SJE9#:t*;P6*"S%UHj[WN,eeoXD;:6o_<,QeIaB%T&OI)C!@j%?Bs^36\f+FnZ!954766l8+rIJ[5^Gr%E8L/[sh0`G96(:FHOff%6+D<RaQAT0N^u;;1lfWo90tX+<SShZ<6FmPZpo#$$nMm?U!@jP!>H,Zf"6CdL_(=S#nWbtp3Uh7jO.4Q9(s`8QJ*9$<i)"q84)Ro%G-CCB@^S@!O]n,1X6qftBZW_<M%\3:%31Td`/Z=/7gC=%Y,]+J(=M^*W1nPC6JsJ;"YFiYY]:S7W1G0'p%[K$X/"l\n"H8%Ol8=E%On^&,=:V&[P/nlq&P#-:^?Fs@qqo(NW_kqf<AJ$AeBIE:TbR5U9GF347:S@=(CcB7n/mp6+HrT<:KWiQU.Fk/$sB-(P]oqF*SsP6%F`I7LQ-=$fkX]&'I#15X[Ibe\WZHmg'K-JXb="o*fAS*k?80au&MAtDd+=%VkVEs6NBJ$(7X[EI;cj=U5[2''FY(54YWP!r'7M4m%X0D$2%icn+i,I.h6N0u4N]!)JigjX@_3Q_Oit<jQWE/9a=$UY*Z1qpR$2fYq_$h#/7%kMt`"8j4bdn,oBORirmRPKC]noJl.he]5%N&RL^"i+V`JEdK+BZK'9ar&;-kC`\okmpTLO=*]=?4&Q(a0\kP/p\5rJ@>VLC[L3uaCj`M<(lf]Ek<*fZqV$"^FcBVNob1_cVV'F%Z9KLd#"Os6q8tJ#ejcI1]/n#"Y9DTSA6o/pGc`I58aTL/%15fXZ_,L'7%ZYI_Unm:[,5%SO"uWWpeC+O-c--F/>j#hS<Ztl=K)1O%pR3<J$8q&%cB'8%Kt3VVA3^4a:1\%iH%99"'!R4OB%%qQjTAg!1SXf[n-Ogp+W"@emVWbpWY#t-/$dOP`mSMMOGkKJ'Q2b#nX*=2%jW)Ab32OO.&\fh@*Z$9ed'6K4)%A\F'Y[Ut,-%h8e2J-s<#<u85ph+c0uuS;^&3M#n/)j"ZfA0\B;,Fq7!GNiOe<F:iBb8W1'nPn%.3UrPGH87T)6?1YX>702$T+gjR<Oa#TW['IC*NFo&o2A:e`kEM.\!K6\4ndhVh^1TN@$`u?"t.0b@\""`K*uUd;=]E-`t@f)X<&\%pSm[S;D0QP4[o@8Eo"D[2<BMOF>uXh*-5827pTMPBaV6<3C0'gPlgCR6%fLZ.D??*UM-f:220P*ZM:!'gnK;\W.I$SCE6<<o;"&U%/)lqj`D/\NM\l&+b.-Y&OEa]j!Z;k/4=hB<Hd63!;FX:1-:5OaWEWe7m?uPi8o(ACb*$p6n)EdurP.N1Js@.('lCY9/>-O?RNW$F%cj\jk%B@gVdu2Rg;k\_Y8h<-+)q_G"!^pCoZVYL)),Y-)m7n?k&6tY;&aX\]Wc+`4?!ZNa=^X">X2&c)5*1mMq>B&eW<Y^1?^=3q%jYA[:?W;?MBRu04/2_kB?#s8lH;p'CQlrREq%75nWTen36`M3R92T(b5UkhoVrjpdlRkHbq,^Rd&CdJPGc_j`Js:42IFb"-8\F=>%F;p@X9;'C7f4J@J$=PB4Od0)E*H!+,g3]FG8ecZp:W!,RHZp%SPc\mJ3>SPj<UFCj(1;Y8TCl*QA<tO$WSdo]^`(no6i9NaEF;`Y%XJY[A/1=@rMTGmt/=Ff%dO/ZYPt?KkLhP,]`5()n,-2,cQUc$_DSrq'!jM6]pW5?_3g#P*quGb2YRmGTMs4\Q8S#[R8=Sb+YYr._%G:IV0]6e[i'")%a9W8t\7R3D'Ce3F5E(M=d22RMS?M-J)8*R)+M!N<&auh3hF25Z!X[A61fM`W6/57=0Y<[LV_)'agYHSC,$./u%%H[<[^#VFSp<tqJCO>A`,nRG"n5k3:*mfD=pMUHPMp5keBaT(en%\\<j&lIJajCOH9!Ep)`G1_>kiXsa/[_%D"iX3h6LfCLVm8T_S%JE(ZG^;Gq-U556_=#!]BmHWf1:</(@h+(JeCa`4k3<-tD;Pd1aLr;K5hFQHG@#>@0k3hnJSh$DTr+K*U7J[8PUmRmA:h(trh"-/Q%Q/)EGj6HIEPmR*h6n`UXBR/L-ip\dT^n`'b2<@hR3#1i?0fS81Gb(r'_enUu_JF%E_#u2Zs,1[32=.*0\)7+S7n$Fr.mPl-J8b1^%Odf1b90$^nR:0?H8]+#73fhUU00flC+[OZSBJsC&&/VLb>"[C8da@&5]3Nh_EFLtI";Q!(R+5nr<]i;1O7Zl+?oL>-b*R1DLb=IF%l.%*FQ3s8`["sL&9O7Baq(:rYJqBIS.p,g1'blMh"=#LWU<KG^MY9H5.E4"_G6R3u5fipJe<';FQ(Y&^.fhfWBONW#cc#31k96ej%;It=:F'\SIj>XVEJosk=aUE:L>ZjeADqch(&Q(_ol-[l#6MAtNhaM$"rM#R/9/=r1Ga?m#Q4T%rZ]SS+D,h,+@3"dJnKZg&Yp`UB%0$B01.SG$De5\*M.,FEtfMVT>U68FVV'1b4Q-h%BH+]uW?@+;W0d)e%$O[h&LFKkWO1h,4??M-KjY+#kLbd.ofTtg-"418:?VbJ3%Oe%NB&3FeaU(8ad#`+o&TO_DLa'd2.:L<)r*hUn,Y769@.PG=ULN8DQCl)&R=tC%K;:6r=o1=-<4NUhcMYSHY(d=Y'6`g;KWnVE5%O''Du$!4uiXIjOq_DD[mX"$HVo#1GW=+p8g;mj^gj/Tgn'*Kp][\dfQpfL+L4nXIR9P]R!8i^eQ85X-n*-MJF:bms!JYiHk]08Nr%%GXZ5b'f/*@l;b0_MA\%:GK2IZRkF$WlQ>UU-d-_gu!r+Gh,NoFr66RqIp6,DU6=%Vph3/.YFY263CeGYb_7KF<)onHW6iDFEe89%g@#d]J(J7ejI0E80@anp$-P79nhcq+YjmgG1GnM+Q#[\/6PIIL?P+I)a3nCI=4nOnWT%44+tUj$!31^T&?LFG;0s<'lPTZaXCQf^%@/'m3/.f_adN#=;([[r`1V0<YTg`FHKUB3=`Y6dq6dmiO\EKnN`NP(KAI/kPJRbP(^!Tu&Dd;>HJ/.14kL',M;P%q*cf=g-g[Q:S%'XDlK.6Ibbl"m"A-)^&B:irL/'m0(kZu?l!d6gmM42;TZp:;$kW]]9!Ei?30S=rS/KSUK/2QlH"$CYNia&7St+?K5a3MUuh1&Gq5%78RI%.`\UOHW]>jDP[g!m24\%9!aJ*s8BUY]<q-D3O(m49na?NQh9Tect,tco%q4NVR<u$BR6ud;%F,3%\,3H\/>^.B_V.B&ojIO%M?/0HH-Zoa'@F6nJLJB80hMoFA"lX>!G+j<ERKY].uDK-7#K&"9]T+u!9J"?d>G$tR(c@X_)<75qJBkepLqc8!M8.<*r97AHVVX(%Kf"'2R8/IT(bVeFYi?*G$\.>U&V+g@ipa2^DUhHZ15jBa6E>_mr_QuRlPWh/`tG48<a2gMju>r2T.Cc(+8ZH$PPU_8`BOh&5EG.1%@n3B_O_IofjapHKYaMbSX]VpJ@upF4>M1)%;'?aoG2[9L66\idN75JAFu0i!iiKtBhW5L)nLBW3F"C$p*@K$`Aub*<Ar-/eXilh8%JXd-defKfh<(,>OdM.%KQA:_dBj-=H6mni_0o]]1\?Y-`2S)+"mi:NN=NF1n0?0'[kVA'*3\8nFG5+`Q"V0WAm;23#Mh[:(QtgMo%)280@GbT<"WVrI3n7SR6CBPJlL$JCESFBCqD%X(jrDWd3DCPR6X5LC__;NAp1mpduI],/pgVgr9-m/^]S#_FRnn7p0MuR-W]o,ls%CQX^D>(#MNGtHMjO"C5J44QWMb:kA>:=H9t/6%)GE*4K^[cP0%/!C=O5q#j3M7VEk_o)8@j*:#D\L4'`[)ObTr)uf=i\kN^e^T:(%k%;U$9/D_@a<6f3_is)]:5R_%m8Xp4'I-H]ikuZh%$%N-I^k%q&W.9RSWNYdfuRsLIAA(un<M/4]il[fUJW&9UgDQBO8;8Y:LH<I%2Cs@*_jX\"'Onl<8hVe^6U.o1b;G]h#PcuuqW720`;O>/p>=qE7tnbq7N541ZBW:>KFoqU7UlkS7PpSHO.2j!N\dlTcit6a9U0P$%Qic\.l1-c!)s*J=HSRiJ3_q%d)p:,4hmr:1odF7;oP?9m3:fW\qXGDDZa72H;5FW[E]Ej"?U=T\4XsLE\_6of[&1+]L^Z"B&Cg&T%rS/2G48RAN1RgdZB/llql.2VX&[Pi>J_AjR1R".71a-9?2_H%_UY`r/k#C-*<br)cmT'gFZ*Kd6XK#%X5g_qr'r:1.oBc_(L(%*F%B*YsL+IJO4Q3_REI\S$8/6?<d,TF_N*)V?N9drGFhh^XX!hprNUUOF70HZk#Rd(Z,4uV0!RA!=u1Cd=W$ca<SmsVIG$%Nu^7:RSA%Um?<R@q52@I"I33AM1L;Q]'+_1Zdbd5b'nM@i#gurGJ(c@@UIdVgXl2I2H&''M[HX9uQ0^5)%**&=`?C7ZS3i(M/5+3:*Si9-,u7%_`ncgbs.8\9`ge]<Mfo';:m'CM[i#cp?JBGg`5\B0M,`X5:[X!^QO1sgtV9*JrS:^4!Fk2ql"4:&?nsX'(H?[9gOd4TmMJ<o<eu&%ol34T0DP43cH6@g)M!W84L`_il\N+E7D:ri4cL,&c)S*N<C=P%0,mN>KQo;lfk-sO6nD(o&uNNI)gi*QZ5Yat]$Q-`+Y%'$Ms(ce%i+lLA.,?i:D0d'>i+oEdT?mukH\Fm!;iis3qK/Xc!dfoU*82sJf5-8Zf\=ZaQ?B7b<=,.m=R<d2TmL&7G]U&s>uK%=Hd+Gldq+Nq%:U/?;H[X+Z:[E3\&IRe\l8==JEXBG!HuZg)B>E3dW[(oC*Q#2lGRYlrTY\60>[u=\,B;<pRj%H3<\gGdZbeV4?(Y]6B]t],Eq809%?":"[e4tOspJ?ic@'3A8CFEg^Y,C#2-0':kH#/>I*Z*ijLTY&sV?,9KEq#uZD`so;r1[C+a5qni4gsULJ[U:VIjq\+8B4Qp*FS2H%p_d=Pl5]IG-.SHp$0i36[@WL<%Arf#I\gqX23L7_;)p-.%9S'&S/dGcS2\d*8**h1XSWYL9P<`i%QRe4OYH*=kYB!rHdj_Qb8Q*m%erMJKom86RXI9)oqPpLjAVggGk?j<.(3SA@1G0T-92r0X1"L<paMGSFeoe\17&3pd:1WqcUoX=E'9#bf[+q&=`EBnleu4Ygg+a/i%J><VFW_'G7%+!#3%Bq/kj\["goT0[(DLnu4_g0%e?B%qpOg5"k`ih+h)GFmhnLNMXC-k4(^i^1IF`=CVMsM7g)CZK!FA8n*-c4kt%<[/L&=Qdr1"r*PF?3%!F9#EX/0M'6/"06u(D`STU"S$]cZngMHK8T.O=ETZeIB]_kXdgpD<W*gg;DfsKH[/35,Pp$tW-UiTaj$e+%dB+lXeK[[X!`M8;%I^/nZfFJ#7`)G,;qf6MC2BR@l\2:W)=aj5Tc.GJ<iH=sH?@+MD`fmnq@LoLL-bEcn^JD/.'^>Ie:`trj(gV3%7$A$B#Fl\4,#pL+ChfbZ20Kp5h1nG#6)MX,btQq&VP[h`;-&ph%c'F/`)=(3AoB.VP41Do\jpp-OOPlGj>W44Ksi7We7_+IdREc+%foae$K>^VgPbAfY-A%.Zod,O-*lX(U&p7\N;t>$V'9/DCe`ec4gR?6t(PWjinqs*06=$q-1>pT2fp)*gMa9LspBoZm'kS2h_/!Lj%1u7i_,uAZ.2I6IXN&!TeV]R;Q^@9US9mu9TNtYCtT>pZ_lVHm37ngZ64oP;r2g?6i<VaX0@h(oQi5AB72J&/6?<*%l\_ET6]buJE%5@3LE,:qE(S3B]KHkE9;PCPrhk5+2Y:#jR-bP+,*XT;5M1q.5m@SNVEUiFm;CYEd>6qpIBOM@UU1u+bg1^7Uh3&D6BBSHf9H4<!W%iUCW#A]HbJe$%_!9W'HJdl"0i"#(b!im!fZ0u+ok=EnO2Q.TCkkgBuOOemQVV/_/Ledf@"0Eo/(G\MQPm%XE3Q[T3SD!f27s-ZHf%50M-9#,u!Io=f:aK(C^b`t,hi_%B8*Y!K/'iR1h>1K>$'ksJg#r!9_f7\\^fI&!Os)6fjkAEek6fr\k:6]1I)chVk,+A9U&l?`c&%iA2?\k[H3j6qb]PO;97ddO:Ca"RuXgj&Qo<'d%i,<1AAGV5oFU8X2b4qI^'J6%T,l/LcQ0VDJE#e%HMRC-u6=XG/4.L,D"N:n%=0%BecLWhl:3[Shpk?KA8G#*30OZ;%V"t7mEQYQR$c7Nch\(i>PJc`ZS<9jl'FqasoYC?W[3r"d2VjE291`?p/L;Uj7kjs/&=#F4/VI%O_udD8qo12@)2M+8AiN(&d2nS&Y?C;J2GR.g6=..`!(*n$@6eU651e0Rd)g-PV5,0LGgO,d3tIAngB7?TF"I*EJ($k`e^db1sX.g%aFKPQiMK)Z7RNrkZ2,Z3dD'b&_ro#NA5(k!N)j;W2.'rPF`K%f$YD41Js=AaaCot"N!1I^)OlR+*""3(N#CrlLs\&FMu0TB]:K-p%(D`[(oaQl"qaHO\[Gt4n&-J^'pGSZ=H#`.CHIN'e6O'Mp@K</L7VY."UBu?V;/$T:.B-is0o451qCm\R';K7V6eK=j5+XXP98o`i%KmC-H),7N]BKM@(<2qVl(!('+;@M3,fl<,*1L(p@BI[#Sd1[B,'oo5H2_pi5G/8]gN%SZ<ZG=8sBY9NQhqlFf$C_nY%:h:HKHMNr%>&5IJZJU+^7K&Ja)%H8$15CF>VG<M`k8P:5FW!QJJW+3Y%)uA.N2D00q2L?!/8`,>BH"*c94B_/X;h((7cTX7FUhq=K\D</#;V`g%,ir>cA2KeA`co@)CW<NA&Mu6]EJ\*tD5cP.3+E@UJC/"#kaK.t[+SC,a-RTj7[,VH(sS&kMi5SP#kYcDd:^L@2(Y0s2b&5u(6-M1%kj&TlNFJQ:ZBH#_:@@1Y"tH(S?'XCP-lN[pF[7i3H8jg\&ee",93%?>.FIA.XnIg17)L-:V]!n7XW&LULhK3C<2==s1kUBZ2Zt:m%9tm#S]Euuuiqb(&Tq'Wm*`5Lb7b-hklc0eaqREggq9Wr[mCWZiL[=jhH?6rs@;E#Z-6!kY;+Of&B_DLWKY.^KFJ1[f(rr9r1dOD:%1pgj-G=5+]ZoE$LrCGW/N4ak>@gO[fC')HLRgfh-$_Yb!V?P4NJdkFA5c'YR9e1"CJdosHkW;>^nA^mC3r?r6)]A`iMXci=c-ce2%F@Q?;Wg`b"gi-qm;c(FQE+i3!#i?A9B\jk3=^H(2U>kq=,N7#9\'4o#^nFocn<a]LE+i:=,ZYh&BNc5X$90jolE#6HTrCGF9$)0g%p(SFJWK\q9]SPf-_Sef7SP!q6n^-'OI%nDD@ldM7mi)d3Y=>W(NJDs_XFZ.]V$H*Bn^+M_kqF0I#"BsB%o%tN:L/3Y`o:)8C-&^_%HWUItF:Z5^*8GEs1`&XrL]em4&Gg/N^,RjbXjFfgdB`>l2'JF/;Z3U$d4hMg_bGr!M\M$aJe5%QJ=4eg$Ff[`e<:HGii+),h,[*C%o3<AnBJ*DqMuFA%9prG7njZ#GafWn+LhKua!F1Rs=t.#g7^Su^eLZ7="dk,N(F*,#GTBP[C%rpn,^LZ/;t9j@Lo+7prlp"M`\!CI%0G)WhB)G&QAjf"o[73P?SA?X,(sr\09]J3d&RF7:->#Y-3jN*^1a=J3n/_=oT<"3K(5upQJP'h#MA>aKc\Q6c"sbH#N[-,l<!5f]%1s'RQ]p'0Bc+pNo4;\Zif8K]e+@MP.m;ajH1s;eqZ3`iS>6@JBA3r+9q-*VR+hFIW+:-B#]R8r#Y5iT[JC4)t\UX+BOT]4K0(@5A%jGQO$,PcQ!!L!5$o:]lp1t[1h*++m#!(=^K=o&S`L/i8+o:]kp>0qe5=d\]i!7CR1[\aBq1_Q"r#6Z(dRCn(E,p&M#8<t\.+8S[s%*<Z1t+YJpc8V^V(19rg`kV*umk_X%oLL_&-%HCrA1M7I?K\A-t)H,k&#ZeP1Co9jq[AhM/8kifrfq#sjRF'ErY7h5UMA'#VH:D7Y%:,+[=RRH8d?R'o-&*^ugK20<YK78f76#Y*4$$ca!8JPJH$@3/:`H/(,lqNY9dr9r4?_]U-CKc-)(hc_l#^3g/d##[N#W+lo9F1k)%)?r(&]+E?A/ND#a*pq>B"9<a4IberAo84;fJU[mB7=>8tIg3;KFNTO@9_>LjFH!+C$TQebWsG\LOe6&CQG!k3"@J4SnX*XK+j;n=%Gs.;82>)7*+]:Y!@:3C)c$Z,V6^%8(!%;V>!r9LgUOA9NM,XlB1SAPX$O?/=SBteT#F:as-6j2pfM*nne"/c.E=-X<o.8&]Re;Vi%/CXHHHI`8CE9@:&%i1gNUq>0<bFIbW<U(C_R=1]'Ijr]B/$EJGc[]igLhE;WIf[m*_5r/AhALf%Hai%k8!op!43p1W#2Ar78s5`X%A4?[f]HW%D'^$G@DQGXEM(7OCeJVk'\Im+KH6qEAk<1Cdc`N4im6PiKP])r=*'e/r/U)\ic7hrL7,j_\84[Wgo+$4kd%!tr^uSb9%S3a5g5L'YuHl0tC0?G))A`gZ7EmDF<Nq7$C`Yh=6kV(0&Xkc\;]-5HI3(^r*``c8II5%0![I%jDQOIM/[=F+4)q?kmBkCZlb9Oom%Z\:'.9a">t_ASZY3eCa!EuTSl0>eY`W2>>X32==%96HBZa-q`9`6E6">TUF"M/VN*na6UqR0EONGfs5X!iM.s*W0MMoP[+$eQK+E%fBo'bb\,$a$1jY^8dkfr-!i3)1Oek`fd8JW5bW(?H5t'9E;mNmoZNm+P6.6l(F8,-"ut((M*h95'eO7p"ZA.FW+HVX_O9@4l@T/s%N9BJ50Z"\i7_U!(_&6=W!lH-?^T6$13:!'jRR#cG/3CT"LJh`d7fDGiR,t\21;74`iij]E)$[&EK&Fl4;0@8r#gTqPWRHIWN7UhO%VEd,Y[?I9MAiROHCbVCTHA5BdKEj7]Q;Ui,E5&Dc34!rb6iXuAL.1[;S)I&r!u4>BE%](D]7OA&`$))@n8^=Tn]"al@>6R\H)c<N%_\pd%jiBBu):`FHH3M/'V-:a4]>49Q_9Wq5)="NcbL>L,)pP'$ps"%Z\3@J!bma)\\.3sD"$GQUGdO,T\-DT-QD2p3IAu8fYui7l%r+>q=Q#J,@bm[Q@1O>=V4cc=fM/PR>(u$^W)<E]l.i[?XQWC`?DJ"/'chp*gUDo.WcmC\=3lt"m!&q*[r4BMaCO146D"EPDje+N8%pinE+1DVmhLh6i[QH?RdC^)n\oDVI#?6]^g"u`[HZ=r9eJI#bIk+sr1D%)3^TJ]YK_30;cR\te!?`[j9\em@6<:apD]jjkpZ!L)b%d)g!6VkZaAB3l>`_cJN?c0RX/PYBB0gl)Tu.'9B!cO^<37H,fn,=Y!DRb?f9la(1'$Agfm9*&]1Fc@I+c"BN>NaUq`1BSi:Qrq_'%H^(/ZE+[1g<XUc+A:EJP#+CqsL(iiIMh[r"@;1+>RG$l+[[5/GIPB;@2jP<r\6:,EaukEf$7I^]74^1+RER@*!>8(<8=,&kb$6ek%ga#eWKk/1[5qm]uR7DI0mBrE5>&PH<QXU(WR+meiL>XdR=i+><`\HK\phN0**rG?mc,g*2<?c*`0]oY<V$2d&`9\3eAt2XQUG7tj%QrR6r&gV'_7I(S/NpU^#2hi3q]9`Jo0]UXcM(jT#,,\_l(PDP%+tXYUB122O,FHf!lM)PW6VFLI=p(/<oT'6,=jY/Bm*l?BR?QUQ%a16_20>e@9Q0;d+3k.'RoPu3%P.V3c(TAK8G^6LVW*o&a$,C.\QVRb$0Bt;*/UD>I7c]1^&8Gg[Ijg)eWQVZ+->j]++U?VV4+!%E%*0Zl'%-q?<Io)KRM"5m95t!Us\Y73ui='"H7HgV!/skQa[kHsN<^,]Zct2@/.6A"&Z9SUpQG%Zlpjj-&#'?8I?I!6c?2hMB)*tsN%+*@=gg!ggZq&BDN'"Nt$H.L"=E>d%h0nMEn7S(QRAJDdg(fZr?gbO%_K'K3bZS8i&XQ:,2j?P+DTQm`.ofba=acb9.%,=?nK7gOY%--e-k17&3p70I=m$SnUKK=&iVVb9PoQcr:(^s`K>o?>]1DnT"BU[<NaEuN3%rp_\@k\!>@7s4(<`E?e9L[)"c=ls9KelS9GS<fYN%N#b>F$-k<?8CII#ZOF%;X(pbU/AnK2^;3s,Ki6b1/^ja`,J$1ao[9`t@tG8V#*l_*ZcimRaDT3W:Q1Fs^ati=8J7D%Q@a)&]eIVd%G'@@+9aql_<l-D/csnfQNEN-2=Y8-A>#?!!CaWg4(6p?(Qt7n$2.mc4>Z_9`V!HQ&@-h:c_Mq^\U6p8ji%/@ab8QJX/1[^SqDW#S%E>+Kr!jg)sP.F(!ZV38\\*W^G\C])"#A0B?[-c-5BPUG[DTjld,`Ia$ZV3_B<1*bLmO6TVKipmbdeDXdA]R0e\LB5UfL@gd`[he*%3+IbWWq/2TIY,gd*.tdFbG8jWZ6m%"_a=6n/7[M7Qfk4s1VQQ6@o/KMA'31)atdE2MM'`LAT<_'H7@%erok(QAXO<+l#4_MPa$7(%P[uSP#SSq(R<tsXlCogc6lrT"6`GG&C*tFQ>Y#2CISlCWT03"I/G&M/BU+fn"L*Qo\0/sKqA0<<Asc4=B#l_Z$jb[NAQZqJ1LuoC%l!>44b[VHuPt8tO=#XTp"QQd.UYuVaILS5Hq6CpEN#tl\-/clR(Faob6'ecTP]rJK<A1J+Z2>Lm`,ZcKYfud1EqLb1kPP*E=D$id%KRk6sZfI[WJKQL"Go3Y>;D1W-YqN&Z*n`o`Q:+he%P[m@iYa2qrA;`@*6thn@%#bg`Hq]Q,tQnS,qM.!Z!Y@',?=Ug^bW0c:Q9N$%`H`UN*s/[jY:h[-=#ZUda!1T-Yfp^%J4QW6bFSJ2/2K1Pi]mL0C!f$i^bQ?3)I.r,hL9(<"0p'L2[*uJ=@ODuQ(0dBR:n*pB->_?%.^Q*lJL2pXXAaJPS$5Rl7ucX;*!P9s.(aB611MZ5e8N8\XCQo1@[RuqUgPb&6@n.@=Q].PapH'C,:=tE5&luCm.k*Ae"No3-/mdL%\N:+#Ag1ZbkfjZ+:Kdk+bSfimr^)orce)J$VC]Wb(G.&YYXg2XP\"`"$.M[PVNm2l.*Eh$Xnbk\.3heFO/q?$dR_qf#A"dq*=aSk%=_;i3%dctnB%37apH_qo!A>1D5u34s_%pZjP\%"fb%3]/`X!u*)K*LaCG^kT]lD!60jsg$?N&c(iP=4HN#/7D2+-EK/O'lON$mDh%*jOqOe(r$Xi6'NmeRU1+#E0=u]T$\$+tIS%"r!*b3q\i@]]5Qp_9/70\9fk`EKdE8?!d(*<CY@QPtu!Ao*lQpONLCZ0N*<4Pll,t%5\4W<32?_V\@V\4jse3Vbue#qKdm!r^m(6W3piE5>[9@R/7f[N:+K/`eC6Q*ShN"LWNh<m8f8X(eg]2WSlkkr+Cu6>&.BKtjhN)e%7_(s_kF81Si=nYt!E#^X\F5cX%"-M!![tMi:8I^-/Xl575+)^(-U<leN&7oI;hcZp,%-eCbckD0XlDku_aYPOOHWlSr;rLJS.q\H%?ef1V_F39d:9R2G.-'MM#Xp*bA7*^E*\>?>-8VZGer*4VhLetjS!]-;%__91-:<A?mDr4(1p*>G_BmMU8;O,h@lHls"."lJ1Gj<^%P(t?!M+Si:F#-A/_m@i/.2a`*,-aC21,LOUopM#&r:A@OkA8:@et[-hX5@J$;_XB^<IH>JSeVo@p=57AiF?#f?mQm4Ha+[8NCQIR%72\MBOl7.=_&dQ+kj)3rEj:aHXjaZhKVVM=1)*PtTF0*L#+0<_Z7<ljO5qK`1Z1)#1S7V(MD$CKN0YU&7*bAt5U&uk0trIbCnSXT%)2S2+/";=L>QFYT6gfM\$lUl,]hC9f%!f2roGT8kJl]Bj;+:J?VIr1]*hcWJ6-(`<if),J-@:I4(LrQs>AQrPA!"<\0p7+s027u\%SVUhEqIo,Y$tNm'Qkp5818m,/c@UT%U@%dd5]58fchq9PBS`Hur%VntAf)oo3+52U5Ai!K5,[ON+K4s&+7lnH1lV#5fQ*3p#P^9(%h`(9H2.`dHFAYf6SsDc-Y"2)$fmGXnEh"VHa2lF6Dl$ch;_635G[..GrQ.-UJIm7gNb^Jk]P5EYBqEk/0C63<$lQ/,_#[OnIYg*t%CP=HO0#[\',1dqXj.3?m'dr3iT[N5lDcn6<c,EK"Qt&ON*qPMXEdX5_/O'kggtg(6)95ArT\kRcc\-QpGSB)HGZkToZ#upNI,iI_%P`;'=,f:9!R9?giYcj76Yq?5SU`:h`#rg^Ia9C?YioK!1A*L^6ZLNfQ"U5ptBQ<pg24ghRGd57(-77918H>#)^//;d4eaD<MdJhA%PA#oaU)<Na5\$%3*HN7B1WK=YKo!GUNdY*[,gEjPCC6GK%3H]p`iN&3L`7aPe@SFT>LHHeU5#j^Ef<k7AsDk?0t*l>.)pm*K(;6e%\Z0,,l4#J6Jn28*@Z1TXB:UqfMD=4_:KTsW7'1-=`u5"]H?Zn:+5H>`n%YcEO3r0j6J<.6^>3``+ND5I98;u8+f2j``X!\D;^^g0%"*[$g:B6>Fi93(P<$'*g2$r]m^^sI&kf';XPBX9i7q`9h/k3F;HI!]M,=a0lp]W8k_tY:ncCl#MLLVM_q@?)*0<iF-6ulEg,%CFq%TuEoXJFLN/L65ILJLj"4^E\QR!4dE.FO<nSS/SnH'OrS:kH44a9ZPtnik=.\3EX6lk7%PKckLRTDc6+Om*UIu6=K$9JlA1o)cI`r%U_GK.i(5#FLmP1")c@+7XTCL@mUA/T&B4+1(SNgI#q.-*q=L"L]E0U(j,"pK()b28i\d72%QZ<QgH=<D.udlm_'WK^:'qR&)U;dJ%A7BMU!bmVFHO'7/\A\/Y'"o5di]ZX%#F:a3G%$4F^FnD?iZ09l1PrTqJH_2r>)2!#@W30LSMlNGRS5%HN?a2SP5"IC&LT7_@)PGc%1*'sBnb.b7Kd'!c;DB=O9'=^B1e>P=<(G7J6qeh;U>QT8ksP]30uU!C!PBl"kAH1`O+jOq<F,qc9CD((Jf&_bL:Dh#N:ae52%1Uf%B'Wh%i>iog^^hM?X-,Zj.RE'M?hgj.dto-c$(^mDLJO+EpPV+lc],naJK6pO$5:qJlS-F#hN<m/jR@>-.f$q9%"&)2Tlq0ufXtXS%_reNi_Q/#7]lCqGfY:i_es`l3J.5Fu^ABj)(^["Y9ns>G^u**ri[k1cbGHr>0G7;]3\;90USL7dL6:I6mT#TWT'8La6AB+eQ3CbX%%6%bk24?3]%6$nn/XEc_1tr-A",]m%Xqr?3BF=AU4dGH0]J$cKaAFF%2d7+L*W[dN(<0OVQ>`u]<`>j>QRe"P=5\l0Q$%uk^8Sod%U5Xa4"#DdRM\KJ`[sj1N&2XtJ)*hW5c!8uBZ=]7mg]#2!di0gtV$Uo`4("@/f=J#3Z\5S55"64W<l:S^I\VS.Q'ku)@0!+_]_QtD%*\9=g5<Cp@r#M?,s8QM\Itn:.(Ou9oJ,1htaa_e=bs2*GJ*1>"mt&7Rbs24mrpbL5SD=/93PRfY=lt51n,M"cdBA&pdm*jsnLn,H%nk]:hs6tO<DfM<InmD=T5Q9Eprr'V/Z2Udg4[8qfkC<Ns5Q9n3I/`RB-iEo;Da49l^OJrWnONWLhu3>Bro`Ib^VdM[j.H=0/C`k;%pjBN+Ags;CgW-tR?O6,AC]<uSo4K[Bk3poo%e<]FH'!O:l2C@+K$20@aTGOAeULt("2X_`*YaEucU-XOcf75R?h^@M&YFRGDgsee%bjX`-kM@@`KXmh3_8agianS,/0&q3%OKfoPo8=,5TC-PX4H,mchEUc#TDfZ+_bsJ&o+-p(c0b,<lr:"/)gf^e)a5qS,fTs)5LZ4M%U[Ju]Z*8?A%t9i#c.b-9*4e1)K//bcp^GHgOi[\f8B'd$5-'$;oDp4*GN*[*_rtTrIbfd3A?50%D;Oi):<UCZD4:@l%KCZ$n*X.4%l*fN$qNP#!iB7"+I)@,M=m`nOE6We,4g,ra9HE')rh#dt07#G\o`3mlJ#HbWrFU+>[T;Oik6p=-k=*=C%hO*6[!WrNILBQ@GR.),%`P8hPFdtc?fnbk<^R0*9COD#!F8Il2]N/q9/NY:K*>@)Q5Q(I>0iW2YnY/MBF!#l>Eu7arC_P<B2L[h!)^!n;Tq[l\@eY&_4FM:2%Jl+9is8Iegs8Vn:7c1p@<[5TT)7.<RWI=VWFMH(!JH*CWLo;*?5N%_E1"r=%EVZ@LE8PNV_1Cr'(q1CqbLh4nYUNn*=lIcK6$I.&%\^AD;TChfQ_]2#OQ5<tf@>n<V5J-u')&Zp1?BS0tXpjH*bV5BY>=i](oWpVJ?PWsTgP92(R#NLIQ*G90s21K#=NDQ0nZn[GCZk;>%(*HrN^%G^I=Ng?C_t[df\B&u>-ghPHeDoXCaSPeS^^uX5C4HpB0]!)RT&Th@32`?kC`=J4_;k=.96f?ccUi!p!fhH:4Bu^F3`buk%EO8,sH(K9Y%+**5"7jcnNCUPl5k0+r..CH.Tu*,+CHr_Shs&22_D\Edd5o7aad78t?lf-rDW>sPqL&E+ZOM$2eE[3';U`Q7F8$X"%'l"TGeNS4jnc8Ztc6*;Ek,ku*!GZMa=8l=8%WJ%+SD*:M5U]aC:CV<pa)BKfQ\SK5nFIL1N?;SVr&e(Yo/gIR%/U8okO/B\4hu-O%GFs#c8".C8qAn_;Rnr&oIpf?&N5r+V<^9chdTfX5AE/Ohj#?RbBAiLkZF_,e!eD`6g&1YtI,kIJ[>a&Gi+;5_%=^50lC-V26Tn4=%5=HrNRSV"!^1NejT>:>TZ"-\+,A+pi_VUu+plh]A_i2Vg*XMWt2@lfWCook@p*[lRZHnD&:E9#)?[m"H:D`r`+.+pArabpdYQ$ZO%3@&2lk;Z-=A;^Ji5C%aNR--[-EW<G9XqqQCP*fK7U\kniZMa>43g9(oh=&iq\ehHcH=@qFV?^@pCQ!'.;Bc6(ii$/Nhs\l6:(>@N%)'d[LG)3qcI<s*@W!N4LjunV5ZWH)c]p]'K2JQLnrGhdgJ.KGlI^f=$k3rt;e5%u_*8L%3aZ*HFH,OM(F$1aD/[qiBNpbM$C5g%K%1At]"%t36aiXC-\"rhXZ+'q9=>88[`rOLh&r4J4nj'>$AWY8;6QNK.K\-iPBRU:FBAt!P=1UaFMEn6cdJ2"m\<q65TSX>/I%J@S_%m&SL*ps%sl'JDB.(Y[N15NqdeK;-bG`tHAdQT.5>+,I%mAaH!"OLsU`lOV;!p&j@<kZl.n_c:)jGIH%EHYe1CW3EhO,*R.T2VN5g%!HP:;COY3!.jiCiN73e0ok&\u"n+B8B2^VH=ZsNNNG+L!=H*2nF3OOV[.D8,:FuKjLd+#)B3^6l7l\8U>HSbUk'*@gY3<&tIepVs%M%AQTZUT6>pqu.3'iMF/q^Y((aQ_5i/?*g+*:)(GARg:L,NEjYa:rX8>XocaEaTt3^T[LPj(G1YQTm[=pIh/7atL%JOItEK:*>&U%df8XJ^$XEks5iDKs6K\McNFbUUU"0lhe]G_P9ft/qhL-DkOiN$J?d@Aifj#/I"PeZ]5R:gk]:7gZ>/6XA(sqkJ#UXtF8n*T'RJc$%EI`V=heI2B^f$XbN88]GjrV?rrQH>;Q8ekO()obkNp#qID:eZ3RY;CaDWRh%"Pi0s!U-j2%lZe7MJrAamfP"0)eZfH@upK,%k%oQ%@^Wp`%BhU7bPM3als-,tpj37Rk8Xq\9?T<+#G2f]gDBsY,rL_nYd>&0)>19iJkAh"1&:@n&`lNno1!CZ46(DXe`OF&>WFD4!-A"-%X_7Rg3(D01`qj8g]p>qJjt!:W,ie&cHr5%Im[s@i:F,(e,mf*VaQZK4>qZqf(@U^a>Z]7>Qdt\CTf_=>[9J[^-]F\*c+19Aj45U/%.:mMsi?e,@0DG"U,3'A'ZkH@Fbh%4;prWRbfeH]s4M[==Z;SH:",n5p;&&1hMrbO7XgWXni1lV5>Zs.5JBniUVrf_ID+01P:LSMY%mO3L/^%.Tspp^bfjC:$t]g^P.\;_PI@9b%cD9]6m$Kliee)HKWAtD@Zn(h3n)J;==`'6)!b;jnjTGH?O]TU"8>ub;/Z+e-Nbbn^c%35G.HU\S/^Y7&dfmR-?N"?2bGIR3:B$)=X_DS9BR=Z&WKdi^b>NY2SA?OfO&@"t=eXa%nbH6>KekGfDc`F.pDm!*.NQ+?.PmHp>=%N=E%?:uE8#LhA]VlOEGi3buKcm45pthh&UdcmQ#H3SqjUq[2q&]Fi.B-I9)Q[lcHYUXj#ui/Q01/\9-;:9s^37a,[/op,:bMW[9t%m,rQlC3(m[+J5CUS4/0P'1s5\H%;&$_;Yt.>5\1k1X."4R2IebU--;KWj4UlVH(Z+J]N]G_<8L:5&NkD\qjb:ESSO'@QaoIdl0Qs%iDTE=GDo4L\7!gTb#hk>^T?WZOCApoQkHSX<9Bs0)1kU$CC\pU&T>,4C\`O_P6V@@@PRBo:?3lb!FrPGo14r4^jAhCo8c&^?Gl#)%BS/f'n^KaTp^,soo>j<_g+V<tXF-C*j!#3/3=e/1-fYk]_mB8-,E9>,/OMqs=.A)EeEc$e8c?qYXMp6c*ZrO;)F7h:#Db%m1J?6M%4hl)/R'9l?+qR/^k^hPG)0IdA5K8Y2I:g;Vo/I?"4eSg'a&A?Q[XFa<%\dPYcquUSpUP'gBoj"sh7!cSgg=nMA,<m8;[$[lVB#l*%ECr;4[l^a.8X*Y%E5r!N*'jhVTKYUn7R+rfKE2A2QoWkaIZGOb3TDpgE;d#N4C09A)EpEtPC5VFNuLiK(R$V72KBS\><jlF]_A=X%9?sj>*8D^$N"]teD8kH2;#V(N<^lgt7+Iao(o!dNgcFH)7pZ7Smelm!%2CY<[!d9c0K1T*#]kh9)sMmj.FP`u5fUIL??q9t7*PQG%4_!Q/Ysr27:&14g0tFgpcq"8\_$F[rS.uQt,j'>\gCFNm]^U+9omf@]f,?_5BVDtHf!=a1%TBmf'E4P]m>714a/FakEs32?3SM10%VQ5s6s%O^)'4VOYGUq@VHRNck;V/5G,LoAZIoO'M1WFR%b-%>mY(go"h/c\1I+H;B<4<O!3#m+^S&$tJN4nTUD"7S>XkT8#"8%j;%CNp`%^nd@V"BX\u%Wo=DrItT-5Y<ro$MO+OV>6Yfn](QCF/r*<=g=h6o2BE#8WLO]gi\EC634%;<_O[/mit0U'0)Udok<uJ0nMY3%<ZSpA?f#P9bTCI453l!^kdEB1-b8Os7[aB#N$%)CFt\RPbWrqs>k04fJu5gP*7FpVgt@LchK!Vkp_7o<]AISJNWV%CjA.!ESWI=3%(t5/]JaLSKN]$J8QCseh\]#_Aq30$>DN>7Ofe)olN6e^sW-&E'iWh=c<f?0L*8pE2S35Y$$=c:##D,3FD)LGi]`>kBk/Y0#2mGB^%(_.+u(a&<gCi>@rNjL#j(h-;?=KRTZTb:To^s9^d]mfOm1$#GVh3>6Ue&[e=Y#bd2NYnA`DT)XJ(8GZIb#!$+HKR!E$oK<S%aWin%e8omu7.rQu9kS?i'X?Q8*I7@=]G:.4n%7<5[iRVIGZH2P>'Ba,Zc;A7oIFP=F*t8q'uc,(28\5VmfAm)E\_<S<cIin%-"QhB+\pe%).=2I=%m4e?Z!_WpWVmofJZW%OR#V1<AT`,Oa8q,M5trGj8_@Oj7$g/Q%b%[H>bas3hP0[Z#ShkAU-E=F8)?<[EMYEk5C6`/i$2Z%X0#^N3WLLr#kL&u&*"VT`rlIu'Ql_9\fBToR*X'ip!hVYK,J1m2"holg7!;;f2^Ot[)g==[bWFt66I_L0k>\"`UEn)8<i^@;iDN-%oC\nHEPhKcZ?FR$=MNj&0k[0F*sB4t$`3K!B]P6egE$GBbWAmK]1m4e<e3;aWc8/UY)NC_kp3eLn1GZ-[S<T_YA\/cL6Q9jn,DPc%Z*S&<hd0SigF^il:X4=53,/$`T$U!?k>h+XN',.\f4*\&-dpO\h2D9RCsNd4-Gd,GP0[r/5p@Q)T;I,;^0U06,'08*]WuLEVh^XN%<e4%S]P$`:Vt/6.M*Pn3VZ^c<_1r9Kf+SB;G5uHNgc"1Y$nLP?YIB?XH?fLNm^H[1j/`hFAD[h6l\Y9i_%C[;8G]ZMYK"$:G;f_K%@HdlSr5'KT+>]*pI0$@=;rHiGmrTcrq.fSu.dXe[Dgrl#%du?SG%&UkrTb'sBm:i70VLc2e`N0AVIosY*_GX5:*&05n%%d&`pnA\%O+V]4[`+u$&[l%`IU+!-&&S66QKi_(4Xm<L\n1ZI)B(LdCqO<eD:@f,Tb4Ei@B)74n\_<sPh:.[)ah)WV$(=8\,#d<cf":G]kr"g%;r3@ic%.<#!Gl0i5tbFBZ1H!A6IOtu&O0=FpM\WC@EXT>VH=<Jq[CLnP-J-+nDs!`N%JND)5!RIL+^d9$Q=*'naJJ?K,_6?3YfH%%1Of!b9F9k.7]_Eqe$q0d:r7<dN0?%>!TYgMCF_9F+PaE)!/Iukh;ikugGJ)\</N=:lfsEQ%S^$g*:ft7:94X"c:lot2XL4d\:N4]%J.ds3Q84b="h)M)4%:9f\S"tD>F45!#OOk"G`W=-L@%$Bj9\7*E$[4Dnu[HT<"L/CM32`-'RH,cri=;eP+lY:%,)EYr7.@871Y#U%?d\b2UU#HAT:_XnGn9LpqPrg,.\M`$#:QRIa<2R`[Ds2`L>m;cUpQA6f<EV^fFVt/-s:o:0697''Z#s[Js:gg?4<_`7uZtq$^XHs%AaDEt<`HNL37:*(Q6ShKq%br_[n(CrEG,i1Rco6l1K?sOfdeu+b*oEj`1?@iAm0#=8S",gVgL<g3;#7?7<?Vr6^,)SglsQlW-Wc;%<bM),PI`=qS>oono9[mJ7V6qNQ#[A[Xjm(F^8tCSc>DV<b>Z=2e*!k-!I?AIM^Q9u!]5rsH%:&^$qC>B*8h\`oh`_igU<3fO"S9J%(qG"uj"=A(K-Htu2(6E?e`PCk-kEEmEFe%KI0S#4A+Q'rd=*)0c&6Sd*!^`]q+i%hPqA@#G$M#H8*P"1T0.aGHH:#K&+MQs+?Dd6%XS!8O<X1#g3Paj&#6"JZ7D/%?f&%WUBJk;+ZuA(,,'blF>S?SoN!"Gs\bPBsj7P+8R]gs!29kUQd!AK'9V0?"C6W@XgJ"I[C"N[U%m:VY?9]FF4m<nLt>0)=d;W<A)*+6,^lJclE]?m]k83;(uAaUPMrB3*1MoPQ-o@,IJbMK1)B9[PJT2nde9@!l@O";3o.u)3n?B.,1%R4l;OOP6%k/It[(C>cc4`O;i05X!S`BoBFrH[n&C_J'*A:`hHWi#ih>0r5)HZn`Z[\H;2qBs!%0GWTH*%,LiL19KqXQ2,h=<>:5W%/7P$@o/c9W)ihJk?cTV>77E<6]27;S9b"(*m4CNM>6'"RqE)%GVE%P6rMnTF4b;esA:N`P;e+SOi`IKP-2W/3mh(Q\WAIIHPuUMV%P)L,E6ll8!EQ+CW6EF>T9sAS/H:r%n5sHH#4P.:('DT5]l*P(Ha.*$Ch00#VZP]M7>DKT9^VuE+'/`GOb[cbJkkg;VYSpR>,IA+/%g3N#+(ub'Z&:1[3LKM^CqQQ/%Ao_5<]ZQ&7"%OE)CkbK<_D/:>f99MepO=0C5mFoIZ4Mc-kLIj"5?bfS2-ru%$1I0m1D=na;%M&h%%b7>gAJ4ru8uA.J1(iWQW8;IZNq&3&R<Z>6MrdXUrEfTu<:6;W(8^j$qn+2DOeS<0"DD9SV]hT+5:G"M8)*)%a*XrCWe@R.*c$;`%@PVbf'mdO,(guWfMe*X-N1iSXCq7GC:DU(/OH^a>XJ3P"<7=XbkjVP48)&c?#nisL%3sF`Prno_q_N.^1WPA4Co#;V!,qfn^GQZW%Mu"9in+FBanB^sp.$f.ZN"AdA@<+c88kG_@EU>sT$6_S0XQ;u;j/%YX*6q2cN28P&.IkLF>:`]/.5iKsn78q1?LAKHaS[h;4Pp7B%\2?YmGRhtrM=eHBc&(D0TpqEfX$(UtLFht*-gOgek]).<r:IYQ+ES+Q`$-TuQQrX`MDbB&j]%5+VRrFc#hcjtUSd@cUXYF8-k<Jf%9WP&R2P8Wd.4onM1HmP5RF8'_-0hurZ!)tM%4cnV=[#\1<gP/!iKe5m?1Dsf"4J\Y((>EEGp8c1dXUcPh\-jQlgFe<ik"UmB*c\j%[cm8,PZD71p#Jhpo6O[!6mW?9J\QN]'hQKIBTEJE\@56"T]Lna&6T<So.'QrO'&*h_qKtQ\\C?.p)]l;'asnTfQ^k5AUDVqWE?KG%<Vi%A5`$4CqL4g(irIQU.sAe0233'S6'_PWW9IBQgCrTnV6t<u*7pdqD/;3VoR.ahjk?to:V!f,Br6pkUJiBN778@2&H9UJbIB?A%3?t)SZc]!?NS\(CT)77cq\\LPLRX=h+&q@T>[i-R\0U@nFt2,hj3FEcSIbH(]Zs?T@GCD)H+nia.)&VW=R9Dl]"_,\A&<37.ZF2W%[rffSdQd]5HXcmsb)hWV.`P=)8:Ls+4hs*5+?WsY,M#ceMN>-!Z*no=l5RVBhXol>)Cmq;:Xg4OGo[CbXSeHM:5#mjQ>[0[gs>d,%m16Z%rAO+nmoFETC\M'fqaUt"qWY_VCmgVF,"Ft@'YZ@i&Ri,WI_MtNEOp@MpZm_QGWf?-(9]r2,uKqGrAKUGa%Xa!Yd&o2=Y_Qu%LeBc[OrD44QFVLZUh/RI&Z,<)H?UFg/_rHo_kQnV%U&_iacfrK2"tNu&_kTTOS=[]E_V9,g)a\MHK$881Yho][1^m!?:r.D6U<Pl%G;/no['asX8UtSW:aU8d!S:1Y<qJ>(ctk<c+'45m:[q]a`tHGK4"BRYS)Y>7(a&;\s3-St4$p9YY`.%_3#(jp`-FrsTq?DE%PdDi%FfQ+.6[V*?j=:RFVk33D7b6Lc=_$Z+.T-R/C'M_m&g&>+)FGH#fg.&V9o8Q[HSJ%H/DoAF^_qLsmL2jn8O@<H,Y\g$[mRqB\XSZ\%5t'mDo"N<1,&4dZJ`qC9",''cUojj?OtX0-n,>?h,#U'=Q]YgtN@Z=@@B>KeN45I7jq5fAIKGr'HKL$c>F\(A*_%nJQpZeS672Qg%\?VP_p>Kp0+QN_cA,s_7:R+:A87da!#.CXjSbQ\_`U#=)==M>(USDZYmuK'lM<2WX:V,%#F4*U!Q5HW(ii=Y8;?0f>'F,KHS\A^3%;^5'/NX=cbA`;eY"q/";B)soe*&>NkmJgbd9AA42FbT;IpNcZYP`n/QApMH8c4Xcp,qiDk346*#C#[4^fN+`ceWMiRO5H#m,tNXK%/<\$C-FrE)fGG*Q"@*Lu6'04M;'@&]oi9Wr)F9&3%Fc/LfHs'?W+-SCA1l#`WOr4J<@02Zleo2QUQZ2A6fVa:C6bMg*Q--X<4AY-%0@OJJ7(rZ\7F.7X)9`)`Sb5*u"g/'hq-.;,lRh`/$&1sf"]DJBPq3/.)V7U?j8LBAbqhM*O>^),QMW^j/M9-%Jf-k)J`_LH!]r+1%!o5cQ!Xg&jFV]LgVjfi?W?h$G:`)?\Ws3hT.La>h$4G\<ioNX5lDWQ[:c0=0cpPL(J_Rg]!>6B*36?.&&@*YT.;3(V\=s0Rc4JmB%L1"7EPtVO%0f>"`_cQu>T"<op(1rcg@1=QmO;%bJl<Yjq\Cu+717!e'Hq,[tAP`J*04aA/<UOjIeQ04!Y[W8H9h$[aaiX"o>>`o@%VF^#U:7/9L-!F(tDrACilQ3dCQ;KUe:XM0;[K+%$Oa?-h80GpdRB/1lJY@^NLT%_7#U1@=<h8R;acpL"B9Z:0/[;+-Vg$f:Z-"J6%a(/BX81U]`g#+nk,Ma\8KkYU_a]YTnXp-AP*/NSf\1Hi_Wi.A(1>o4`$4m?6*RI&*7eMb/,S9/c6tJGFAse@"8!MQQ_t>^,iM`Cg%!%E4DBTW<rZsR,2/)g@;(.ejq2,#*CojnG[-(2^fTHQTASaGNCerVjW\uiclealh<aTfHh3s+N.+IOGeJfctT5aG_X*CE=>YS0;F%(*m>JZkQDm.%mgool3D$p9cd<32((+l"WR.VuRcBFi&@pJud'q0S2rW-t'3.)F:/>H)O[-@D;l$/mJtPMGR"'cRXRVMeej^!&!\Z%[F[cCC*U8dXQH;5>_bF7;o&L"'KE#Ei[:=O+N2qUmb(PFZq]bbD%$EU6sDX<Id6-1QRU/oRPWZtFSsRs)AM2f&P4[a_'P-<@u-G(%$kZksMD*Kh,!\9tW\;j.Y^s!)^jGtU68"-AO[8:e%+8%]1db]'#TZo@dlSg9&XqZ-DfP2OD[^l>JEaeYFY-iKC?[]=\_5F<=H6i-%A1[%g!dtJTJ9C2]\%G.6>rX?V&HQKIWD?(gSlL@gUiJ)@Y-j6@$NJ;8SrW?0S0Fm\*9iQF.TlpWFU9K/5E\:eeJ0]tank^14sH3L%.1&D1"4e#WA>]i;@8V/L,%*Gj=4g5L21k'[6qg+ii<in.R&dlJ@'eE(*r:jm/R'_>9PkG[FTj6Kp>;jXT&)=:_8djibYKo&.<\E2%cm.a$M^pdK`r\9/Q./DZ"FrNT6J191M"tXVL=[#gM#oa/BY-O&A*olJ?k7W*SFcm,RYIkkW=C/a.e-c?m!Eoo1(<j'"")J7&-8@E%A9'I1O#2ODY%Gh#%8DM@ag8/`8400=[75[CUes]WR5e#]3f(/pUo56t7!B`6hZZib>45c032@nk_H%]*2Gu%@eBQR66)&2)!kM>a%UiI7daslZAIAZR8(s,=UU&l6DO^f,gPP,^?K-qLFEg?&(L"nDm+uXGAlLdD\Ful>H#a(ki7jsWHJ[enkAC3nl*#V@M?l=.iXG4#1%:'['EIH5u?(BSFu]oXs)KEu4X3oD=)Kaa%7_$%QSb@G'f`5nHDojrOg#rEA2Ku#)J&7'tsemeG,Wmc2d]fi=NY=HAp?2;[oBZ5C]%nlq\Z9U!%XD>q@s-\bu;GS1eG,.YMSE3YRl&R$MWoEcWITfr\"ZlA/Ngcl+`N@`sP[*fMO]6rAb'k3QSZe8Ae8l6V&M[e4`*-Ct'%Ac,%Bl@MXZYgq>TRH[U5O`/>QQ'Mt<%'[UC3*2j3-e]LM)8=E&qDtc/LBVmnHT5B3G(:cD+3.m^,Q\H,ddC"d-bOh@0<.3,pGNY@%1g$e27-?<<fgMiM"G2SWQql./Ofe0/*0_^;M'[D89jQ_O//_^_!R1%S\Ea[W.T9]$rZ5OfP6+E-?\nd,3TQun(;iF*F=SQG!!7t7%Y&+Q`lf+k<<dWhFrjDkI-\N(SXHMe<;MLZQ!6!\JjhjX%6tb%(F2XHe,&Zs]1>"..H<p/*f-$_Id\<a6!K_$c_Q"Rcd5_\1W^&s[%k,6idQQr7\l7:tNku4[tp<ck`82qP]M;AF,WB!Iaie^e0"g/6`+Z!2bFF_iN<0oaioJp#pBU;;-Z)tg8MPY$dJO@=mUch-*i+Ze4%XF5-mh7%c]f3ts:S>sPg0j3cK:6g/engNXi6ssd'1:]'3g4nf&X,)?e_lc?>,-_.\n-)JZ<dcOIB+VH]+b4<+(8M/lO7^OfL34dg%R!<9NW*L#915BPR-ho:Ki+K>X"l]t#Hef6+,WO@U!#B-t.LXHK9N@@9=p5p8C5]k8KcY>t:t[%e-j2=k//2NmQhn3\+i%:;MHiI#%03;b&b>GdLAdBC67c);I9B&"3:^\:=4l-g8F-q+L*%o=\Xr(TI_LcE%=]WS8$!?+&mEncJ!/nE:9"!ri'LGOR9UBoS!2G>gQH>3(%rKFa4,#W\3?>p3mI7Di_Yq<l_Pc$!\&`:q8A&SF)7:9F!IUI"X&QS4U"M0m+PPIQY6"&e7Lq?$@7"l=FbD+?mpHs@H<V\Nc6"hir%U-@YH!h3"i(o`r<!7^urf$?U"#IA;:eJ;H$eR>bl(]^rsX(u7!HHVMo47<^]L5T$.-%J\3!d/T6)5al4`J<r*:J7Q5aCqU4kUO5#%.o?9e^&Q)Wlt[F@[_F-X6LgU3#E7`0.f__r!#)?[ADkf"r>APqa3iF4R&p91Jb"g+koGM7ea-p_b=@)j,H-Q>!/>+'65AbcT[k$9%ZBXPeAK@k7`J;h8VS4P+7dLPT89mZ+X@%r/j63qFV^^q?r?Ol`!auZ`!`P7[/F!j="'q9mjopUU3lXVu9b.Y7)'&dZMtR=<-[eEV%D5L09'1fK!-XSjfWje*#1K-^E$AUglcua@i4/rhg13jj<!Bk:5.b,t?5[dHn7L&oBma?r5U"]ojecb,67)60q7/[6I6b><1T15El%)n;KJIfjMF8ros7?e!ds1"G'X[0)"q)_U8AgW#NOOJ#R=nI[270`^OM-2.!W&6#IV7RJ)F.?=Mf5Yk/H/YW>>nq\.`n_sRL9,lcd%g(XrYh);[C/O1rB>=Ju-0H,PS(nn#)O-9kAVN(q.+9F);@C;qtiJnX].(*mEOBPNol0WMm_#me^X:G\X$*N2mUoBU_K^j22*gW:;%FU^*o[fR,<:G.O4&)T8QO\4=6`VnaVQ5$pA[%"ctJ9f'IG7-65I&rEB8"J.Q0E;3'PClW('34Mn0c'$dC`DV,1C&gP1-9,8(\S%9%-N8gB"ZgP>9pa*4$tH]m%<lqm*DKFI!S$=k:qP_u"kENuSL/um#?Gl?'?I!eXr>hJMm^85LGLfkZ)SAj?u8qX:FcWH/d:''(1J:]%SH4Oe&_T_iY1D6f5,bF_c2u'@RO7Sp(!tJI1MEDs(&,CTJX(9Y/gCjgM-_<!!S@#tFN+N8NB%\&h#bC5e(p0EpGai`8V%;n3!%[u%>[Sb%#hN7+(he#"Sfg"#(g0;0#F:V27V&N"Od'T$X[QG+^rT]$E,_g+qa2,AP)3,i!FL_nN%UP)RhBWO.S#f(n@AT(3ap6R&M)K/%(lcF].08!IY65qYa.VccKRmeIN?'s^a@fgX+#mc([q_jHrS9`2=(F(2>u_0)_"*h'gJFMGno]4REH*bV*Q;OQ+dPf!<e^207'.mH%5@P?O/ES>u7Pr^e?3&op\sTL$-UfU.:EG1S'(,s)3NiuQW<HQoX=IiZ!-*6O(P)\_'>]5P(*b;h)rb=81KD:#0UU!rdPD];?Z[;`%Jt<VsAs5qh\Oea,=4p[ZI04c<Ylsq"dKMTpLp`a@)ZR5I#C:3;,HHU1&3RhiYZO@->+.dLR(+ap%kDUtbS>]EeA5+,C*=^9cJIil%An#fq:Lo<i?NDBW.U"jE@McgZ'LX<P8._)o&>;5jeFaeJf12pF5%CEJb<o]*j2i[6W"Y']5aNQ_%E<L!VRfM?-U6(8`PnfGV*4J0%?)B)*\ta2^d,gqIQ?>@$)_Qp3W,g(Q<B<dCDl>/a'e,sjij!M(>*Ue,B+I7-.P-fa'=>@CFd51cAuR:V1X"XL_?O5_#cQ>L'Ir>l%(RSqTkmF%r*s9m/F0_M5[9\uM)JE@!"f#'6OpO8SHD.K-)0c@:Vrt2g2bK`'mB<s_@2TDpGoDhB-kR"2Fq<*r[<Oni2<^;B_D6i\%Sk,N^"Pe*6MR=mi,Bf>S-;?Uh=CjH\Y7Q7F*#VY6^st;T!p.>27,LlTb/,!O^mt+.T'i^\]?8#Xi1[<iio<I8!&gZi7&=,<Q=.s%%<HLQ,')-M`4f5-_\j\.!oqo(Waa[YW>TfkcA\K(bm(l<Ic2h^aa9IAU#8e>n`#RN4M&4:V]&LT8V1elE8jLu?JKCE5essI^Ybm/J%b2j"d&LC3mg1r3XTFWW$We`2P3\MkBhiL+.2/$/3?eW?V^.L,;[TMUE;PLGm#,k1&'7EJ-O=-]#\+EO#f*`-UC'ZdW<sjO]k/@oZ%jBE=,jAg&N#b[4/VusX5Vuq4;Z?eB\5S^MSO#bo*AA7cC7*RYd]>MX^_LsmkFA;g!FIb.\/:_DVqKT/L+e[MLkqla:[%Ee]!>+G^%gBC*hG/iW[,?Q>fL<>eo5TQtlkm@LU,r0\Oa(B3];'B`F1!C\r:k2$HHrSj6C1Bdq^"S_\Zl_9ECSe`G#?61H]1ee66JChH$fP"H%1<*\QkMd7>SkaeDi:20t%B2OjOaAK$HapplCVd*(,S9;:j;]7%<+0TA:0+liD%4ck0rEM*Do00BcH!2lYBW\TS\Qc4gdk4RQ+WG3%3[#u\/"eMJmTMIqn<QLVl37$4?26o0h8lXCJX=*I$7=]-DbQW<Y-,dd_5;Srf!>FN51&_,$%na7%.]#^i6`pEEIe[/?0obR!ZnN<%::1EJ>o^[[rc;(W\ThHt&[6ht$3IIE,l=udY!Pb3El4r>n=VLd)()^/HWm=\_R>mc-le$^P9niq?;Np2RF%s,<B:^=he&n1aZ5]e%'@g.A5`ZHeV"oR*nI`jL>m8_jq/J>0?4X7[&63EVI\="c!h"@tqgIcW)`>f*R8n$?F2I3u.b]u#X"M@.;b%EY5=1ph#sdB_\WhU(%9l@GKp&1M[mOEnt-$]HfUTZLNl`)pRU.Z'X1"B-SN-m2#Um>tN;k'C]"XNtn]^87W@_+*2_/%SS0#CM)=@HMIoj*gICp<u7?o+n9%&6RI;o_eqRT/66&VV:?bkj#gt\^UN(Pn6&Xn.U>'2NuX9MS+Dr#>MmJ;6,#[#6X?Mle@m1?*$ZU1RGpmDO'cUj2VdRX-BeN-rF/@%?P(>`2O)RPL]WjP3_Pr2Md"Ji-'@6j+0SIO:b,l07N1R8nNuVbWj;*qZQ=t&F?7"NVIgP!ji?`)o]eW6S;q$=WLO!0iH01&M;E>P%b;Ro^Lg5@S(!h\'nJ3.U;?[C.JYtli%Pc$(?$#KE0+B3g7-0o$5FIP"Q,YcIAKG0]#D_ssU,O`:T!E$F@`Ai"ka8.t;$[>,MEiOo%Wlu.Xe;7:i(RB)'J9ot8PMFXW`\rF*hE1fhAm9glP6.[\2FUi`J"\on`JYgK1::)aH+q!^(okeKHM4o3e7,@,Zr"D(,R4Wj:Z"bq%?tMC4Y)pn=@;`0tB6NTp6,/tOA6[r_B.QeT<>+a/1Ip?p)%S,<m$d<VJlgqD#P52gl:im7>e;1cnleK^gC!:&bk8lb5EH#I[o%RM%G=%[L6.//%D9ZB@hF&4&)A#LX4iEfS!SXK4[1=KW(UY"1gj1K2KOJJK\V=(Z&9$_V!CFP,^l.[KT>^-i)kBIXmWrm+4U9\Bh(L?O%YdirSI^&>,"J-/p52(@m[FoA91^hM'a3oTojUX#R?Zd;Br4(Ub&";<LXnQ>\K9amPJ(h"7J$d/+eS?37#BBc=l2JQj>-D"#[AY0+%>E)tEJ`jDIr2_\.cesl#O-:EPh<$W;ignNg*_4jC9"+P%CCOjMj1'AV4;cJI;eq:lr9N#'r`"p;mq-'K4F%L<fqjb'^^,B_mer42%m.il0HiD>+oR-&Zr`\XK\@,0[NhG'm49T>=l!rouI#[HE8pAp%n@ho6UI]6VE[[1!gJ2h:T0/u=j80#"0J/`10^Keg>B-P^:F(aD%B+cL%o4?6#mZC3`_*P1FDt`2*L4$W;Zp^qiV2pI.*)L;#hPh$#hr=b^C:CnKTldkmKBAgjC1/hAlAK7mR]Rc$8i49S0u;A-31aI3%+1;Ln"k]u6mMO>S18_AkQ!O<"Os2TN*CK'aAjNaZOTF:%\5sVkH]qT?>$ecgm<+2tHG%e/SK'TSP8DnLUUCulcEtlQAnR?796?e4%iEW=)gF(g+F&6Bs>XSgM0er4QbNn\,Bk?]dboN[l__e2"P;d]QY+*=NfW0!B](N)Xm*E>f1teLn0op&>I%,IVF,t&'1!MkY\]6Q$%R&8&:nud\e<+H\AmP-<@g%Ca?omM/"VFpbLDXAIr)Vr0SFgGe*g^CZq$1DkW=1-.^G^n(BO2!Vhd$#YSX53X#LNCf\N`oY!ctqO<%%K$*9X]$*#WbF:p-d,JaJ6m"rKjlRZo`E<.j!rWD6D?]PHDl18fT-8I"FUKPmuA76$r,O!g[b;On$#iRpZf.eJS82loqfi2$S6)7%Co_bah;3e!O%28pp2]o&d*Q=0q(+a1n,"JPI:kNS8t9IM?afP_=cW8RLTOa`g?nM;[8):hADanK?*qK/gA'j,gPJ]^0([(6=o$iI%j8VdubC:ngiP/IQA<K9mT2lbr($U*C+8LeqJCiUhB<YYi(j%J5[s1\C^hpJ#cB(J8?"2_\(VZkS\PF%.-lrM`;Ei<`O)^V%rj5Aa%aX[8D./V.24g_ctNVLV$*u.,H]C&Cianj76cujOn]3[b_I(K`>;sQ:Ga6e+J@-;SX(:%_]R9P&%T%^$BeJu6)2+K]8s44SoG!*rH%KKP1=UFTg0bIDa1"79^A$n4;iXqgU_Xon9CP+OUMY"(Y^\H_jT76!$0_6V0gTAF[QC:Drto]#Y\PBU^&H2'1]LJQ'VO2ps/NTRGF%&[:)f1UkbJeI$+7cB&\uj-`Q(]0>o"L]s`,Nd5[^A,17o-cb%DpLs,t3'ET->Tlh06CM=?F:kE]VJZZ\20:S0`XHK!cL?d`]U^bT%;tb61mOr+rc<P\Vof5fQ7!tkSqDne=[i%784ZVtSIMVbecU&]fn.qmM_3d?>WF%>kneChsS-j$Y'MPC=U+H.D?7Un(rUfOI+&%uk%l.8"\a"Xpkr8#Kl.FmH^V\?Q5i`9;;'P,>"EV[3uPBXN34fmuh=11`&2u=u)>!6cDS\`M'aUBa9m2AJPH.-H,4U\0@s->E)P/NCp%a!lHe?lWXfWRPc`]/!-A4\bt1Eh5/CY"2bsiFq5oE>*g?2,t72:TNOm34_%I'b;Vr&#Oh#:EIDr/0Jt8/DoQnfkM8E%V]4fH9Z.q%[XrL<CIj"!S8<BEWSitQ],?P+mOQ]T8Rk@M^Og-(B<lp8lLeS43+au"*g"qGo#%8eAZ\h&:l9(2l+QQ)_C_2"N^fd(BRVVO%,Gq2%(X^-,[p;77M,mOlE$'00\6.Q;k^'B(GO<H3M87a66*44)d?b<GhuHCtY"_+W:p7:l0=qC.gT?cCABrdfc#s[VH9k^/1KlDG.@d;%%>X@!-f,tNs^_iq4!\dE&\?]LR&b2:?l$FFhd4.tABV#KLKo$B6CQJg!?jouKAB\R.`+1B:aqGq1H*o%Ep!]B9;83<l&-^'-:P>)_%6Hg)dY%o3a\\<n37<I;6Y)LsT&Yd&XVV\2@bs[@3Pb2!u^Li<6okTWp;.'f25EX9-(LhRY3/V[WYS+GiY0CDVY9I[JF1Ru.h9Y]"%rX=nei];$I+.rLhBku&gf1#LnrUYuJbg))E+<EEo?ZLF%\Yu74=/?m4;bU](TZ/K1s'Mau-BEJUT]QSrY+Vpq6#H6R?uA6SWd]hV%I<5'<=&7FO4jD6L\U'^FVn%,B3q[$%F6m9%rp-pfiM,e$T8a;]q$\]-6\9gL%%06Cq$d).c4K-&f]:g@3RHS+l!IK?b>4s^[f<r7%:Y^9PWr:R7cU1j%4HB4P*r0pB`U3*7,O%!^WhS0\`.uU_kkjK.7%ogS2HVV19YbChq)P<.?[Q@HHCJ!mci^l%ar@.,Us2PNbR6\+%DC#/o-il&B,X5?1ij*2fM6'OO6l>sQ.ImF>ps8m,(&jkJ!?(l<@eghDD_WhebI+kElCtu5b>-eCEoZQ:VeR"d`P3a&qpJ47l`mcm%9SfQG0:d8nA9uQ<j2L%IY(Zh!?)N/)*plAdIiB,.Z:GLC0&IP=h"=M`-?e"SX"[j-GC<H-N88W#3kJ]`m<lMQX]+OC#KQ4V:dB6M%`+!m>/NW!O>#C>h-C2#s..fF@CYJ-.h+u)1l-DJ[T=UK[=AIn:ja#D[S*sHSKs8jH/4VAQo,Z$MNb)g1o,Z$0;9X58cgL"'RiTZ[%/QmQ<ef=$Z;J2hnAN/MCS;N]OPQjnF]9Mnmb5!Z$pJeE^7e?+gfT3)h%U[UE"U$:G_PKoTO1<a*r]P73Xle%$J3RD@6X@IK"&$+q%_Mn[YM>)lBWD5:ar3^sY/fs]r\Udn&1s+<IWl:iX@8q;kp(rpe"1aF>H04(]GrY%t4N[`kj?0:r*AODd"dIhg9^2I4_"EO58`sLC%W#*LF'lLFu.t#TU*d(Pu2nQ2:YgSFK/)=O61NF.P*c/F_g*2^_I;t2F;CkFM28+Bc*)7PImD$p>E%pPm/mFZN_^gXcX>bi/^C:sp%<@(2;9+ueZ=X>jLem,Uf_k=s'Oe3gf^4-dI\aA(^Qn7c#h]SI@>&(^h_irb4VK0hX?>f[^_Yo\IN6AjgO'Tt>(\?:u4E`H??-Hdp%o@V$)Lg?rMKoB<95_]PQb[VGfA')r)(R&;E=()0SIY,ZuKO4A:O"l9lQg8Z3s"k5be4(miaT9D>%CTN(SsdPBq#sMqc]@-o7G"I1%8:H,mc]@-_B8)X#?.''-Sk\ZoenP\$f:!poc1A>Z>#`su/\;>t@TqBhH$PgW=j%.fd&C<j:?PqYrDGO,.l45;AVtPJ?;dXs#Hm:N%ZX6UBmFhKqENRXeH[]\Ia>(qU$'o@HXEei#T_YkTq8)"<0k'XlBoPtN`6Q<rk6g:J5h@Aj.k'+FVs$pY*pOdfp>Z/ZH7s.Me#>,Z%NH`=nrZ/HA:[mmX)<'&]L[0,_leE#>ANu!\cJh584H9g2Vs&;j+"d-mN8j;<UI\.DC3JiO=<_SP(^cWi=(1&%l?`QTngY&@'+($B%A"?*kVU5J>kE1;ZFWk?R&eN?+,bRESkE19DnK;IV)UBW/ruO+@>50e4"C+1sk)k0Mpd'O9OfY+a(GoW.csa+Y+4OJt]$1;eXR`Jb%Zp<E54HfPdAr^,>,%Z%?Knt@b5MkbGIgtF5]mp]aC4>tu\&lacSRHl#$fC\&a&;<5QTg^1GAkhJe42q5D.afV]kOp4$n9U!nu'[l%OOhq5M^^?7H/7)o/(_FWb.0M$"n_E!n;&.4<>HXDf,[F;j6Goi'X<#qHeiiG74)2D_#Pfh1,A&/YaW1*d.qt;Q]XY?X1hh1e>.=8%PRE>8]G^DQL+U-*bu33\\eKQ@@b=GV07-R(*j-o5H(&5&oB9V3,iDke&JZ2&PiiVn(r;GK&JaO*o]?^QV0%4:RGrJpI:a_fK1UgG%N5X&5Z?,Dbd$+&ejtZ'MN'YA2\NY9_F-#Pm4f1Q?2#!F#51A;"R^,f7IAXR$1tH<.CmE:oVA\unY#!W2;kAC5I)_\RaTItn9lm4H%mPN1ZVRb/4GFGDMWZ^Y33))h21$)0Z&t*%7WDMKMf5Z,om5BuN[/s"NghW?5YN_KT:7pl[bg3@dk:!5,cD2=@EBgY?2a;;3l:(8!%:>B3uQtB\7S\8LJA]J:bghN'Tjutb<e`u$m8eTW:WR[Jj*tO6^3W"FNKs#chbq;5Y[a9`D;a3d0%:e\$a<l_p%*an"'(RP$51aJu%S)RX&Y2^GW(BsE1f0`3UidF^gb93aabGsBY\7)grH(KKDd\Z6tj!#k)>O%[2V/]\a)HXNKji;ZTcM,"uXb^\VBRK&sR@L2&+8-1[%osipnP-*p8iMh-1oQnBR?V_$dZZloe4o!XlC3b$/G*nPqjY++,aG&8(dr;eo\t%D/Gd[H,2+H`opCsae(OO^1e=!j,gu:Lhp5LRn%D_F5UNIO^7SbP&%12kAgQFXtT2N)-aYae3*p=.<V6&Xj97'BC1>Odq1m2)%s3lSb!R<8)e)=[S_Wej/jBQO!IB-qhNe@r9FF`0=Q%5-!7jh0!p&]3[bgI(K`^;sQ:Ga6gB-.Irm/d&or4BAk!#oIad$s876r]?7O_J81OVAQN;+9^>k_T^23WCs"Tue1P7/F"c]Lfk`6O%ZP,cuhnh5kI(0092?VID\.6^ol`X*<P&#'`m5:t>3PQ\Ni`>9.eleDCR:HNhW0s`qd]RRhPL"bT[1Xf48,\qOPD2aNV"gq)eA6=W%4DUg;Z.\-?p;c5Rc/?MVk:p;'Rn2!fo<3l4Em;`I>gGLGB=)WndL91e=IO'R:Mo?H$OY-`ngJZ6j7qRJ:$A!,Jq%'([#,euf4ePb%nSS?Fc=&8BY#X<)=kqdr'dol%G)ubaG0Z=@CU<+H0#aEO[/[H)!sIo,@GKURp9#`q0J0pWe.)iTEN0+bZnsd:08B;*?t:n;q!-#j%$p4.<):AlD5a'8UaXLLs=k]=fd\Y)!\\;gXE`FOq_PMc-QZ%2X:B.O`1%a^ml0AsF30i_b[0GQ'ZhgR\Fs%$2A[^qfHD#L+18rc-%Xad`KECtePkN/79?J\+ur)>V8/?V,\cMg;2Tl1tQ&-L#QX)@)X7j4n1/4je,5&,9-#7I_1'FsYHmmm8JgKM,#enC:+CYu`e:^.;&%BoW/miU;IDs48^e/3%3*$FgUK-=5m>1/4N;Hm]1_rdu:P/.D=b@Hc0jPs3\59NoJl+8hJgr.hHqoQQ-OV3e$>T:Ad]^9G5R'SOCV%4-&WlJhW/Y#8eu!!DLCOi,NR!jD`=Lka+9U%Ea>a&I/qHp*bb#0N8<%au_sW>,j2#_/@p:SY3@'+AoYe#8AfL%6TK!Q?b[pk*;La%pAd[XE^V*I!aS#7V>>cH'8g2DoA,SrX;e_XJJU(u+=II)nL^D%i0KcMYuFq*%NUl;cn//t+Mr-p/:d`k:D2!=_p[V'-nP\Rp#WEJ%T^7#cDmbm=Y=ot'fQ\E?p3](uHp<G^`uHa'oehOb<m"<7rGia.;1\cJFM].m&W?Zi-BXcC/E\g%LSUU*!!)i!,)]YZ=rXPf]</n8%.)F+T$rKj<'[X]i"'5Oe:C0N&!kCY]"/i'_YX%0D*1Ida&kofs]C7htaoMd["Hjl-P&X5WOWQ!El*!aZX$0%Td7#3k+6)C'7T!HA%!Qb*"$D?QQ"p6#OR<'2*_]raEAW`^j?hR_Z8N>A_i_kq5o/Kkf0Z.9$$=S$YR5$'_ZjiR^du4S;n[Fn+8dW&gP2m8m`R3ih-]r9s%KUGc-l!@q56_X[1k4fFE;JdZ(L+l:0.s/<%3"ANB+EY.RqN7Bm=6OpW%RbbtYbB)gKcknT";Y+E9["JA&JFjY-O3.JP2Dudjdcih%&ibH7+A<VmYp5jD#fDcZON*@iPoE92#3Eqb,0414HfR^?j.](m!4$Y+ZV\AS^_*MP?Zh:%NPt0XJ[pHF!L7$odg(C;GYY)Ip&/uN%Q+!eI*%nm0&A#HXi0S?=.=HH%HCl_\-upQX$DLJl\9\C*,%XA0TJ0G%U!!bm:4i:8M***J+]mVh*ccgf!!a/-Gs2i\nsQ-u-DJQd%$5ui#eTAi$JSc)@#F?N7&4V0`S]d_GFrjB8/hHF34)0j2&/Y)3dW22=D3]#1A_DLVc*"S.g#t[D@VaV48FpV:+72A+d6B#7hVaC!%1D]`\<2>aOVoP^"*sO#DfE(*(@qFq&\S<ed`jM++JE&:.YXNo@VCYZcc%N3*Zgf7=+n;l)Vg#]Acl_nu?BsaT2c',`+uNP6WCRsQ%a6KT3#D6o,^\aSV5ISsZGK;A9FX;S`$jeS$7l[=i_'"f>1S9KB;$s+L":?>#[Zc:3L"&VKSGLmTiQGkuKFp(-%E.eDb!66k.RW4D%\@G^nqF^CqERajC=ci%382Q"GAhR*p.?*uPe/IOQSZ4:f+M?ah8Ve@XHr4Ai1e:LW<.r.L,*skPJT_A%3(U!pnSX4u9TnW7n*)!Z%1h/@qEgt$hjUdQ!DW5`?Rf]<bG>lDf+^>sAk*?WeTIJI=9KsstZUR=SBIPAV80U6o9nT5E-#'p':c[HCJ,='fN;c<2W)mak@m9A:%4$rq5,+&bVb*fCPEMb8f]D-[p6m;mgdJhK.O'1=LD?s5,A)FGJH(2u!IiCeM;H^O,Q;;dDTeeK#dkjZm7%92p,Y@r3O>P!ug$4mP%ZdgY*B5=Xmj[ksoQdo>4bt@RU#gS"P6Ja98SOt.RgIXuj?5P,1BrSIb;BI3&FFq$ms1'F!,pKX^UVtF%HgH#+DPQ'kN-UoA`e`B*%7?j=o,3kG@52`[+:>pM%mDY(ITN&&d)C*kW$hVr$cpsDkajO3R[XlM&`=4[Oh.ns[DK>WF7T#OV@"\)\b.V!1bq,e=&'Bm<%"p9f%N[%V3lj:.C96O\$pM+/"!0Ql/437oD7JVsH.P8RsOCd!Fdnb=]c%cL;L`qoFM54XEp@`h!>+KB*+P_b6NgQ:4>c.l)R3p:sn'qOk%!J7nL'&qk35gTpK)or^D8M2aQYu&Qb_rU]PD!_ond#s+pDX]F-/_PR7Zn*L,e4DA8+K1VQD<*cZ<t/UXLnP,6=(KdnLJdS!o&>XY%DYKL-C_/@URVTSpLc:fCX-#:5V:K+opOqDo>iKa+Y^UNmk&Gu>8;FhLGs;Ql`g'`dOJ@VXfL@CpgJ[0bJIqH(fk?0d)9k5T0\6P8%bGakaICQEGnaX+o+dW<!VR*Ah"`.?t*>JZ&OTjE56I;ekDe1)PS5e9F;B\BUs*"AY/Vj]aNeR\3buQaZNo1ZZ@:H'/dT)_J>bC1B%VgNM694HEJQ#Z9a&K".b4gm19r!Z"rB)Gefs3l^MreUIY'QGHr`1K:,Al3*+)D>)InL_h*$Bgr3=U6$B'0e6?nT'H&f0X0^L;^F4%+DF04S>R'<bn7-[7_e5a`5>I[;481oPT^4P$p4V(DiGpZ&d\9Y;T$bS7SnmZH*<7%L7b/oT;I>VB#^ErN0u5K)X^DM_U!Mm3e_70%pM,Eu/2KlQbTq0a;hC![SBiH(),^St%k5UuJn-9lpZ?-UkUGM'VML_0&8X2ar2*#N(A=gg`5kdm=^pI+3eeQ%L)PN0)L=`S0p$IF%,!!#Lo4X8]/okWfpM,Eu1c%RjbS5%P'7u6qSBDUd_@.m+]SBpM&rAOt,MsJ8#X(VHbS5%P'7u7!SD+b"Tgb(70LoF0cm%r'0spF+%[.)POd*mQ+JXk$hae=AFj"4/>Psl03EaMPi_MPAgg*m<P(m\;1DPKW,aOqpH)^c>9S5?G06GXu^![idA,YendfH`9>%-7=58<t#t%hSU=EOekM'Rq$-jB5!Ft^Ml59De1*T1dN`o.c0IKJrX\/jbQf$oM.5ZiXuG=:@:^fbU'Q#Q*cNS5b$go3)hs4,2/>>DV@+*9>5D0%21UiZP)'[3db9NpVcV;D!Jk$K6n(29OGXR-NWu:g#U:T<R,kFA-(b<tBD,@Sg=sKXbVX9%j.;:J:`52-@?Z?Dk8$JG>UdM[,QD`+%E_gJn6>=.$8Yc0,cF1:9#]N%d:9f.@bjIK%L2j5o49dH:!Tb<jFqRK#HuN%3E[rV]giDHebef7UQF!%W^'1SVJ[N;q0-t1%gb=S:%k'`2#3[X@Er*`8'drMC1#>H9[UAJ?pMa5MD8V&151aO[e:>X$sA;@C=mKC$/$X2HkO`0?D<[qnXqQRZf*U"`e9%m+07FkNL]-5SI%(FatBQ6XGYDV:#^'[3oJ9QK73!^k*H-Ancun\/PuM80fg&W@$V*b-W5Ngp!5"gb&BJ<Rk;B#e[NAJ)pk1X-YD";_FR_Z*9g0AhJb%6V%?%GR%W!jE$R.fh@S2&k6X">T#1lkc[?I44m+N^.a_gmC5WVKW:2jb0123Pu>oj+dmOEB_^S#''].ej]C9SDHuZ()P#g]`DSFR%^1fH3?$j#VGkC.&gM:<T0[X%+fGiY!G^o*`[*Q@r2u(dXpW]TLPDqg?(hZ#qF\J0$'pH\D3>OWLgKqr9oTVaJF!>i!A0tJPU(d-:%"?:U;kGj&k[OA"@P0/(pfI3jam?X<F,:@L!PYZ!;><V'3OUU-IKp"/;kQW7*^JpB*q1`DD#%C;?U2iYtDU@c92bZJ:a[9W<gGrp&%0Op;mHjYijWK!ALGoMj8cMr'=qIQ9\2m?RdAteN(G[UNsVJXuBO-hctJhBD%2E:(/W@?E@8$Y;3m!t<ipns3o^[TaDEYnp*UAo7A%_c?XmI<PO#Zdhg=mmG=\.:U/l\$]3?/74_mT)c)^#A'NPB[ecNH8mg-3rtA?=*?qX_$8!eY_?V@BY]2/\'NY$Cq\)CHFCO`*,#:H%BgiT]J_A#7>(hOBG[*$0lKAA)o`'(Ibgi_g_dH6-CQ;7W6nm'Oo$e*@Eb6^>4:8WnjrYq/EfYhKjhM%U$VBOje*%[I#Iq8UT*(4s%J+L0*Fngo!E`q(<C&XSCT8eCmE;.8U)fYhLX%C(mq'!DearV"b@G\$p1m<]:gp5sp_KQL4JPUMdQMA*=XqTs3$ET.0?Q=(dee+&&%=erh1Kedd6nKo\H&_Bmm^RJ`_HA;)i1lh1&9YN'HE#b=`=FtNpU@G5Zb:dZ0Don*YZOV2s#BAda>)<s'g1m4L1uWW-"F.W5#K<QD%IsAp3(lIL(`ku.Rr(h<OO)'OG!WF;8`bqn3:AaGM*cbuLi]hk@U:VZ\dU3J9."*RbG4P[CAiQC/&E'k!r%GG>K?+"7TGNN\$gY2d%m/^9N1g'PBm/R%1RK**?ru:d[s2+BTO8n\K0'E%dNmF?DTE!4oaQN?]PNLKMrW0FB/K@RoTZ`q$[c0!CX#;>oHr4U!ptu,N."Pu1%`dUBgP7]:68<^2u>CNcoT9XSG9s1HTE)0M1e#Ih9^[Mjjel#Z+f1+WrLO7I2lj\&ljLDXfSStIg"f>s_g]6TK%n]hq60V1N!/hgU%bBuJF-\#FVT8>5B`TuqgN*NJm4*hnd@>r'U>]Vat^p6(dW(&sATK6'9EbrnJ")U:1Gh0#kJrO?P\Bf"b)#3?s9CBq"[!g&%S=d5D%(\c6`@kR2A_9+=[l[1cmC(Orl$;5B'<+C=`DBGuD/$06ch3-7pc2Ut$*AVO3c9X\_I?,?Egu7"SNV\t5F7-2R\t)_e,BYQgCpH%s%aG%Nglp60IU!*gklNc(MoXHG`r]XnQ"R;;P3m#:=`73AB%HUr]et'ueNY3Eh02OnLL9:]].bBO]1pFdM$4LJY;CK1u`&s4ZQjjc.%6G*SIb9Wap`bWA-kd"+W@h<;D9$)NR=EPcI#RT<n8<2<7YN]MEa+B.#<HID.gnCR/NROBNM3fqea)N<hj6[7WpXA(QSCDd'rg8@Q%HB>GuMin&HH9b0K-cu)hPgW*Na+@IdcqmGt'NDEqI)cj4e"q_fRJnSpbRE#g@>JB@bQ_6kQD*VYf]Ptb7hDi!+udEI";n*E<=jO:%9Mh8_r%0SH2%jr3+-@8hLeuSmY!JY\QhlXA)4kQ8bq]Z_7's[:aDH(?k*X\CRq(#'/JNp^f#MU"iE2DCVr=")M.<2%r%,m)YU62N%%TnhPR*17$V"G2u[7)kk@qFZ3ak'sDF&S^9?l$pB1r1sUWp-HH@hIL<.)@^gqZP6h5V3\),hBG@TZ+5G<DUN=Z)6oOaS'\mKOSh3%^m^XP)<`?t$4[Gk-c7ae==h?G_?oBQ?g"9mc,bVK[('_`$+AMp9hYF6Ms.$:$,2f>,ktsUCS<FmZ+acO/\YdEHQ'VXo!sj#%VQ-:%iEHABo]/9h9<I_.M9YWjI"SO.2bL@"JP&b\'p4+m&uF6H!#i:K@%2!>0Tsk3b0\r9al]&BJ"(6):b<*1.+Y;4T]'(?Y,C74U_l1(%T?,_^8Zp`S9ht,K\3Z!fh"UAk%+h:XTAgdL.hGFhc,p(/#_rkr\7WM_Y1[2W9)U2sk.4=pY*o8:\7UJ1@5(*S5%OgJY%?gC$EfMr%nT!Z=Z7*e5bm%s(EY$'1P"O"CA`>]fY(>G=Bs*:[X/X31bKOC/[b3p(D$HM<RgmrU1uGU;Y'ZGlRi+MDDe?3h#"'0l>;jjf>DBG]%iS2uo$/<''($kuTjg@C.#o92SU:_<JC'fT3dVD3Xb%j@`b%n=\BU?pAQiX49-,$`@ii:C_]Th"Pi4s=DL&;bf)3r2:FN63ll*kAG%dW%pQ:p`fAbCYRg<HDl$)TIcm"%kNg8^83X78<0gfQ>^d:QfkS5>&4Vqbf<ZFLpgWBiot,$C]tD"kBEe%jbnLSP$-rLQGsa%QAq?%$'Y.O%C?t=U$ZPR2`=^)E%hopZbV<a`ga6SDEONokDZ$ti10>:C_Y%dZ9O$cRr8Y$A=E`j6L'Wa,hF&/E_UaBaYc62":?DHiaXmn%E%O`7dr9/?Ua4o.,e7O&(+HXUA!:0p5"Vnk:FXCCFK0-ck^;'Ud]`l/'K!cf$`[p?^69[#Ft(Bh*'fC"37n?@,YR-$2ULGfL9d`9%gVaY[Fto/-1LQ-.g7PXLY'lofhmB;Gj;U-[2?rPsg#"R#"Qp>d@\!tZoMj^?&0AHKiZ/LQ`B,&Y!X4`6nLY\nnLd2be*q6QYf&L>%$/Sfm6Vlam=Hk`c:kEoF>tV=r4'"6@m=Er_1-h=O)Ot>D!fZ3YDqT6Q?6qV0LQLSe*c;#]&gm,t)e_3tV<qtV2^r9HS;efW%+lc%%p2"Q^CG.*X3HU[PS3uJ^7\IFKqbm]di#I>IS?p&#SEa;b\uT/63/9jlE=Rbn^u4L@WRdt`TZ+GMD,8'[M*VgBDBq5T^_Sr<DdsGe%qa!g!U!o7eSG'.&%,)B$^L_p%efd#l3ZG0bM'#Ae?M,hf3ugYGG<"L`"scq&>;jjf?&#qgiSE/58`:pPlATlJY9pI>B/@^&3E,>^%Ik&jEj?!)SA]]ZN-!W9mInn39$Np.)$"YUN"onHaoD;Z4r_N)Lr+Z/Vr#bm``C\tNLHkZ3OgM5lq.f2:Bj5+Y*n:GUD38e=m_+.h%/M](=m8>^K83#2**hU"id^JL-RRo*Q^e^M+JiQl"oFcOjL'//XO\%:L4ud,:$'%*<AqKNE9f0ti1Z7YV72g6+6H'k.9F'5qo$s9.%OmI^!AroOdfc1WXs(iGW^7W[qahU]C8V0=TjHAGR1Lu].T^uh<-":=4[[\X46mB]!M'2`ZdR<Tl<2)o%I-OZCM'+0K"R0l[FHI.l%*m^">%$9h.;s&U$"PG=;$306P&:?X3$'Kk32AZK$SB1uO#A;*_)+!BS9Z]lra?DRpP(uGe:%LXF:FCHZ"?EG&fa"ELp:rt,dQR*9%)%o,&:jO[&no?^q%o/P3+VA8U3"Z#:R2h#*PKT):E6;u,*-*Bu"!=$VULOFta0R'>8L+,jP\D$K5pfG2_*=KjJI"$Q)VG@n9\5@3%EY:;"_&6-/7aQEC>B7#'Z4B]uLER7?1,0@<o=5]o+d7nJI;mnf%#H,T,6OobL7F27PTJ#8S2?-<r$N+/;BCc'XJS+IT1QI^3\"0L%2>c=]#o?/T`epuISX?$?]#^fBGg>C2;5><36mb@FF\22e%+u=$-RHZtZXd#\SX0alcBM<`K%:*rQP=5\Q7A#;?W+!$q/cqt;b?TB%/1D6(#:@]]Z_^BTTQ<C(-I%i4j[,bJQo&#r4s)!-XCN/hL7F'q'9ckKRIVOk:qE;5P@i%,Or[G<9U[\K8U*f&.iI36-0ZT;aCLZZ%VSn6%e1Tt+UmQ53Cke`9PN'iT1)c<>9:@ePa_F@-1MPF1/[JjgXU@0GC"Ae'>p8IXUfhc)P_GpjP$uTQdM@uU9nkN<8mN9"l[fU@%RPea#7nC3JC"Ae'-R%`dA9`0]]S*(ZP@;b)EYCo=HSfe5VAie4.Hb[*rmPR3>WqJ_j7GKWWKYdIGZe;`PX?qU!,dD!,]_E=`D5*]%1+(7*:N^A%%>JZY4BL@>#ZWLtK&P^6\<krL<"jJSH5u:_GWT2-VI@PF:FNJcb+hk:6%Mdr"Tu6bLViiJfGmLd$608I1#-4j0/q44%8egRU-ul"eW+o(s``Y(=CY1Up&3!j]m$j2*N;:2=DC;)Rj\S<55sX[jjZsOsT\+c7?S3$FNi%hLhh3*`]5Z_0Ub;,b4\iB0%cjp5%AE.I-cTBH$g^[+P>RUZ^D#nig'5i(i?V.i\[8,N2YI;%@=C07bP:\M;g=r#/oqd)t)g.B)l#Pn81&:90#aF+@(VVroEb"WY\EhX=%!V+OI\X=^?%TLQF$^3T%?/?K6h+jau7^T<s_`Djb*#\l[#YO9LQ>f0d5@jj/`J7Hs[o3ho3.kL7+@/M=(M'gdH92:Mb@0I?(tW7s%cIPm6JEF4kJRFmIh^@P,lJs(rJ69hA8Is1"E-L*2=FX=Z-W-$5,YBkDi/J:o'_39VVS#B7!R1qd!p/o!?.B^JS!+k(!Z?PhQf+%>%`u\QH0_4VRR("*)]lQ2)Q34QePeP?o9!_A-/XIC_VPVr/YV[;?+@[R'@ZqA)&YbR&a&.r*#j9@@QPRUUo@!c(L0/J\(,eB#TKdXc%1>F]5Wc0KC<?kIe.R\QC?+ao_jP,qSDf][T?*YWWSiDcD[+r"oW6g/\?g[d<3dqfp]gOi,BP9$sE^LGUKa$5+W(b)ah#.OM3!Xi$%mqL!UbL-S<GDsF+ASG`U\:*eF0*XCcoI!.NDo?$O#6VVf,D1;9^U^Pbom5\iV4?tafe7;e#BB8Emjsf6OIrg\AnZ]2B9IC5hO[8J%/:6?r:L*X&QO44MmVE93S]],r,Xee)<&kCb)T"Y6,UE$1D*l6jHQOF#];o-q@fIhWj2si)B*5t3GV'3[)FWp1)Vg?LDW^8F]&D>$%_GN6SRuqFkT=S@m,F0IFR4m5I:LU,$T=:!q0f!`_\A9adT;493CW[o7p,C\s#i=KL625KCQrrkqf5\q_-:ou^hlA1qOYlADP%G_$%$slGegN8Nl99pkQF/ULU*/P,U=,FH=4RgLbUVc+ai]&4$5*?\u/-O"*M(V@U>sn7nAat,r5s\W19`[W3TqkrmSB2&2&Ba<_K>='F%b%,%.O$1.9ETGl>0lK/!"HtQ3U9k+A8a7igZ7JYQ2+;m?7=8<#gi@_`\`NIJbN2or[J%[jej-!j[\8;'=CdLU':2qb1gj!aH8Q=&%ALn%@,]AB09^_U@cLfH7&MtfVabcKb0)#3<.=m/@W91+CXL_!sHK;^^PBl*0bMn+-bjkaOo#ka_LLp'"(IMabL'/%4A/bVS:NJkA%+bS-naD"*8P_m=Y%*>uoCr@j`'U@T`nM0QFqf?1<?4+s:`7VOTGVCc6UiAmMNB8>ZV.51k*+&F5&8jK84MSg/FO!0j)JqWTnINVY%GS_5O&$=$"3GV`i,fbF`W9Ge]/]<f<aTs7SE*R[TN-4lf"BJM^3fG$t]U]0m;A-Q<2Ahr:+tP,pX-C.=8_oa+JWjOZPc5V38i%>=%GM`HD&$>C+_C'lNUQAHJCb&R_Yn:B^/]"M.qJqkKr<Q]cJpPN[gH[VWTmmO(V?KB^;j>`m">#KE<";&Eb7>PjGZS6CK"4Uu(e_4F%,KBDD?i#0o$0CIQpNB2Q#=?]:BPR8V@FYLs&=Ojhlq]UDFs4p0Y_Btc<>(/jBR489eJa#KA@fC]:i!r/9RuRm[`VYco]'5[D-c$V%!EQ.?Cr"dSE6-pp<3NW!Uf%pHp:@pK_fcYD`)'kI1q%L<_+EU+-@kWMg\Euu^!ANZ>fj?r!f[C3Z&=P"BGdPV3!sJ`*%%'qH%LCb%"UCac7E79qXf7g$[W,EdSUa1@i`JGP11K?uKOfUFC09(#QTZb0/JiUh*fN(e1Jma)+HAg"Ne++k5al*29A8b'93qm.>S/33f](oN%T#*@.GAf.>_CCK/@[C,X?q=hJOXp0agF4gEr[8iEU(O7t&?[3W*'NdX)^t>?jhF2lODIQ=jS4$mX;4Y*5U%mi"pu)d=qRfBp,o`/%@sXeu!eJm+X0!8+_4%2d]g-^pHF$[k`VX/'fa&6_L24aj'%Cm"114M!R-V'!!okW5OAXCI^ALJN>;5WI-\k&/SbC.TVSLB7'?3JS%Y.3Y?109=Yn0mji9[")qrSSVc$\;6E3e7A/S00,jO;>Z;)$N3IN73`cn8]4@R8q,=i(#8S/>CJ$j/qI-!>cVW%c"iodg&>\;(kWc%%]5pjB&K4,Y(QB:LbH?`<us&uE#^(*&[o=Si`j=LkF!_U7@Y2\E'P9fjFf-t/;PeXo"&&M+2o)[iV`<ek67bJ2i&Z6%`7+3+<nj'%`53s&FF/#0=$P!@@.(msSI8N*$_oG>[mk$u_'aL"J/c<Kd,;bd_%R6>-g)EkTT1O^"P<C5WdtUK.eij/15oHl7GbZF:^Q8_O/QdV%\e1,kc]<$HREHQoE0Ljoe'3g3`faE#,kBGBLjYa&[!H+DT&M"jUhg>BDQAja^>^oIDn1ebWU<*IZck=_/P/.<>70`/KLrBaW#Mdc%:t/GG\bQsh?k<kQN$(?uSkn3Di@6e&=?Tiplp*8`\sf7kAIsg&UbM%>[PTml6=GP;CM[Op*-$DOBkN4Bn&lAkHuK;+a0Qd(dFX.;%ITlM$7mA6tptuPo5kZgC$K-Om9S*l;#2CmEh?l^Z%PR5h*hSS(OcSb!^>fDYq4Ba@+][iKkc'JkQGeo?^a4k7gr(rqI=/QM7h)$!%3\`PiM6RR$7:ZhIp=;jp%+I^'G:u846S<U/ch_Xf";i[A$3pCeXp%i,(lt]*,]N:"A1+1q_$qBaG$H6Z`DCgsQ]%alK$rEt/N_t!%&_NV)">Od&M3'0V;Ln-nq)Xn3T!I>mGE>fS%C`36NZs0RO;\*89FIe7(bu`#g.#I?.Ke60AMAgfQU[u``-eScY_FVnbh#c7:5-f3%FTP&l*DDQ7Hsma'5TcBj2lJChCG:NKAXmdN4UV*$=YhV-/o9Od1Y+pS)_)?["i1@8`.CU4jVF^QkXkU:UQM"uTdTFb\Th'!'SH'A%(<@%$Di6!9]LZXAHB<*FhWGrh-i"G(^m&DQebLm2]^aP9eGHo1I&>qd)%t(:B&\abdj?[nY+dRng@;O/FTfrKd.[X2@^#oCiZ/IQ%RV3(3]ppq%TI2EY!5]<UVG,IcAOMGY!6N,&2hZFi7)7J.7iP"t-JslOck)_`ThDTlE(?._%:J_+X<OCqV_2%$*_mXeM%=T<nL7.R%-525`"#f92$&h?(6Zml;\*jEbjE=QXWql3@5$&LTD7E7Q\/hV8`emiD=jT8j5J*K`DK(r0(VoG(6-3VA[MX](KaYq_VpKBImYV@$%V/!-!ZQ!jD)ZcY-G*'6K6ros6<#H=/@n.-KFE@t8Y!U:\<:U;]q%S&"A*1'8W2M4*1BODjAHkR/@h?J&!ghuI=_iR;=.:B$RrN*i%Q<Mq`"6Ra%+V8P>F!Zo6#*u0;=?P%@5s\EOEs"C(b7*#>R;<rEM&TO5DM*Qh6CW4IKV;)nFd[@hJ2s!Kk],GA"?'A:qY</qWIWnQ%EH$HS?6VTL\LPuo"!Ko;pTr%>^B*s*qQaT8/+a%Nl5h&Z[jH(0bj(Q"K2$*s4BEN5ocYtd#!Y7gSM1q+FGSHH^_$1E-Y0*CO=u9)%Wt!Gf'YK1C_[3IZWj!lBKp?HV`P(qRr&0d4S4c7,<9$A<cBE.6^ES[Xb)6d=H/uP=kKl\=h[%e_O-h]i$4PN8LNieej2d!"Adlb"%McVP1Wd,PM(0Qp>i%RF1$?7S`kST:G^bP]hp[g7d0q-D4mXV;`RMutY:3R:/?PS1nG8&c%DAWfX:rKC=87><=nWF!]TL(ZcX=E1H%97ZiJ#&MaFK39d*d`s&.UV%'rIuN"#b81]s0\G6JL\G4=7R]O!0_C(aP2<j&o(f8$07u':KHqnYY$`(sjD0.1BZXsWWLH4g!NiOE%W7=atdi))0lug9me.+B2@)mq)?O<0?<Po:1e>FjjeLMT=#@QN?,IP7'd0-oIU6()NQB'\t[8C*mlg"aiFk#>+,KbtYIMqZBD?3Y<%Go/IY_:O5o?uRG2lk/C,.C;1ne.*t9hU8'?OA.Pp9ld4<+*:D/=e.sc@,/7m#?tHj*:512[>O2>&7q_[NB#-PfX?P18QZ6'/r>8k%=KgR<+16Y#I_rnqU>Wk^C@+0F!=K<M=JX1YmZFJ::a.u3FdqG#O6@>0OMS_[Y)j*/.?QN=hm?fO3X]O1_d^^nYSu>R`%<krj,lmE%Bo+QYVoSuk0/6Xqr<Oo;U]lfml3W@O:HfIZ>Ub=C#Au<1Z:U3.H"epj'Wd8kV5/3t1oI/kfq"]R\PjotiHHna7gaO'P3/B2e3gCK%2Q9hg[#3ZlE[AK"k9ehe"EC7Li[h^laVW=G7!MIhcTM9e6;]58CNbO&TfgD$4!tpi+,IX:BQeAS.[N(=^`(=gm"@I#'-t=+,ek!L%s(`jp`,t"ue+LSn(CR/9S'.Z2gW*:m221@/r6JcQ(YA?k]CfSs[=!iWK3`HN6f09.<t?Ii.33Vp=3<[KNsVGL6G2R#>5jBe4puA@%M3G:8E^Kqm>'u&4YKjJ=YjDQE@QlDPqV=7N^=sI0kF6@?.Lu7Wq-,]-3AnOK5>Morm0"tLHMo[73]SmA[t!@78'6oD9jkNiIn('3%j3q<4FnJ'Kb-^WPl?5Ru.0%N>dXo$V_1&WXl3*]3o#^4KOT2k4n27?Z(1^j0;Pc>=+.$<b3jk`m=5)mr^uua7X<\lgCTUX$0+0/J%c+7ZcL(f'IjH`OFjjJ$jfP)mLgYOA2/_j+85b,)t,TF)<M*SmafPK(B'AL:d%dV0'`r\^0(uOJM[+!tb3DR4j4g+JCh--kd<-fR/%lHRoNSPiURPLD`^b]@C=Ls^2$gU)Q>JU$0=q7g'mST0)VWDC.*0>%-hqn(,WI@#fZ!jfjY\Mkfu'T)iBlD+/adm"URE(\VQ%%U/]%`Hd>2T"+?OA`Qj5G.E8a>d.JMImH\m9Bu"3+d"d-s!.>mpN:EDUD<M>Q="aFIs8ga>[-)lC]3JkC\q=_G=p&^GlP;9>@-@Tr-OAs%QE/j8$&I>JZNV.54:jkrG"T&kKM$<-=Z*a^pX7ok<rY)WV+RlIXP7[c]&2MPY>Fb1CT")aE[:?n`5g@Jm)J]N=.0SC.%@30PmRcU%eOI[OH@/gu.4pd%>BjP\==K*QQ<"bnbHG]p6-`l<h+hJ4*/k`TQks1Yj2j3&`:1>UmgaC9:'lu`(o?bbPQPK(bF_np6=*s]JJ%?<%)7[KZ<&uJBJH62nFORo(Wp'N0gO?g*4mqYn)?ktCc8:*31C*X@?pc)Z,;9J@fFbPlfk4&*2K60q(IFTFnd%0F::$.*?A'._P=d@n%1sS?#nc#M#L)H,!Iq7FQQ8ef"lU0lgGTbkfBI'-0ENTWt74kLU`A1VsG'fdif=rQMCgOY(SsF.dDX&cG71Ap6WD;8E]t=3>3G;,d%5buX&"c?CLJ2]^ZO-9=L$Csd(qQo4QchIf&5+J)bs+^=ObH9e/NX*s;LGDB$WV?S6<'2S5Pl?$P<a3+`f_;PF((]qKj7&-LmN\'[%c'Whg5g<br#=KS8B^TXT[s2.r<>!JU`P4]=9[?U`2:F^a^AG+*mZl?W0"m,cEUhpGhdM_cV+qT;?3CRJ&?1X9ZU5<Y$H3F5;juF?%+Ile,CfU6]]1kT:Xsku[%*\5DfP2nbJ3mg+fS:_I,k_96Z7*`<a6:'C6`SA$Gfnk:;:H^E:(?+TTfNUK%bNfNPu+u\$3:uB%$OJ>%#_![`#,o^#_c-n.?V!H8UGQqWU&kprG!H4%]ELk5Hq:pk8Hl&!0[!u4!uJ92*B;1Z"h5Z"WM8BQI,;Xnf29H[c=cM,&X9i-g#Kqh%%LDncW7N.i)O+tg]2DZL\4OaLKOT(/;&X6Rq(>-Yc?THRj19aeHmY9-HoI"7_62fbg5_UPEkR"PJHR_J_"MgEdQ3QYrbSg0Z8peg%h`WV$@BH2mdu*Auf1TIUWZuE&';:-m4:c%Wk82;3\YJr'Lri\YHX6&X4`)5\\+ouU.<N@_Mr+8H(l_-f8;@<6G+ok])AsC58T6@<%Jl=-`4&Nnc"'fd<:Kk.JnlLn]L2hq?-LZU)5=`AoF7===Mo10F!mROW0AC1JE7A6S6-Lbm^&\"RidP6#AI;K$W"nd@r#8n6hK7^R%Uu)^o'0$-U?*2`.B,MA=f&IDrqu%Q*,i<#YQ<?7(gWuQ7M8]<Rh(!s26s:saRO(gWLe1(t&jX4$5^aBJO".qc8^#GV)3#%7Zu[`A%La!Uj*uLf?_kBlqYee%MTni7NUW&(D6$R]a\gZ`7cLIIC_gX]r6!@2VWQAfBBVZtJ]O!/5l(NX:>Kuj^aY4me?TWlRp`7X;1[^I+%B&1B(TV-721S%8?KfWG_)c^6hjA^/J)Z"O"4Amt6&LEuo?gq<kJhb=,7VioC%eq$e3Gd_8@uoAD.d*G_G4+,rk03isk,ZAk1X(2h%&T6[+AW*&h+5QF\g%[4V$9[Ker]F9[?]oiB,Pdn".1R6T:_QFul',F[<*o-?X2o:j;ad/>H7"M2`/hj^WtS@@M\JTD<*^)'/VcOi%#:M?=l"\g=!Ia%Ug9<I0A>u68B)AC#<KLH@&mb[Eip>Wr]E&Ya\^t*,%BNloK/Xa?L,jE5na+Qe=t:X&@aXr%#DIMOqkJRan^AL5%l4<o#8Ac6Mf<]"urVj;eLuku&a0%EY\TUH$:l71=6gF^c1tg]bP]l)A6LFONl@+T@4sOC4'ahDJ4`7[=J#h]q'Jkb+5.fWO09/,o%)'_sb8RNj/\M=sh%h2]DJ(1]B(qRH6f*hM4pdUU<`fOu3)H/k`WM^m]\2rD>&rg8LNjqq`;sh+jJ>/BXFAN36-j:McOe:\/JYs-'%r(q2f'?o)PEedejHj#d!D`r-9;WX%]ODGDVeX*1m4mE@O/lYX]44]NRY7^jk;1-TE6H9`?.C#p"d8E`4X[b5/BO+uO/Ds6._-&u2%A0.o6&BS_3)K9gX'DOP#lOgV"$pJpfogRSkj7p@PB#o@sP'Jk\ksUJ7j+I=C\6J9]lPP;>GTrhMgt`/`%`FV=*ZVZPMMFA3bK(J]%H3@tZ.te<l#T^'1@M'gV(i`Q*>QSL8,USd)'"RLm&0jJ7`'f/uY+V>DS.7nM,"XIiCa4#;G%Kr(M!'Emk[F`:&Y.cq[*UNt<,`So%9Wf)"aFUpgEdL[k@=XU&`,\t5!ol9pcj75G,JLtR$Sdd=MZP%3%Z$"P$V>5L4&DG88d^gtPk^VR6qB;K^r&b(]-3)cW%pml&j:C5%J7[FL$Rc\:6Y26=M+Da3"8_mcIm+>s4^?TkP&NZCER9Y?1rj6lY7O1rJ-&[kZa,ZQ5Vn/$!p[raf`<_;5q%RcOGA.(;NN1Cf@,?s%6mE%%:F))l:+1GMZ%.\h/dPi-];62.r(OSIR&krEW3oB%"H[-`Uo6V`.)jjR#0[gh@FY%Yj(="10qH@,KXfBk0LTYGI'UiHbrkNA%a7UWP-G#"BEZiD_fE[1Ho7R:%RAsm`a6STPH*UpH?#tHl-IO0LEh`[\_'CN9V;@ISQ.-28#B^&5'GOG7740:Xh_-?U,XmtrYt+7#%m0Kt@RCsoChLS8?)$2rg7X>YVU(;Y4OU0+ICi\TeAWi^_ISd5I,WVAh!NKMdiG@N=#LJ;n"k4,n5TD`f.-)P'gP;;^/1B\SBFkr"%9JGHs.h**udoaQHW)se)0VC`R>W(sZq.0M%Bi(U4jHpZ@!-J`UE'0WtAfZuu'm:ujI-bF['muYW=#gV1F(+cg<9S87KR.[(%T#98%==JcLH?bsK+LIi(I8)/nPs$kd3)3OI0->t2$U9k'4F@GM$Gut>dBmPjoF][gZSTt.d?T[N'G:d4Vm`+(>`V<?DsO5,'tJ*5<ICOY%;?\T\2:@"Do&_pP'0!r,SGJqp`>;oX+O`AG0n_;EJ&7>&crDf1IAY-M#?&0fU8k3609[096\n:Wdi)J((O=Ni%Oc<l!9T2RJkFK<%/.rGI(QhNDDDuT)YPGCIYoSNg;a%*\T_BFc?6Xca`^D@<+[rb%Ff#!@Sg2U:T#6$n.tg\$ZZ5)HENN5VLV<87Kh!XXQQ&qV?,"A0%[9+5N&'DeH'NIF%`H,.)PY@2b]0Jd'\udOlc6Jb1aDjl$Em^4s'dj@DAHFY$=%>+kq,B,FNIV(nYXhh+MWK\[K!.YXS:gnTe'dE#%>EFtV?O9IX7r@ApXFdUXd(46QadA9rVXKkIH#20ffiV1YWPPh5mDjkrTnR3qe#OQL)\ZOTNRV0Gpf<Eo#D_\)qLYKW.3%@mf]om`%EMp/o[]%2TZ!.:0dD6"PFU024L>nJ<B@g'8WMZTdD<-ieMGc*/PfYr/4aWlF\H`c[0s/!5+SUE&NZpJJ..%E%69tnM.Y##K/AXFN%>Ch@b@Apqhjp#;^@,.=ilR#sg`EkCQ5I+cOp*]fk6lLk1#I\iL2'geY_Id0YjuiS""G&g-iI\+,/^O!;HVoM^6%>T&iG6%QoJPio%LtP!P!E3bqFt<ND6;3)B'^cA/'.5Kq$<@Sa$UUicp`dQ8]#nlI5V4n.]kkeJL:PE;MgK)'Io>]@q9lG)]U%tOJ6beITJ-Rj+VZ7j%JBESL,/37[!CJ@K5;6/aWM0;uabAc3eK+9<rtCrgcsr1h76k*$BA>rdI-&(M?d_0s3q!?H"lu!gJ*Nq,>70gmQldA'QN)e^-Y4(]%Vnhq&FA4<53O6m[hphoeeRfcPhbJ\f!?qHZC/N/lJ;ZIR(f;KQ5pTLh5[-X(1p0pi3%95VKapS_S;_#a:>#loYQu(9'ahGs9.UOj%FseOB$H$jX-hs2>A8'>dE63dOi5lU@Qt2ZL!u9f4+CQ^kcqF]U%=hRMGsCe`8VY?eQJ&3M&k5?LLd^sJU*EDM=?90ER-eL8?jGHQ%P?9iUJS&E-/gup?JdJMC;oC"ch@7j0&+@nb0^*[ZIFN)Pe4^=]gTS4:DblO7XnTCSNUG^#pXcfJgtJs?])>_hgemHRK6X^?[i3n<%Ze9*N;)d.ll^_opHZ>f@J7A%FRjh?"rq98c1f;c';;/+"n+K05%54/EeJFEZ*).s&YB<%9G2*u)rk[tMbP8]^LaQ2h9rIo+[CQUN%eo#jjD"[It!'6UCdYd))0(AO>%74Ma:Z$7i7R#Re&+(1l2P=.-7\&5.Q.#&Lg8tj7]MogYHHh*$!6`83YP!3!F.prLU,WDU<\&''%[2Q`gPH8e[:Z7@cXtY(s<i<_4^"2MQ=D:!Ce*i$Q!o>$H%e_q`dCKrK]Kc#;3G<RSI&Nh@EB"R)ik[-2L<1.8>G%+@rp1I`h9MrO%gZ*'lleg\kOg/?<F(5.e7o.-b^(=Y@:cYh;i(rFp/5>aAh[<5&BR7Wq%)_+`m%E+I>"s0[Eql;7K3^rKBY!CV.ZP</06gj$W%6J.%QM(jhT&S;qMPi`^MX&JHQ^P#deks=INn'8iM;6(9=0$fQ(6gtSP"F^1]@da@q%JO[)IDg0Q8kf#!:,;(r?sFo+'1WC7ojo-0UR=s%WKaG)N3;Y5C)@1]mQ@tp(#8%2\Y!&9<7uJm@,2V+Dm)7he`."4.%Z@bRr,@qq<O$Bc#0^j)l4ZoqAhIun^thf&[5JHXb8br:[N-2%C;$Be^eGjUan4OYj2n(>^,,@5\hcniFLj-!`.#,KlLp+^.,"TW]pbF[ih$9]hEKI4gJ]oHM2Jrm12++cs","4YSpm9Yl%)ApTJ#-%eJo:/*-BX[=%M@3FjfRsp#:F-CoU5O<hfDT%rJsVFO1s"f%PNI/[U>dXfm+[j*;EL&)tU8C@u_Q$VOihd:HXP![DER7;utGLu]1q%e\+iV:h3s09:u'9Ip[=7g@:ieW"!KSm729<Ib\b<h6J6rc>"n:rqJ6d1l(JHDVX]hL+;q(UKMq584da>ES_4%`3JYpgkgBSf3Ijc%K9Fo;+O$@BIMS2T`r4rGDQQ-ZHV/UcccA%M-h54%E,[QP9R+UlQcUZslL*/+c')&=$fT?[9"k"U^X1$2K"3DRI\S:)Zh-D`&%]I&%6*4/QeC,1%lBN#"F74H\Jdp3CfZWWZPiUQ)^!69tGm@=59t+*XgJ]RQD=49M\&f+.T"]K\?)lE>hi<#W7/sT:m3l!]$#KF^D_:=]%db^WT88E4GrS)e&d'!&DQPFs6#QdWNjNhN(b&:d37NNF\(-fMUqt@==ZJDWepV&]mhKWPbL*Kp;=apqoU8M&aCE2oYP?L-;of(SP%K-/XRe]MNQnsuoN2RcE=BHSD55q=Hl3Fh:&>JgZX"4OD[TO6\pNpUh4P=P/Mb@aqd1T7\g^[a#F%@VEe+jJ(RU">&I/`(Xnc=t6a%8X(^pEUA*O]*i==8G5;RHtL&C:02U(%fpTAIl\'<`li)Ro7$6n=1oEAnia!t*hDjbP/mA)Y:7McfINJsgs&F8hU/GqYUqkdpGdr=%%NF*;0VA+Rh?n_s/cVa*@_"=cn<0-aisBXt7%NTh,u2rMeQX:p)bt_$8QmO+?HSV4dERpcdKH,s^QW"(jMJ8_4?/"QgR`7p,djOQ%`H:-F`N8]Hl,1]r\Tk.1P962m0Ls=>n)tA6#,Sf"k!-Bu[MunuFrK2Oo2cF6h9/tb77c`Yo:TffH/1`I=HP\Uk)N`@3;Kq@ZBErf%ouo<"XljD5JiUj<T=*P6TF7/uU(Id@_=sD%-mu8ZG7PKomYb>PNIM/d3)(`1<CC*J9$&!($DQu<9PFIRrOnE_5aX,V\T+.5:VtiO%%L9+J-S>kfIg4Sl^=BO?))P!o<jRNI9qnplFtB?d[e=NYfP2T"pf\"rC]*E&lS.;em_u<+[/kan/>3hM6=2k$F,kBI5306JCu&uC%5CN^Hh=/tb(,++/096),e&F_-%KR"/2]6-UD9(Po<YfPf-g1k=d/B+e3)J<p,<DG$Y)`uTWAPU90A!h<oIOp=$Oqd*NuGEGdO_;"%of;nJ+Ppg:`_1*b6!$,k3?gd^kXCcNFh76aS4"[M)(/p`2Rsb/p<Wi1+]kME&ri[78aV10]\dN9>IB.%UPW8TZ\^b)g@1ujo0KS2%l(?J8F'8OZqp]G$CcDPe4j/"?j!mp_ZXM7Y8)aMiZ*lfSV#$%\Cii<ZF^SZWWrj$il4+B_%:.d&Vdd'bq-NBVV2HVopDQ1Y8Am)s%1n'&cXaN^B&$M:T,u`SQfRi>j!q;N%ajNoh1h3N=MfV%NXP^]slPp@f#M;1*8R$cATrT-.3g21F?j(&1M`.SHgqQGUmY$o$1t][6%1H"U=8S<LBq^u70#$h6SK9l__1B)X[9;JrbHLK@UP&F(oQG)e<^;hm^X[2QS($"6D9\M&NO=SL$.(S."Hu&B[jgp;p)GQjQY$^W<%pAVAZJT,\k>7'kq9*lW?V)ZHn'1h@gCPsa#pNh6dKj`&1]*AnClZSFl'^*R/mQkPW5-bTq+L"3Wa]:Fn+MGGUF_XMKQRbe+g=fm+%fs?dBF36A5T#IGuAEVOaHOo!uqK8Y.iVmomf$70)[C=[MIW3fInU0rJrS,(fS$d;:(]WmO%KGRCe[JbD?[>KhD#a=sbLPIR*c,`@%Qf0.Y]UOr1?iR]dFPln*Fld]?mcq^e-iMTp$bF!T\@StoUPFi#%k:(FJ(n:Xkf%o!k+fuiolBl[UWfXE)o)"5"m_Y9%t[$S#4#V\%<P1P^m]X%1gO1\&KB%<>rL:^LFmk[kQ*7;sh_-O`+$.^YEfp;57#/Ujh`h%Mp82#B2u9:m]*Fs/++DuB[/-G&DVn[5^Gt#]^"#)I%=;8^-r3F'n>X//Y5,bhh>9=n+<fRF8j5:H2+NKgQlZKN3fBU7$^V6%ZGaJ<XcUXV>r23bKXZpS`]2;]<^](OI[rer$qs^<1(bR@/%?Z4i&Dq*HY\#[R+rlW-d7JGBHb,bDHm]BN>ICiXALNaiTH[bR2V-^?RK:eV,2@d3Wjd1h1>RPl&?bSX9IX^.PZkf;3]%"@dkAY9b%n((jms#[83c]?n97=XFTVq&1MrR^bV7k[r0KD(puRR+155BPM'ok3@B[g,<2XKOkW^Z/i4IZ9!SY1%XBX=i*aJ'#l(\!QO'PudCc%/P#=-p>Ti[fu'<J2ss2;ch[.uUOVlT;!i_Gp[DJKiraUHo92H:\?j6]o[pp*'3OhQJ+*Eg!BNBHI(SDl.FEOpfQP?6RkNB[CCb?#%hRN;M&&.&@K?jUWBX4l+*;nuf-[rf(Gk7X*l/DN!(UA>Zrl,b2N;cSEERFaCgjAsDj$$auEqDo]H2m*e9&o6<c[q@l_]7Q/KrM9F%7[</J".r6laR)L0cm\SjN8:G6mgE$sa8IBWs+gW^^@l1;lb2u/jVND`e7ubt;Xk:SrYE1Rr:"lHVcnAZI^n#-C\=l,%uqD@/)K`5%p*DHnn/Hjnm#ueb.c,rgS^$i2n+Wm-YQ"+8@=.NXZ[-k_Dur6&&d5h+Y5)D6pK.72g<TEJ(Rs`7)D<@QOO-o!3VNb+jkoJhGusl9%%d:/>elGl/%0!U,k4rDP*En?+(*/JK+*ojWeK1>C44V0ail3("`?Y6@iKJCso?UE<Lqpn]%l`+NFPOQZYL8CoVg4Q'XNajXKTquS%a8M^)&g*$+Vruf=C\uG7OI1gt:0,)FhEH<a??71%q1IQ"jmtjmOX)sbiGK?JhS+,QVg@^uIbVBA?/@E$asY!n?-k9P)\%nU<BdD9%\+n<fhPhP:DtJ[IqV0i6i",ZJc%FVD>ON37s0K,<FT3K+@nH;EISjBQ>^Q(JEK=n&a3f3EqtG#S]bN-$G$D]dLO@Nd:krq60=-ft%GeJCcF_bQ0Sc(kC4l6%@['45``CEomgtZ"E6,d3bGpa;$R65nA?[QsDq9-n9b1AqS?"nH<Fk>IiJ,"_mG]?M(38(h!I76)5/Hm6J%Fq9X`jfa*D<UoNp+%pHrBDq>OV`sQdpK21HNHZJ9U'g'*Gk($X]=E7[kQ<7.0C&l"nb]`'MtMP)h6"*@2]l8_f@JA;U!_(N^qX?M%GFpr-/)P6:1cHLoOkZ1>s'te@c)(eS9.XXKS:fe?m72Z>2_.Vf.@9,MKA_Q00Aal7&&6n(H.G4@)S:H^<QME;EGb0fo;[*TXaO?#%pp=5e9tn:#>%%5.L&<[\?eZO6n]XqZR-QI:BWq-p%rOsVg%0:\pP2OfWh!PlnE;bjq##<[]liA%%?Tg(frAqn_G?5`k?I#0'-B>]%6LNa651-UTk)G'`do&Hif*\InWd%D=lL/T=hr*`Dq)3\p$F#CU[e=ZS1LNlA]6+(6P7;3r:c*o6f,#3FpF=PRQ,+][!oHYF=Oisl%XP[+l9qXGK7@3Xcf0i+E(<%uhJ>#oXl_cDn!,P(H1LC_BdNl[^V`uY[ebJjf=7k8,SJ?B%L@N3D;D]3GP>plgXo,%fYUAY6^[a(t%3mR[LUN0K6'9#Je6%)29"2lt)`@qFcP2pj57V.#`aRkh.Er*#/4-mpN=X(I/IaT(p8!C\[Z/D(#P[KFa$Y[2T7qG(7QWW5JQfK^&%*m([ER=jRFAB#%;GOgQYR]2a+O!M\B_\=qQO@8Uafpf#@ZBXV'7n$oDlaS2ZDC)ghfLW,X%[:)=R49_uLTe,VO?tE<W4=S.St=Hl%j[G89:f1V$17"g<`R+8,4Im<]QKU=S[AE*IXrifg45qVZIMdh'4T+_>de(/`p?(1hcK=DqnJcB1+&[I%Lt4V7XZY=or:9FQ#Fd[?%QME!7isKe6?i#I\0'hCqhqrg.<,I*@?eqZ1qs0PQat.Uc%:5*=B5Fp7hL"5,E*k0\d"m^b+"c;o,#,i(cgL^Ff!pCBjkO*hpZq4F%H9C!]A,XB)^FJr-.f8biDJ+B1FmjD?J6T7[eM^!Jjdtr^*kZMsq[]%-Cj+9'QiD-i,BlK3SSZgE^KI`7pZ[k&2j2>"d<^1aj/K;c%^f#JBN!s-Z(%u:MA%?Kc&]%aOn84rOB(o,jB,Lgo4T=&4GPU@gT52e,DCKR@Sc*ODkG3WD!g_7PSWa,XM6cubKJ(*fUs#:tI6W3;%*_P'7pRWiU]NtH4m%Y*;/&I6&F>BetQY.H]C%S<prji$&ir@.cE9EnbgZlhkQ/<?A%>6_MWZoNXPO486Z%),T.'Gl4)Uo2K\7Yhq%;rh<O4:U/T[bn1R]R@W8S^1%[S>IO+S-hj6a1d%):OoQ>b<PhOXT*uCA,g1')XjbGI9V[+o_Rqu"?#KBVu)+KPQ)UjdCg:`<>+]m%#Ue`mY>W8SXmNMsn+!lJrZ_$k-TcGCm>XY^Wc.=FS64[]#u3_`j4hiDnXh`]n.+pU,POEfq/FN)mT7-9]Z2%Tf8#rh+:l7Bpg!Va%+5JU]['2V&)XWgmCjM]BOo<Gb_i6n()G@=1q:"/hRi@nAT9XLQC55]mmf0Tj0b!@%cRZcD?KJ6,n*O2VUVkt*f7&(SpC;RfI.7-9%X(^;%jTOIq#Hs]cPB(H>^D$?>?WOKgp$MAMo"q+:aj&@Bn+a$Zi8sh`iWC^VPEdfZh,U#`W;=`T]lR(s>4I=^LYRC6^QIHja3SPK%b)7SEi/RJ4\[a&7Z&SX]^&L3E\p=%qI?1G0pY<NohrsR[Bm4W>s3?U6(ob.DnDJA#p&/h'DETtn\(B]!?h@@>\YYiQ!K<pLld'p%%^IT6c9$E9Sa0MP5^BnGiAhWi/DM])>i\6SYYA8`Mj(GRG&X^8e($luBS,K2p;2(j-]?^#-^T&`A"h]3jm;FrYb)NaZjlXaEQ>#i>%KK$Ec^No#:f7UII^QXC_j.dEo)XEB+F<?5*p4'TErkqsC5.rB]US[C<a(6+oOO:E/O4]*[bH4mol07Nq8uoTt37>L#0KU$cjVM:;%%6n^rIpW&o4+D?^orlO$gNph"eoJg=Y5cZhVaU.cesrLpKB5=d8K1-4m#T#-=6oPQ&\"!VpFf>9P&%OC)*E""if28G#Q*:7=TO4t%G\<e#chVY,],gjie_g7#g&gR2m`j:;:Ysr3J(ALdXKZmjb%ncJI=8K2qrSso/@H>'4p@3iUsZMC'tKu">$c^PEVh@*)nVgNf?Op$%ni@l,\b4/&k5NV0^TS`"H<"/-0DF(jhnF/9(cQd/$VTJmnJdgOkW^SQ^[*!(I+727k\bn1hHg0.?J^36-i91TX7(KT%.omq3K&r9%pk.tY>qX7c9mJ2Xkgpd!Z]A<$'ahXgM?rUmYD7lDR_SjqP+-Rff/D61IsO%lBSgp!hSS9pVs_Sia#/0e2gA>0fh"&(M*Knn-K8\L%?6-.)2stni+C$]XZF7e35Ade5GCP<i?W"^OV!)E_Y9bi_V'5HKs0,LO<IOTe,o^UnU3GWB2k0j$j\0"ZbH_Tm.]:M4qu1,7;/CdD%n=\"gk6p0s[/&>&L[2'ZArL-:`6UA\X<6kYkuO;Rq1Wh)p3,"JO.URdA-hr36FYFGT0t=CQc[t,K8g\J/!Ue&nl@o#G^Hj-'Fd>U%YHA&$)R%^&UG'e0J&HtD.=+HjHb[;Rli-))f=K!aG<*X*_P5:$n`ugEo=S!tSlnt^plY%-#tX]*D<&lE&FBh2EI[rV[m"/]V5dA*%I<tMbp\*bH;&r`mkS<;&3h?C2a>FJF3sZuIC_Ia=N,`<C+UO7XA.A=oqr:rY=jL9PC@?&J=sD'KH%0a!QYNZ\:O@M4jk!T"X*7l5%^AlTIp;'B"r6<C^/h<RnETa6Z#Fk%gn"#J^6^7A`&+85!](>2^3BI/!m?6X6+bf>_IOg#E+'r=IUa"qqcZ8pK]ncKWI?hR]:]0>#%?bUd9+3G7j>W[M)rXhH:+.q?al/fq<B^W(P2eVlN+)g&LF6fHJ]GV%=oNrR%KCsjsFhMm=rGr.rleR!KIT+kupV"m[ml^W`?1gr0%?cW-6cgKV=IWBJt`f'MtgXe[dp^+drZTmpHJ,`M2%kiu-+SPKj(J%/*fP<n<_T*q%D1$g$ji0#(HfjGh#Ql0=r;-<B+0Y_3gH3Ft%5!QaTo'gmL%_u-)R]im3\+B4flH=\P!I[psJT-]ZL_UM;rM-"bfJP:qH%#/IY<Led&Yg\X_/B5Db=S?"MtLir[\#msr&8<-chDU#%5DQ7Xp=Z)=2D:-ko\/sNO2#p3;UO*GXF+sTH;_*Ln`J-aYDtddj'i[Sk[3):O)E@8h"W1Dod$W@`1,XJ!hlj]=5coedHBh5@kLRR%@/[]i[B4[=/)OUG53K6N^63tn\5$u3m"^kDQ'^+bY<k2JD7O>;CEu'2=196"k)#:>I.F`s@HnQZbI_!^ptb^_:'lb9%T\Pca8."^%Wo)(Tf!FC]n':m,5?m:iLCi[4!7KKFmd.4=:o0)r^AR,[Daq3'>j'_NHhkrWX@fE91VpV`5<T+^G^Si>bM1)9Ugk(V_u&'1h7^Ls%he*Yu!QITFqo.7sF8PE9$!q7<nqWLDboM$T5(p8^X?8]Eme#@qn,M0\P1#i+^?[M'iDi'Eg\N&k8t*u]Nn;n*j861"`h2uIJ&dH;%(GGMIq1R8k5LLY^c&huI'#e0]k/X?!(<@1s4C.jNqnIVM(\mpjU4-H4,W,Gm,?fA@H/?\:+8<18hRU>/IXNc"cVF2o`HVV%rc@b)%C\;m`.%bp1nk1!Z,>h)Rl-!k'Y!7Pno$>X+5J2,C"kqOArO9Jd'@Fn.G:3FgC2KepI<#\HpW`AHhq\-DeNVYNq-rO<-i8#Ja4J?^%J+_tg99Gmhs4H%nVNtjFji,WJ&PHM`qobbZq]tJJRP/!=m2XH8hSW.XI6JRs*Q&:B9-:&rD>fUXm2ss3n%9hes7'o8qf;I+XRu'H%5S&*1i:GH\4EC>Xb)\LLd(?seoO,<="6\Chfa#9oPafi<5Ti`Vi'm"r@-;EPZb;oYHLgAt-3%KJrp&g!D1;Npl[q:.+8P*o^A[d!%#MiNF4,i7*p!$:`mX4Qj',!CuUX+n2n`LZbq-Vtic[C)GnoufOSKbq?5MnK3rppBh^AZ%bfRJ/?BHBHV?MbgnaW&!c*@uV44]fD2%pF<$NDVmGNpMTimcVN.`$i9MAp"Se:$B:T?FjecQP1$TK<@WImjKgN.j:CZuli:n`f@BfZp>KkO`fE<0IWI2\hV-iCg:66&5Q0R/%hG(WPp!:DNHpI.@H?ZUU8XFojIrVprqlaY9&T.&^er=Pggt2o1&ECeh-u167nac:@:[-i1>['45n`lq![](.:]7&gmUDSogBn%>c%p%]J2i3SK$X?AT`r[KVqFCjK(hAG[`^:EjUGBEESVc+p8h"'o0M+&GQP8/09T1:,q-stQ]^YdnXpZ_,/>ISN5qtBGM\a][kIBlLY%@9i1$d7$"O*_.Nh2%leSDQS<dm<uK;?Tl:i\>_&CqLFsNcG.*GI!YPmBs4/4rUKFS>!:YHHiEX&-U_ok5+C%"p[mPDJ,Q&Tk.C;9%?T@fVp!YQ(f='-#Gk^1ilauuN_5#>LM9fA#*tdC[\Gg[RkDt'p]D8P@\f77;S"nTmI=C5,b/V,Y:XbrnDZ8ZhdZ(GmEcp,3YLdF_%oLm&f(Ur7KH10A@B-3-6Xj=n"4n5'@Ml-!)<aXb;^3T1`hWiQ-Q>bQRIt+tWmG#7,hW9N"DB+\^5@k'qSMKOus,:_H2V-kQ)5gO7%"bOYjD)PKT$ct&eD(<np^"K!c\_LBCr;DZq.gQ+LgCNVb?i/@S)?,'QS%lWn_tMg>^HMVV_>![GVcuAMGsQ)r=]Z2t5Y\5s2s(jg%5)FR:Bn:bpD>!/ELVI.EZmaM_5$NC/=XC0HliuFq`lZrc=8-F/-_DB,<1g8jl_F=A.I"p\ZhpuM00`gsGeJ6W4oRZQodIN<d("Fm%m<ODA5sH`+&2AZ!gfseq:'A=;d/E:jc$/mls#Q7QD;XdTlo['W/?t32na+6:cKY2a_<GH_QYN%09U@<;Z+IL:j#H+F?>kVU:JQ)C%Ot2M/LGE3r]*=+1N5CcKd@^k"C[^b;3<#FIcjPUm4?PUYiX3HlY&>"L3^*9'8Z3#8'!KN%#n@IeN@QZXq5_Y'q<IT5m<RggoWQ0m%2j3cOQ.P&S]$g1%c>U5N>aHc?>VM1H7<AAer<=)/_r9HiHiEh<ZYcL#"nEK?:3DjGLt0%\Fi`P>TTp=KX\?\1]u.kKdH/^2!l\6L%NXoK5Spn0EDWc6k?",OYNaQH!eA\>UV@Kqf>dR_LTDo@b4s%"BYO\4Y.c`39l+o8@lgDsPQEG?6fXj,`HSHP/^8G+E^(dj7^<@n6%o*_K>rETK6kGHPNd\A=gd9laso137kG[g`sM]lk@cu._(NT8jnLRZ>&T'lN3Y]2['+n=K4pOM_ml3(ZTBXmrY6hL8.mtUi1LE4H)%]DOJmAd<6#/Sog/7BaWlGiooF]lC4=f?Ab6l"Z.-BQ&0MY!3J^4?.S230V*9YA5Z(IatT2<k)fNoN\09/k-78C3leYDIQ#uY&1fu%%%`P/1HBls1YJ'i$qsE"<om\lG7GrIP)Qqs0R9n3GBP"Epf!K6`tRsJalWp/2PbE$>d7kcBg(Pm:3bF@[-nLN-:`D>P"5U'oj\GI%6KWZL%i+OSn1\0MQb5&HAc)6)3mQgY&G'`*9Qj3G`+3qp\&lPE+eroG82Bs+E)+]e?=UGT%L@]1?QBPrah"brh;&t9q!dCLS)':M%fteVTqfMXCg=T5ClZi0fHns2V6;$>.l->3ZG'Eqsr1TsYs6d^mbIc%F,[MshhVC;#N##/BM!hS3TZupBp^ReCGdCJ*a/dUR+&=g+%[X/5HU7N1B>@VF/([<%4K^MuTPqN\^Y$ROX;A!^JokT.$X.)VB[^Y!:enb:(opUiRa#af&[gr0+G.+:$`^1D*F8\"'TC'BQf\C>?%67u3PjpE$&MULBN@T`":3L?dK-O5Do=W63S"Js#"h,XR=nmXhR_7-)QcZJk:11e9l<kq5:(-'U2jS:bIHrXada&=bJCtJ,U[J4aC%>*t4oD02mk3h),?Lq**Q:BEb)kJ9rdD5NE@<D"GYq=)PYK[,q>PK\9ZMitf@hUHYVq,\kjY'*l-hooY;@L&<V,(CTH=QV%jp\$MC%o.]@f*Y0C0ict(QeH45>c[.B<7^&"7]14O<P]%=]45PNB[Y*$K0CB/3d-E5gI#)t"d6YM18]F$KD[p,>H5\)_??3gZdmb![L7eLQ%]=i:\q85RoF$'CR+Zh^?>?70S87]q5VaGCiG&W:?c!?C=pCF`Wp("7<Kqn%Yk*41MoT&O7lKIG6]3W&tqWOYGZ&))s@Dh:fW\0n/%KtUeg(RLTJM+aKmmr`f&8]T:,2_WgSoK401?a*&bqdLg[?R*?1_Qc7LnSWC9GSa_FRXb&KIP@XHk?$<)\ZC]N?$]R-eKO6\QVKHf%mG(oe0.rWr(qmC]j;k)]]1(fDL"=kiPYR2F?XC+Fd'JoP];PNXj8*6U1A)";&%d%u]K\#n1:P:>CS7T(Og3hBd'F)u0B=p_HnTb_%n)Nfs_dd6Oc`)"?g[QT[^t4@^s&XNkP8)E&V4."Jr&VUXX6#$hVg[E^9^;4rSSW02mBjDVmIteo),I]$p9ka(rh[rl_9!nRV*:g+%[eC0T8+3goH$&jFBYO^t5C0a;ApNP>ARcKQ=nFa@7CknfbIrQG%qr2?.foG0mciRSjsTRhj;Tl#1r5Tpbnj=$f).^9a!2hJr%=(+%G/n3Uq;%(MP&q!GaJ)K`?]:8n$P(?-+@:9$n!NBf]$Tk#h06e'jr1tDpHD8'e(_B!kCJUuhKQ>dGrYEdi,j6kD_Zg,5"EXH&'n6U%SF(K?p7c!Q4C?sm#p$C>31B`%-d+0Q1rdBb#<T+I:OD?k$T`,63oMC`Lo24DSnlYiZ28O:bKm`oPNA"[Rj@[p/@[!Jg,Xl,IR&8G%%l8F<l!AH(s8R/I4Jh/c2`":6j5YFHAENQ42;@_SI`h6tqnRr8iq?R2PF1">-"28YSC.Tpk]h?Z[=G8rLQ_lpc5j@>/s]\>_hj]?%q?n%K)FD/nDhFoh/:!>oF)j:qi*J(_%^m.'P4VVbqdcDKaB^_8%Ls:9+1Tp6.`'^888u.`o(_O_P6Ym(aju\o\n-5NU:!eFgIT8P%GPfkp3`@sr?EeaV3P;d"DLoqkl?IRMqD+=97*7M,EZ$qU.g]9"gZ.^CorY48cVAYP$$9F6XXhICD;[rR*ZI9%:c7Kmh>agfpVY;H%bFPaQ1$UoZCX)/!?hA7;:OfYC@smb]'90a+bPpBF40_^+P0\9&mssH9a^u15qV@(+CYT^P3kmaYic9LGF$>TSjMAOOXbl]KNV^fJ%R,=k:P?u4DDA?oSrhnQc'Hj!I8\M)&\/uah[j<h5U&Y/g007V*&cM%m-*ph^%k9b%SSbA(D=1@*ImMhVBH@)(n#t?Yh`7$!Es$On%ItLohFH:@k^S;n.cp.N&VS=J/9HHt.orFKsA&ZJ]3Mtn1'2I9%[.]jI92m7MhY,d89j<@'k8O2qQP\HQ-,2OID!p/k7::..0XS<1%ldk@[n\NN@j%Z8?-b!u-M:ZMR%c.i;++JcNmP&nUhIFoB.%BjaWF>a&B32l-<WCci%-.;pA7d7._F'gmD#`t3LAanCETKL8)me"f%i(W#5#J4C,O3TXlg,o7/p>u:[IHdu`VZ:A@O"6^GIU-lhldIiuR[GcYpn.;+,M.c3\tK]3O0:LInK0ZM2trfXI;4Y-UQ<FMh`TQJ%gGp>AQF#'*F<EaAcY02fG?;5/?9^UnRik0WQ2^I7*pN@n\+sR"akmsA+ORma&9Dt8">+7b/4a#dc<;B;M7=+ZU$Q4g)2uQ0b#C%P%A+uXBg%j`G9P"i)PUno*m#=g5Rtt!6a\K.@bK9QF:"6`'S>_8kS(nFk:UZQe-.;+mVr+(ldXNSm`FYN:T%rtWBiDAUij2dr3EV73%=iYf>L/_uX?qh[)c/dPU8@ACS3ct_)NO!Y@r9N`JE.o[;EsJcGN6AU?LSIG"k8"kFL@:FU.=E'eF8-BY':o'g&iQk-p`b@'QgL]H%rN/b^p%R%#X"m&i(70:k_$'_-jN`?CkMV[Y+TVJdo_1]PE]u)(PsjCi2&YDrBX6.lH(<EQa1@X@bQ:]QMdVAa-+[=p_1f9W"n5*H%$QK0QEPpo'H2I6Rfu-eX%q2184i,P[3oZcR]+u3J$&!o4i3VI`5hB\/8!C4$,t:*"XOLtjcs4i=esAYR&jj3TRR"#-"P]F@WI9+T%r!q5YrRH()nGG2i<F+Dar_8lI.1+":$L?F;@FmQ(C&P!P#)f1p\#+=V7ju0Z@q`aW[MJ_Of;WTrD2@5eQ9$SINatfOAD4O5Fk8Z,%bE1)*ACH8eI+_K[pU__8="]LPl')<H)8KagP::K/[]e.Tko7q@/^dT$T.X/$iiVEI9Lr9F`'g%?1lSmEO3<&jl'D"Iq7<[K%d[c-%2G?I.3j]O&k(_`hU0H`1,u:7R]o$\jL3<SD[!Rk=4[.hpoIBg.ChQQAGg<`,`KFfUAc29>g@6m.^R:E[p8Fh[#B5l/Xh9X/0GeHl%m:+h9C[=E1j]MCh\_dl84[GI:B5GiJc[3],Bt4A@$J]0B06j?$A<NW='a?i4JmWb&T/&@%AWm4.o?3g?Er_#Z:hg%B`;kfB.cIEW%fH'A7"=Hpoo;W4P,@F$"",o8#5b'$*7e/"$M)H<*1cZM+gdJVE/TOT1-93b,dKkHN$(;.9JTQQ)hVi2W\.(n/j?^VkjRQkZ68`-r%*jDF?4<ucQe_#_mWO'!N'mD#Rm2X"J>lq7%a=+;Q!>d's"%X0B4dp''8nX$XdgG!h[Fg$3%0K=CCljup6XC@n^adNR;;XS":>:qM%-lP1nUR.N:1!j:HGOVC70M_rNfJok2^-gts9+@kEToh;&P[MF\PPWXW0m'94PgBuW0Onn^&N`GTBtu.S#bQ#<.23Y$)As#fk-5$I%4NBYZY0>DN@\-')PaQ@lRbL1<npjSn7>)?4EJ_2CB).8_`UXVg`urMI['r=C`*8DAaInb:UI/N>eI/F7,cpL)S)feUdDQeR5sdng%Q3YbBajR4&OUo\%_;]ODkFmU4PQV9Op.cM8Ofo(aN:>$4<7Mb8`_9Jb!1F5m(`E]]UHg%XObXQ[f3AHeZXAGnY(V7;8si\!/J.[%%N$],TXC+f%8MPpL=ISHZMBGikP@,['P!i&Z$V[q+#rg!Y(*j/;Tif-&_T*9(;6=C:iYkZ;Cc59/+L7,%R>]u+5:d=r$=r1IYD(&]%'lG,"GMGN*L)8k.C6DLr4<9V'&lfD.)RRRsUU5iq+)/T9VhAO0l7A,R6N8%1=UQABKuk>iFXE!Q%j-rG`Q5(m;9V#)$n\H!5J!o4%6U=IgUSg+V-,]Y*7!<"m;mMlEh#c'fBKuYceq;$^^gr#tE$59I-N8*EPosXr=];Ul)sN&+1C4.7TI,hcPEdI]Gq2UT1kir<i7Fkr%#8dsBp^j,(:!>.9Vh+S2Lb@1FA:kGPGpKXfGlF*SP/o$K`?qWJdR8L:3_Y^1ajd>p`Ug/"2p7lO1$).mP;@A)^b\OYp<)GB/C_E?%<!]O6@^9H!.oi/@">Vc4^'H_Z$TTA&6YCFJ:r&=2KKLG48T,0!^bU$U*NE.h&0eG<!hCN$=3Mikdac_Wkt_dr*+6%(-j*sDbos8V%=3nBPP8d\.Urrb3%8EY2<09RbMMt>J'1>$ajVp$#K%S)Y]L]UZ0`YRU!%uC^e=A%Z&JS7<%udNO@RNr/1fDUb\Q9+Q=:8]%rkf/'%kR'6`5Xn`X7duE#U]!SJ-l3P6X>24N/n53nWMs83m"8DFb!noL]g??'%O;/l66Yi%&udT)8[G#^KAG"A'dhKW(BpL$F@4RdZ,6YD%7qkc#c`iMJ&&BhK9=2SE]dCIkJoia[m(eO4:,hJdZZ!L!F^SIqlp>;Y4U_.2:sqlB96to58.seT@D\ZDn.Fp?62jX;)FX-fg-j7d%Ei7Df3-MAiJ[J,dqH!9UaA-?s4f`0OlJboP/[5?,YRj&sV#\r'M+L:bd.W92$`Z,THoQinJuG7(&R;\CBG"sDdNn%L9@COf+W"6)%cJX7AScUm'03QYVF;WH!kVh[&bD<;e8]bdU(1K\+/O9K$BgE]eW=^S<`M=c[(.e1A-7ltlBG5'(L5[D5P;/N9.o$4$1;QRe%7CNq%oroS;Ja\Q#a,SDu)jBS8]H!ArE7h*7,iR3#BM?j8L^D0iG!%TL\Q?Io<fs[mX>GJHhm<TSN<]J5Vo/8<T]JGC.YA9_Hh9Z/_m\Yf%5Y#98Wk,&dl8;bA2h@bS2qBNoLf5"&i[,'6Eba>JnB:J:,UhdE[?004E+,/cM>!Dphf^5c(irFuL-eS.(5P4$m30j8#e((o+9rHW%f>N=Ieg\.L7p@AZ:OF3Fhd'O/2%-tAfOYX87*k3&VQG`SU4/F%L,#uVT^*$g=+j]PKMeC@mh/Q&+2W9Dq,Q:(N0VA[1$Y4Ert1<N%![!sPJL<?Le$Vd2-@)X;T`Ds9Lo.^*A>4][<1?:\r?_SfD6F:.d<R,u9o@?OE?E+C9(LEo"7'Hm3a/3``05iZdtX#jFS<jLh.X@P%PIq,#>XJ82BU+#DSu+mV!^@f3LngD%"qsU:'2N98k6Y9VhoOtT^daLcU">\^P`h+pQo.J4`'I*/_\,PeEAG5<pGfIn`*2Cr0nA+m%$;!GJhTLS26*->GQ`IJ^".?2$8Kp_kAZh0:"j:]1^.UCkiZ'rn'i#kli7>PUf1gBG6Hd#MNIXufVJ5p^-I)2@NEUn-B3T$8+;nY?%m$#4"1KVs":o7bN0Kt]>j<^7EC*G8kGpYkOp,B$Abma4K<qq.-`_gKMfgh`4ZiJ<hk:YcZEjB%c>8HZY!D1H#R>oce#MGIYSE(Z:%A4p<C/Wk3)acN8hIa%/RNV&%iI'[4U`](cSppND),\V?4^^4q9V&C_gJUi8SPc<nc'a/P/UHY5R%hfCH"+lRQM$9^m-_neP0]#kN%V"<!BL0hcSg0EeOH$)16l_6=hHQ`Q\Qm?>NMnKG:KKpmbh)!#!Z1&<)?nNXg,E8,pLe0m-;uJgpIs*s/d+$Y%=rK?:)F?\CRZ4J)%Ff*QdX_DQb[(G1u+0*RCHcl(j;g'mb'#trRr*\2OA:bDT-;XnPU2q!i`LiUb,f$\%2CR4H4M+?fVAg1e]A1[WdW3XH62=ASqkVIt%N,W&*73VE$l9"*89us>DHd><Z3fSo8CfOSS_IVrkG>Xbg29EP15T3VQbJQeK_l*pi,CQ>ZmQE1P+m;[X1]%T0,5kNHYlJ%+`G*,F%Mk`@K]GSLClZ0>c1739K$do&M/+0Ji$Jo!SRf#R1o$j,6V^A1sQcd_)8%AE/Ur?">`\mGl'/K^%-;Z3^(a*Pl9NO#\;ugZDE+Jaf%#lXi]_D9)6NMHCAQ?X,F,cUUjH7'JDfmVIf^k*79U++:.VPKD#0JOk&kAm3q:8DhcW6cBp9$-].,fJlg2GE?4``8>aK!SJ<D$!(E%&CFD[fjfX,DU,\ocFN:NfpYHWaF'i+)3,GhQ6]hO;<$.J=.1TI3c&=RVNmO,_)WuHMHb&$0u-s[UlbYCNKp2'Q<!@C]DTpnda5(#%<YV2j!Mk+ZE/YsN2mB+*k($Hnk&>nSQpsB%`'1W4dT$@2,Q.0<RbHtG@Fe4<3P!<Gq6_C*7WhiNibal>Vn+ntgVng\r)>osRX`>B%,H-/FB[2A9fQGGPDZS'jn6%]FI3!#i>n_a&]TEW6$tk2+mgZN3&"Np6AX_$l:7<lH]UTW;Q9GX,%"&0%RM'Ij0.fkYU;tMnA!((e%ho3JdVq2m<P[A!\dF\&?,`r<I8#MhYjR]5nP>_'k]bqunLTF&Ar_B05S#uiRJ\U@#g1u"4\!KEW1,.0)nJfP8cJRr7@,406rX=o@%s1N8lX;8-OeoZ8O5C<o+?)r&b+?sh\Q68nnf\tm=mRMA(%0L_+b5FpEJMP%[i#/q-buL2f]H=0_G=4>lKI!^9+eB7bq.-=UPUOU6%Umd[n9a*U.(eHJ[(:-$CIr$Qd;G-Kf<e*+1,VDP1]ihH7E0nr3XGWn?fe*H#D2*NFk\cPAeGps%S9SL]LG>OEI]9S3E?qdK`j96l%#G_51re769fkpjHm-+qZm"2Fcs.!5-JTMiQY2Wi;##2S'2'GS+Q&WDtk1KQN[h@?!^tiCCNL;Ihc:$,o=pQ>r&b<iT5*r!VjXJ0K%DMf?j=Gfg]=WCb'8kl@&(ajXOVm89;FUP]XD'=$3*`oj(&FP2Z00/Ri,4<LVA-rCZ;F(qpTILR<P>7NQY;1/.4B\tmb5<q4&S*3_%c>o")!eqgQ82,>i;WT)E^^H[<`@T(g/.B^JPn$7fS@tk2#UZQV6n->LYH<u1`Rb<+/nZOU6[6T<"C#$;7cXa?L2WRbT.3PAScsD?%CtV9IN>]N)/]Mfr#[1UAA6VrtCVr[V's\*-Zl]krOiq5?\u8EPEK^^?1YP[fOa`_>QNCP\+<*uP/1"C)BIJfGN&oa)]bMfeP@h!W%kNRB0+X6RG`[diKOrR'L/GdLWU_Wik#_*Ro^&UlA;'X(#_T3>nF,B)p_;%F>5N=jAjnT2"M(MmXPGD&:C%>)EQ2*fk(Y'JE+cmGn%a@^VA-k0&C7VOCre\cYMQ.#G"J!?YX3,Na\`lU'NHZiu3*#In!:Tcb%AJW!/V\fBZp/7>a]0?&dl'3'i$Z0?QB4FuZET-pjG!Z=(%d6>?M>Zku4d$dnSVo<$uJ8[La"_gK$l;+K:Ol2pPDBdhiR6iDuXn8XKP^QO%<eq^A4*-KkN=+k%Z?;-T1eTH[pB3'aV]\9ud;bd.%%jb8:5YZ.g5\#$UBQm'qSRq6pKE@pL&kE&785o_S<#Sp`-:7b)@Lf32P$gEs`LghNdOs`!4>bJhI<-C+MP9P;]8i34:m,W23gr](%0Yt/q]nhRn[c>a1Ou+&s%7Jp8W"s\?*ghMD=W.s0!gHfR`URg(YOgOKSM1qUa+Wdr$I?J*`&tnV#K7n*TP.\`;uroW?j"Tg"+ec)%>%]+($SFgeX!T+oQ4Yf)KbP2C+[i6a@]BjV-*tM0p_0]9=lT+Y$f[=ca/a(W,UPQ1$b>PeP*I:g$o4X&g;.q#fOe8bUOa[k->k$]%U/+8Zn+=1a'j_#Y?l$(OZsNR48O4u!/l\==B@80Q[4:NhPN5.=S7;XdK]BqN-=.pIWK"2l(,M2<(H>_%CIHnrcZ3/R1,TXH1=dqE%l\sBX8ja`=2A-X?PrBTH`Ic,2WmV$@GEqR,^A'T#iGLo\i(?ANC)-P$Sk^LZ<X!ED<M!m/r])It*cs=>:[%0)Lu/.DSR&bHs2T5i%\KhF%*DIt@%d5B6(]gmR;$H\2"HO23LldP3YuM+%#SJh#'?C:1C4T5^q/sp*`:9p[UPFB"UsW>"LuK/a"#M`e,gR_=p^D^aQ*%kJ%D?dpj$],Kj7Ap`eL`iZ*XJn#h!n:OfIr@kT)bIjqc&cb<WBa-hVb:_k9+_T.B,6&S6ZJo'WDst*<U=lS[?T5DItA5T-=G88(&q1r%"OA5j(Z[g$2S5(tLE!78\TFe=(nKohp-dCa>*T&l"#VE6'=MY>.@o+\XJ@QPNBsD(8j3Cj@$YMM7][:g<Uq[_Jm&eV:^G/g#RXQP%K+)EHELP='@&+fGVX3!6VQg.OK_CiYZos>/$0#_h(<!5]g#NV.2Gi'tCfS2JKF`\DK9clKFgdiIGb8uah(H'm<HbL,18<2D$f\\*%.$qlB.!bM/Lqa\iT1eSMC2FB[^`E4k2eI7"E+>.lNR@URK'WeY'$V-,\<c5f#+?NR*u1(cL9+c^l)Y;T<Et!?$(A%/A(#4:_$h?L%UG$Z;h'W%30HWX/?3(?JJhF$:;lkTRX'/1ZXbF5LPKBpU44Y@%O"j+XGphS[P[L[kPf.'!n*-5*0GGBG8q`nF#E@ZK+<T,m\mSod%6BdTM.i---6>+HiU9T+rkVbf"hLbh[1k8i!!A"_1r?!bEKtOE?!$V?(*nt[t&^cg%`&J++eOX@apO*m?DTh8kXs]C:l#,jW%7r.D%4d5tAKFhna%</_.,gkl$\'^q?MB,#Wb#G/n9\PmT\#Ho*@W,)$Ho'QO8aTec%t]BlZ'eR\$-X@;#9m%I*a\*JG15FUT7L&WG\hg4%p#J$cDe`p&k2.`1CI).m3&o18ArIt9@LF2#ehW!s"&,cYn7%5O6Cq&\d_djFJWX6W%ah#dV'N3O49i[I_#_6k@[ZsjU-QOF6'N@@%Xh\LVLEP!Wb$B?Bb-\^Pq)rcr^m;q,&Ut/jZeV4@0qDR)\$amH"f4aR(joCS?_TG+PF*_5F#14cZPF@7O>A,!"rRDUm:'nHAt\EP%9\5X+?NN=e'#>"2Y:TlYOLncn+$Peq_B>KG2Wu7B&o=87FU%Q;",d<YUH%IG0[a'L`$cnP/oNc@Lg.I^:t!aQIpo>jB$g,.$N$MC%*5<de7Cm]dn^$($-_\#+"hJAcJi,ZN]6J=!q@I9YHH=mge9kXB`T:TNObjah-Snpp`jA8hfW$+WCBC2>J0T2uq`p^,0-h[E"l^&D%,a!(Ur,4Tj_/Y^R#MgMZ<1V1_9)`0U^]hR]U^Wn&P)pEF84>@Z^b%i/o5Pb8J[iW8)(f?7<5pgXHI[\eG*BI(EXT[a9Mk9kgh7os%3cQ]A4WUmsUG!c'Xp(9t?R&H(cU"pgNt%&NZn7%=TK*SV*X;M\J^=C72\1-n4k$^gleF,eQ4Sa?ZAB:tRc+\9/@!VODhY!JKJfP-%nT9.E5[sWuTgu_b?h(uYP&%;P7\Y1sT9$V:YQ^"AMXs&XkSGX2&44m>,^?9G0;Ld0FoYjM&C3EgPT.FJg6,-'d\cFh'Sj,4a9(!4%s(7%OZC9@`<LopV[L)jUVK3]s@;P4"*$D%Q1Fu6sS?*b(R^;2O8E!]"?SG-Q!S8'B2d2%I_Y\@k1Ru>c3K:6Q8^;_&#Tmlf2mrAS%_%o5^!g8[I+FP1(.N0=3#D1"UI*!#SClf*b@?hLUkjY0l/MMU+Wo<G)CF2be'bcEJ!D1hSIYjS)!_1AT2-'e%Rh.=IHggk]hW&o8%8c&tB"]j)n85_?uo3]:m'(cFHM&T>O"->*2X;iaMOFG9aY]YcPX@>WhBWa_FA//pGF:\bkBR]6HnN%ZXKWGdq8a9ASi@32O%*\l7%\+8&uS%F?Os/uJ5=WHI,76a2CJ3?t*>_[h5(5/VZbr-d81'/Euqj`iQ&I9hLP2,.=MerZQZ,0(i5n(M)^dl9RQ">j8]UBU(Y1YO0%6[YQ]APOkIE1h,KmT9#]>Khh4K>]GW())%r;:MP:7cpJAjkJFtTTC!0CA1qjZ^p`A-5ia`c.OPf^q)hSG)DtF%h,Tb;Frka]uNAJ%I+k%7FJ:K0O06='if:3VLhU<b>$H.PfXYLULrhd^`X!D?"RWHm2K_$H07FIJ2;Tg).3?VV?V:u<e@CB_c-EPu#mY9X9s1MtXI5tP%g9<83HB-?md(:PI6(G>7/e>cEBh[d<L"")(ZrT0jY)bo`>C3(f\A?0.DC%m<WcJ5KYp[718$F:n[NoZ\0U."u=hU?j8"^2Fi?2]P%`dUWEe:CN7Z\?C#NsD?"Z(D1C$l+p,o<lg$)(f;``(eSO>2BT!/eekZ'A*K83)+R]qjA5`KV@n*%`p&2ZB:\3AH[u2FBI;1JhgV-%[":QFHd>/pC(fBjPq0LrL5h#\KL_E>`sJOnL/%9F2"%`)WTP&-hR5'igcAIUVb,6^Y`\sX1Z;#kDc.sK5e7f>O[C8\:6f=XEdL_o%ZF+_9GRJ?k"KI0K%.kj+HG&8SED<d&-PILVFh/-$C9!QQ$ta\X*\:rtQ^)'9TO5ToOpVF[P9/n?"fGa^.CZ8(i?'9@bY"(*F@Ne9%\VA6*'%EWa$aUT[5ls!E7WnLnA45^Z;VIg_iYJ?^8P>,SM/Xd/pQkZ`q?N^gMpsf0>5[J"c.qm46VC:sEm<g'pT-(7;.Igu-8Y;$%I2eS9opR[*F3sTeE%B=Z6JHZSWE!nOl0_)9TH-IMk:#rr;A.&oDeFh-T2YNp*X2(8n(Z\C#LdbR4Sp$>:'\_gH1,iYh3Mt*9k#Ve%ZF/b?[QG`8`nTsCF`i=G>)8f-,9B+X81bu6_89cC7aHY:J`A)6>+c0Fc"Jlj(n$j%8%Ogn9AGbAd(.j@CM@Gj`#a1L#NS-99uuLi%Zfp])ca-G!9*fk8n,Z.tU'-OQm1>5K!l=f0%T"D%S0T'm*:ti]*MPTN02O\PQkAA8>2X!*_oqta,UBM2b4(.%(a92VWg<^K*SeU#%\+T.=H])KuU`t./esC\O,"OMlJ&r]Z[<>Eidg5ed.5``.H$!AT@h<iXB?[LI6OX=TWH@@1AsfKi#?\1(>tS+/$E^Ipm5sU3T4109%6oIWOcn@R2eY!Y'#n"2kP>mf4KFt*FkY2VU@NEi9>r[gW::m,nLnMb`T#D<\$7E*0TnF!W`fN)Sn?"BE0>[b=atoWS@fWkDBkp;A%aJ"l=8HU]j^/(:\h9%]`Ihi\PlTiumjI:9Q--b"T=TDl&=stlS<]S>rYq>5Z_jlF-To[R#;rKoE8ZpE4DtOc^NUAm8Z:QMAdEV;1%N,s+YfBVo0i^q)4>EVpcA+Y_X/grGq1UKInFBUD#"tjmTl4ILoTmLTUP=?puN2j/S+laN'$(/=a5Ze9;<pM+:!OIO\1m9#S9*%3O%r`CG9i)^VMhN!TjFO]j]jMJ0T+VpbT8J'IgKf)SmY"nHV,utR$8L,*=Gd?=;$.0tQe8R/ls22=W?!`L5^5H(/EP>M:!b`k`NpMhn%.tfbp3]I1I3dgXaAs23UF'NFi,7jl8-pJQ&Oc^la%!$hN>1;f6`D.\o<OiE.)B6u%'W$Wlc]H(=,.CE!aV]7S#J60iiJ>Eddd2RN%[K+3l'h9CulU"(rSDl;.o5<URK!<"cjNRYJSq=ghEA@Y/mIS%r7P[;Xi#$XNeePj@#RKdNn.6*KUgfms4Y^.4s&&d'LZfR&)E^U>%='uSW;)fWe!,*S=hBIMB`n-=fBY`nDb&"cY7Em=:e51iN#DrB;=sPj7nYPUI64#sI=1&4T:*nNG]7/D^1S8t_V+#&s.nP8u*A5k(%2-CDLHSoP<2FMLTYm_g-',4<e>4VeQ>i7oT@XioHbfL>H@e_o`1ikg:_Ni],S*#4F^<h5fk$=/+qVTsgVdjCdSND9HFe_iEF=k4g%"Br@[i]-N3`<Li0:<f)`1@=]R'[iTkHbgUs`10k^0FT\2#m_/;Olnf-F"_5#JME?K4+3//]nChI%>pZj)Gu$<nWRH6%'htVC1D<Z%qj&HQaf)EfWrX[\(3q>^fMh:tlY/q(9crPsLno_ZU@:(qC4+:'h=n;5?DAX'C,or/\JG&]dYCaWh_k?k%9[?j<3=a"1>C<#$qgX4%l:/QK2=K:#UMOc=lc(B]qmkhYmk'Rjc;S#%l/K2K"NN=8BVNPl1KM7QA+^e`DHn%r(8f9QB$otBKtu[=Xi*N5*/ZLNN!M!GF8S('%*&?Qo:Dg*8BMrodf(M3n>_2Dc:=M+&7ol-?Aj'Ys?COBhk,GD2b8G:p9nf%6WCHRCZO(FS)BK98@Af;]LMk/W;JGWj3HC%YXL&cZ%B#7k!\J(NFk%_+!A=#<-r]B`"\]h"#DFu3gM)-+'Sj]lhUcPr[W_itc)gjpu:56W[d.O-O@T^uQfL;^<#JpK&`rfL3+/id>:4q"@%0eD:o/2"SQ=rP\"JI*#dj4HTaL*R/Z,3eGhRPOO//Zo):fNjJ+"&5'*&r?uH@8@YV#!WrC21urm8Qmrr/WT$<QUE"f#VAg=7n1b"%.cpZZ9qcYtA7g.gjT*$;)4aXk_j*2!#Rf6KE/gM&c^2Kh6d",E<n</RCiM(-OQ[IH)`=Tui^`@S=]-iaP[3g68"mMZ<-EjJK+gjE%^M/U:00')@BSZafEp\1G=7GZrrmfGY^;m-jHJ$SqY,<$>&Dt^H-tQn`-6%,tA4uK7Xd=b%>BWe/.>jcmAa4,PMQPB"6_hhL>,/mq%HRR>OUgG,G(Kr+2-]]ZMWZp1E_uH[l6kOLR,f036qUWM-abd<^O.6Y`VN[r)^"?!6'P]HY]&3k68gYUF6DtK_*]6fsm\g2u.N%Nj%]`E1RJkZgJ3@QTdndN,?#\K'&X.1IFcYpYjS-G*9TFt!3,b_2a$t0@=LZ^[N<U+ljcE9t0PMf&,^1m_"O[;UC_;em=i65Ms8;EA`%JS_Vm7r_Sh-eSc,CZBJeZh`k`;B#[_&5Zjr\3I![!Vrr<FP83=6mSW5aek/q%^>iK"Y^!Es+<-SkG-&R(DOTK3`enJ:9AA#4crr\%,=)[`An6grU;=T>dd1B//KE<!S?+W<jbd*7@B'/5Iu19GYaT?Bh<9#c^oI.627=iA><eqK8Rj6L[>!8eZIC-bUMl.BfA8;Ue5M[S%D]()F/>G'hd1&R3><ddCaa?R`)gR'*nmlM)\h5AqTo&KEX#bpMC1t$l^uP:J16f]bm>%^aYfo]21S,sd89@=40YP0ZXE:f9:c0E^%SI:LhjoWDC,`LMMa>K2"E$*2]#V'AL`8U((W"`nHQVToRMin4RUNR/iDlD)JakeN<!,&>-XE(;6;B)Vs?R;S`PcB@Pn=l(IldW*K%pUS<56<BKG+u8f;<)Y:h`"j+`c_sjQ)K![W0O?%m@uq[`EnMdR'p0neLQWq!E0CS[5!Proq9VBH'jT:M*uAr->&$c8'ojPmUA(+.%<"e`"bnBe?]J3UQV''&A*gb]:Yg>iG3/5I:H*+mL,r?SaQ(+Y.3!Tr5\$i\tQ?gI8%goFh,;FMH=G?6%D2Z[1lgU#MD(N)=9W_sp%5%<NpPoE<`19G!pEK[,W?HEB_?A$V"(6G>h<&H;A\on^^@qfCJZDF,E9&.1FHD+Kj_pDA8eI":8p;ATc/M/McN0hCS--2qR]UJj7%gM9d5"lNX@d"r<Ud)oT\nW/Ur0t@`^H]dY<q--8%[-A`"oNQ@%j;0Uh"\f(fY=\'O!#q0l/!WX&XV>-a:?mAGlBR$X-r!/<D3\on%!aX,4#lo+^,Ocsufn*^5(%iHsZqu\A9iV>pH=^$n=?PmeM5)#@F'Q6_bd"DA_]1IOaoJ4@5)XC2%"R>t^+'Ik':h$bWV-BqPq!_l%oLN!hA.C5O35a%FDXNGkMa1N-rr&"sGlLXRqna2bl#?Cs;B2.-8%6g\XAd+$/uV5uh']Un6-Zcu>$2or-*SsLVo<)$S2sm9p"`<L%\in=pY=c?e(kL]9Z0CI>e,enS?>AT;CDL.$G:s:[Hd&N`U^MU>>ZFJ?ZJ!6$JsA*!]b/1A>KOQu`Frhej>`pUoc)fne`^kNL*sYo%W4\qr>XMFoF),LFLsc<)nn3&&VHfXR3P6@kCb:Wi2Y7mte`Su;cM'#J/A+K_0%:0SDfBB*LZWUj;3ImMC<!ZsqA$<::O(X@%fnXf%pS,nj1_%JC2sRY<ZaIsof)k9)38.[,2]SkmG4)$l;3:'@8i'JS;Y%6.(5V$Zg\n*@g&NN*ZhV>`AOpQ)W<tnMDdbc`+pI85&M^,)%@nA0#nRSCA>u]af2*s-?;PC8<(79i9(Y+hRV=EDg\)@I,ZL]HWqQ7>_>QBFpR(CsV7u\C3>6:71UIA\nplp.6/*.P'j);tUh84+k%D6bk0`+Ia4j%K#B3b!Jn>haY5W3ut>%[X-M`g8*;SNl@cJEC<J67Z$u`K,Q16*@n'MQ,SnE#a`C'=elW@_WV`.=l'_B:?#KT?@m>%W-9(]0Tfto,GdN:5iX`b`Y?Ho&OO=6!TF.4BT\.sQ8OM/cl/?*qUQ*u[\R+IRUe0$L)V#pFXV`49NOK`1#i']S&]bp./*%3/Zi=_%=t5X,Zf#n(d:cIK.ZtOR5*hHXs.C^[!^mV4\cU^u7tt4p>EOi336p*:@^'P,YUaTJW&]MXn[VJ[j(^LYJrSJl`HiA)GoAM[71`SP%W^QkVeAR3g;C@t#Jc9IqihRHp42bd;+N^AqI[WA*l,FMMWn#-H:a7+SR`J@pE4om3j^U).:SlQeb9G(`Vq,HJCsS8h`AL5pKPGZt%04/j8E34:4^3m`-656([;&7&8\0DQ4O*n(Q!q#tKVu#3;?GT!CMrq$!n=;^W6lrN<P1Q!L;G>,<-pr_%4I(IJ.<rWeas`r47;d.M%I+Jc(fiP$bQ\;rF/h9H%PL/LG'1Og^EZPV)?qtN]7sI+F@8:RmEIN#1AnefS[[&g1puhcC"BJ@e#o!r]_0u?lKmh%igR"_i\&-Gb%)`>1"YkQM#`M'QQ)/19FN/#)V,qe[&E/7EMiao4h'eA1mmb+:Bq!8\2VJfe_(AJPhQs^j'\AWTH[/JM0d&DHE9C"tk5Ib'(YRW1%%4mK6\W#F.55FjZbYdMgIFMC60oo=G)2LrlgShAWHQ/dsVl$<n@Mr?&%10dX#obNWVhK/_&?0lPp8Q%eG!#ebQorRr7=c-iIGj#))%/L!&`#l,n94P!J,$IN4h="'*2@f.Xm?Tphg_p%R/KUfE83q!.pdjZb9.`@3''EG>FM+Y^W,H3gB)aM+5.^"[N)[BUHn4>%_51[W,%[!ntPf7WLmle/uY7Es3*LuO^=U^hiQnTpYtdO]b'%07hBmVhmm>49HX#K'me)F!W@5D"Im#I^%#PSR$S5j:0Yr!QZ`pm_hFE]mFp%4a_+DGi,PPLf?F!3t_>@YLl5q/`ZXo^Q@/A`I_#F2n,_QRQWtbJN#=Sa`.eZ^&F9&e%[pY@ND"@qkX>/>#Re(.hN6UO126+DB/)O%Gtip9W9pfg/'<,N=TQTD/5hK1FZfehKieQtdL\b/Dp`$FOfFeeT[gn'3IB/[B7N4tK93SIC4.bQ\,Y_ETc/EgTRT)Op.m11N?NGH%,tpo>:6Os$Y,Hph*.7IuBqZ3YRS*XAPe(d97.LApA5m?D#&8\K&,1%76UL?83qm@*Xek]klDp9@.;ulXnt.0WZu:-`_R\9Q#`g6>%U\_Wf_H"3@(k(H_+$UcYY1XD[lnbLdc\f?r[+*J^g+%RUMZY.;f"!D?*b\jf?lFi7@2DJcA7acaoG#8bPab*L$?3W--1:>9$[[BH%IS=&&E8a[?TbMA&GDs#+L:nmE+Ji03jPU3%Z"n][[Z1ooJUhYXPp0d@3&5:AKgl!o+KWWh6/"0_S!A?u`><COO,Z[e8IIK1)tC81%Vqc'C84N6.1`YBkq*QB<NFB`VhF!#qB9o";do49V"Zt9:&4>*,Bc=^ufT4Y!fuW'&8Be@"Yr-H3o[`S=f@mal'Eh_?.gLNsZ15sO%3j)qsr9g_8$@_AMS%khLoB+KA+9/S@C1lROF*DQcGj3c#k1cHKk.q(=TQcFcmJ0i(4"$q]a#fKKf8"jLKncu&++LrsrVFtB$c2Uid/~>%AI9_PrivateDataEnd