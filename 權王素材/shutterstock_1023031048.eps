%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: musk.eps
%%Creator: Adobe Illustrator(R) 19.0
%%For: Marina
%%CreationDate: 2/12/18
%%BoundingBox: 0 0 961 560
%%HiResBoundingBox: 0 0 960.0665 560
%%CropBox: 0 0 960.0665 560
%%LanguageLevel: 3
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 19.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 19.0.0 x44 R agm 4.7731 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c067 79.157747, 2015/03/30-23:40:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Web</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 2015 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2018-02-12T14:36:55+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-02-12T14:36:55+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-02-12T14:36:55+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>152</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAmAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8AgmKuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVbJIka8nNB442tKJ1C2/mJ+g5HiDLhKm+pRivA&#xA;E7bH3wca8Lo9SiI+NSp8RuMRNeFcNRgq1a0H2T44eILwlEo4dFcdGAP35Ji3irsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqnPOsMZdt+wHicBNJAtKZZpJTVzXwGV&#xA;E22ALMUuocVdirsVTLTpucRjPVOnyOWRLXIIvJMXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FUpu7hpZCP2FNFH8cqkbbAKbtrX1BzbZO3vgZI2O2TpHHUgE7CpoBU&#xA;4qmMPl/W5oWmhsZ5Ik+0yox+6g3p38MickR1ZjFI707TPLuq6tNLBaWxleH++DFVCVNPi5kb7dMZ&#xA;ZBHmmGKUjQCrfflr5rgjaWOy9RVFSiOjN9ADVOVjPDvZnS5B0Y1HLPbSMtOLA8XRhQgjsR1GXAuO&#xA;QmdvOs0YcbHoR4HLQbayKVMKHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FUJf3LRgRoaM27HuBkZFlEK/lTQ49X1RYJyy2ygtIV2JoKhQT45j5J8IcrBi45b8nreleQPL8M&#xA;6XRt/UPH4bdzyjFe5U9aDbf9eYZzyIp2A00AbpkEOg6VDAkEdrEkKEFUVABUEH6d1GQ4j3tohECq&#xA;Rnor4nI0ztDWmkWVpLcywJwku5PVmPi1AP4VyRJLCMQLrqqspU0OQZvKPzf0KCC5tdXgUIbkmK5A&#xA;2q6iqt8ytQflmZpp3s6/WY6IkwC1uDDJX9k7MMywacAi03BBAINQdwctanYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUovEZLhgSTWhqcqlzbY8mdflTaST3crOB6KfZ23J&#xA;P2t/kMxNQdnYaMc3r8JANPHMQOeVXCh2KuxVpgCpBxV5n+c0wGm6dBXd5nen+olP+N8v0o3Lh607&#xA;B5Rma65N7MUtk+LkOx/hlseTVLmrYUOxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxVB6jECEfpQ8SfY5CYZweo/l3bxW6yqg4otFH0An+Oa3Mbd1giAGSP5v8rW90LebVLdZjtT&#xA;mCAf8phVV+k5COKXOmRzQBq03sr6zvoBcWcyTwEsokjIZSVJU0I9xgII5sxIHcK+BKW6z5j0TRYw&#xA;+pXaW/LdENWdh7IoLH7slGBPJhPJGPMpHZ/mn5OuZzCbl7feiyTRsqN/shyp/sqZYcEg1R1UCVTz&#xA;bpGm61Zx29yofYvDMtOScgKMp9/uOV45GJbcmMTFF4fqlg9hqNxZOwcwOU5jaoHQ/SM2ETYt0848&#xA;JIRlknG2T33+/L48miXNXwodirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiq&#xA;G1D/AHmPzGRlyZR5s3sNJXWPLtujytHAJxNcqtayII/sVHjUZr5S4ZO3EOOAT70/y70awtptVtLU&#xA;yz8FSMQJI3KQ8UVVoXck7d98jHjlytlPw4jegyDS7vRIdO56NAkFqtZJLdEEfUbtQdGoOh3yGQSB&#xA;3bcJiR6eSPfUokt2nIqgXnXxFK5XbbwoHWdds9J0ubUb+zkmhs4llvrlIWeONe5Z1VwDv9k75djx&#xA;ylycbNmhA7pNrLab5j0m3uksGETqzxtLEVEiV4/AWC1px7dDtkjGUDuxE4ZBss0mxWxsI7ZHdo0/&#xA;u1kblwU78FJ34jtXK5Ss23whwinlPmqzu4fMd7HKpaSaUyR0H2lkNVp99MzcZHCHVZokTKsbW4tK&#xA;W9whjmjADoaVFRXtmRCQIsONkgYyIPNrJMHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYqp3MZkgdB1pUfMb4CNkgs/8hxmfy/DEpIaR+DEdhRQT9C5rM/1O7030Mul8taTLYTa&#xA;fPbx3FjcMsk9tOpkjd02V2QniWHY0rlccso8iznghLmFbUrd00L6tCfSt7OH04Y1FFWNf2FHYYZT&#xA;lLcllhxxifSKUrlD+imVRusQIH+qK/wytuHNNDAtxbMvINBcJR4nAZHRh0Ze4yQNctmkxvY7qUdj&#xA;FBEkCxokEY4xRIoWNQOwUdMiSbsshEAUEu1C1SAequ0Z6g9u+EFLHHtbW6uW1GWIM8IYW7Ebjbcj&#xA;7skZEbM8eMH1HpyYh5odX1mUjchUDH34DNhph6A6XtA3lPw+5KcyHCdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVemeSTbm5lFuQ0TuJFp0BkQsw28GqM1WYHq73TkEbM6V&#xA;Qo2+/Km5KvMs5TT2hDrH6oZnkkYIixxKZHZmagAovfCGUaG5VLl9LTy6+qC8ia19D1BLzQxEEbfG&#xA;Dxp2rXDwMeMc+jtAkmbTYVk4uoRWgnjYPHJEwqjKy1B2wEJkQdwmRAOxwISLzExELwj7JRm+mhGI&#xA;CljknOGxd5HVLZUq22/HjVjXxO+Ebnbm5BPDCz9NPPbq4e4uZZ3+1KxYjwqembeMaFPL5JmUjI9V&#xA;LJMHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWdflzMonKA70BPzDN/&#xA;zVmv1Q3dvoj6Xo0VwXneI/sorg+NSwP/ABHMUOZ1U7+KGUIsiK9KkBhXqKHr4g4QkJTF5e0eKMQJ&#xA;bKLNX9VbKpNuJOvIQk8BQ7gUpXeld8lxlj4cU3hnIIVvsdABsBkWVIrAhiuo3clwLl5KfAGRadKK&#xA;N/xrkkWwfzD5iSa2bTrdWAUhZpG2rwPRR8xmXp9PR4i4Ws1olHgj8WNZmuqdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirJ/Id4kGrIrHirHiW/1qEf8AEcw9XHZ2Oglz&#xA;D0uC4Jv/AIj8ULtC/wDqygPG33gLmCHYlBeZJtbWUJaFIISNrgguxPccfhA+/JxpsjXVjQ0rVWDl&#xA;tYlBk+2pjc1p8mOWbNlhNtIg8w+qIkvBcRj7RmjrQfPny/HISpiSGVyzLbWrSyn4Y1JY/LK2osMv&#xA;JxHaGNj+/lqWUeLnk368n1Y9Hm1zIJLmWQbh3Zgfma5toig6CZskqWFi7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVa1uhayiVm4Iv2nrTjTetfbIZIcQbcOThlb0PQv&#xA;NEclzbXjEFZIkScjoy9UlX2oc1k4U7qE7Z4RHLHvR42FexBGVtiH/Rdhy5eiK/M0+6uG1REccca8&#xA;Y1Cr4AUwKx7zJqqxloVYEpsE/wAo9yPbJAIJYT6d3qup22lWb+mbuZYZ7xgWWPkQCo/mb4t/AfRl&#xA;sKsNGYnhNdzHdY0u50nVrvS7ugubOT05QpqNwGVh7MjBh7HNm6RB4q7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqg77VrCyUmaUcwP7pTVz9H9cNKxDVtcu9QYqT6duPswg&#xA;/ix75IBX0zN5Elk/L7yxr+mKPWOj6f8AWUOyk/VYxViAdm8abH8NdnjRJ6Oy0uWxwnmlflzzR9Tu&#xA;Hs7jkFX+9tn2kiJ/aC91Ptse2Yxi5wkzCPWtJdeQu4gD2Zgp+40yNM0s1rzdp9nauYJlaSn96TSN&#xA;K7VLHbCIoJpilpp97qj+tKXt7J/iaQ1Waau/w13RT/MfiPan2sJNMQLTNIoLbzFoMMKLFBFcw8UU&#xA;UAHrLXDjPqRlHoPuLGP+cg5X0Xz9Z3zRFrTU9PT1ONKmWGWRCw+ScRm1huHQlhFnrul3VBHMFc/s&#xA;SfCfx2P0ZKkI/ArsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqlcXdtbJznlWNe3I0&#xA;r8h3xVJbzzfaR1W1jaZv5m+Ff65LhVIrzzBql1UNKY0P7Efwj7+v44aVLsKuxV9+flqEf8tfKysA&#xA;yto1grKdwR9VQEHMWXMsgxbzt+VNneyi8trUXCRkskalkniPX926lWI9q1+eYk8RG8XY4dTGW0+f&#xA;e88n8kWRcqby/i4k1QXDCh9+QLfecp8QubwDvRFh5U0e0mSfg91cx/YnupGmZfdeR4g/IYDMlIgA&#xA;ntta3N1MsNvG0srdEQVORAJ5JlIAWWW6P+WMTX1rqWryH1bYh4rSM7clYMvNu9COg+/MrHhrcuuz&#xA;6y9ovNP+cv7BPqPlm9UAGKS6goNjR1jYbe3DM7E68vmjLkIu01XULSnoTsqj9g/Ev3HbBSp3aecW&#xA;FFu4Kju8X/NJ/rg4VTq01nTbuginXmf2G+FvuPX6MFKjcCuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxVKtQ8yafaM0YJmmXYonQHwLdMICpBeeatSnqsVLdD2Tdv+CP8ADJUqUSSSSOXkYu56sxJJ+k4V&#xA;W4q7FXYq7FX3H+RGqjUfyr8vvyq0Fv8AVz8oHaEf8QzGmN2QZ/kVSTzJoeg3dpLd6iyWghQvJfll&#xA;j4Ko6uzfDxH+Vlc8Qk34s8ocuTD/AC35S0/W4l1Cz1WK80dywiuLapZ+J4sCGHwEEe+UjTG93Llr&#xA;hWw3Z/puk6dpsPpWcKxA/abqzf6zHc5kRgI8nBnklM2SjMk1vm3/AJy81JWj8vaeNzzuZT7cFjX8&#xA;eZ+7LcQQXzflyHYq7FXYqjrPWtStCPTmLIP91v8AEtPCh6fRgpWf5BXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYqlvmDUDZaezIaTSnhGfAnqfoGEBWCdcmrsVdirsVdirsVdir6u/5xZ1n1PI0tozf7xX0sXH&#xA;wjlVJVP/AAbNlOQbsg90ypXzB/zkT+ZEura23lXTpiNL0xqX3E0E10Oqt4rD0p/NXwGWQCCx78mv&#xA;zQm8l66ILx2by/fsFvohv6TdFuEHiv7VOq+4GGQtQ+vYpYpoklicSRSKHjdTVWVhUEEdQRlSVK8u&#xA;RBHUfbbZR/HFXyX/AM5R3hk86aba1qINPWQ9Nmlmkr+CDL8fJBeM5Yh2KuxV2KuxV9K/8qB/MP8A&#xA;3zbf8j1/plau/wCVA/mH/vm2/wCR6/0xV3/KgfzD/wB823/I9f6Yq7/lQP5h/wC+bb/kev8ATFXf&#xA;8qB/MP8A3zbf8j1/pirv+VA/mH/vm2/5Hr/TFXf8qB/MP/fNt/yPX+mKu/5UD+Yf++bb/kev9MVd&#xA;/wAqB/MP/fNt/wAj1/pirv8AlQP5h/75tv8Akev9MVd/yoH8w/8AfNt/yPX+mKu/5UD+Yf8Avm2/&#xA;5Hr/AExVjnmb/nHH82L25iFtY28kEafaF1EPiY77MVPQDCCqS/8AQr35wf8AVtt/+kuD/mrJWrv+&#xA;hXvzg/6ttv8A9JcH/NWNq7/oV784P+rbb/8ASXB/zVjau/6Fe/OD/q22/wD0lwf81Y2rv+hXvzg/&#xA;6ttv/wBJcH/NWNq7/oV784P+rbb/APSXB/zVjau/6Fe/OD/q22//AElwf81Y2r1f8jfyw/MPyUur&#xA;wa1pgaC9MD2/oXFu9Hj5h6gyL1DL92QnukF7OkmqizqdPm9cCgTnBU9q19Wn45VwFNvA/wAzvyH8&#xA;3635lk1jy/poRL0c72Gaa3jpONmdaSNXmNz718csDEsb0r/nGz8xpNRt11OyWDTy4+syQ3Fu8gQb&#xA;kIpcDkegrhV9L6DY3Wm6VBp0OlywW1lGsNrFzgNI0WirX1T0p3ysxKbUZ4tbmkLtpk+/QepbbD/k&#xA;djwpt4N+cH5I/mb5u85Pq2maan1IW8UMXrXNujfACW+EO37THvlsdgxLCf8AoV784P8Aq22//SXB&#xA;/wA1ZK1d/wBCvfnB/wBW23/6S4P+asbV3/Qr35wf9W23/wCkuD/mrG1d/wBCvfnB/wBW23/6S4P+&#xA;asbV3/Qr35wf9W23/wCkuD/mrG1f/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:eeeb0f03-5af3-4b22-9ad9-bf330d8fb120</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:eeeb0f03-5af3-4b22-9ad9-bf330d8fb120</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:cf7cf9a7-7121-47c7-919c-0eecfbb323d1</stRef:instanceID>
            <stRef:documentID>xmp.did:cf7cf9a7-7121-47c7-919c-0eecfbb323d1</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fc10c7a4-d29f-4039-b901-4207c247ed84</stEvt:instanceID>
                  <stEvt:when>2018-02-11T17:22:20+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:cf7cf9a7-7121-47c7-919c-0eecfbb323d1</stEvt:instanceID>
                  <stEvt:when>2018-02-11T20:34:58+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:eeeb0f03-5af3-4b22-9ad9-bf330d8fb120</stEvt:instanceID>
                  <stEvt:when>2018-02-12T14:36:55+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>960.000000</stDim:w>
            <stDim:h>560.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=63 G=169 B=245</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>63</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>245</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=122 G=201 B=67</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>122</xmpG:red>
                           <xmpG:green>201</xmpG:green>
                           <xmpG:blue>67</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=29 B=37</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>29</xmpG:green>
                           <xmpG:blue>37</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=123 B=172</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>123</xmpG:green>
                           <xmpG:blue>172</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=189 G=204 B=212</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>189</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>212</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -560 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 560 li
960.066 560 li
960.066 0 li
cp
clp
960 560 mo
0 560 li
0 0 li
960 0 li
960 560 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.329412 .329412 .329412 rgb
f
960.067 550.401 mo
960.067 492.801 li
957.746 490.864 954.792 489.227 951.067 487.965 cv
937.766 483.459 804.302 437.207 802.218 437.207 cv
800.133 437.207 787.888 409.675 781.121 408.39 cv
774.353 407.106 625.278 401.194 613.695 407.736 cv
602.111 414.279 562.792 443.654 562.792 443.654 cv
562.792 443.654 425.659 493.56 403.594 502.163 cv
383.701 509.92 374.87 546.915 370.596 559.842 cv
960 560 li
959.447 557.205 959.564 553.952 960.067 550.401 cv
.101961 .0980392 .12549 rgb
f
788.24 560 mo
789.323 545.14 791.633 517.529 795.123 496.571 cv
800.138 466.459 789.343 435.418 787.527 421.291 cv
785.712 407.164 775.913 405.805 774.622 405.375 cv
773.332 404.944 604.098 428.179 604.098 428.179 cv
604.098 428.179 603.843 456.565 603.829 470.761 cv
603.817 482.867 613.533 539.705 617.193 560 cv
788.24 560 li
.870588 .858824 .827451 rgb
f
776.66 391.179 mo
772.78 396.415 776.118 437.637 776.66 449.682 cv
777.203 461.727 776.66 472.482 776.66 472.482 cv
776.66 472.482 676.974 540.566 640.508 507.756 cv
604.042 474.946 603.829 437.207 603.829 437.207 cv
604.704 404.084 li
776.66 391.179 li
.792157 .564706 .447059 rgb
f
769.297 397.016 mo
767.162 399.597 760.188 448.446 765.159 462.588 cv
770.129 476.73 769.297 487.965 769.297 487.965 cv
785.807 466.889 li
776.66 472.482 li
774.607 390.212 li
769.297 397.016 li
cp
.611765 .384314 .294118 rgb
f
604.704 412.626 mo
604.451 410.373 603.843 421.291 646.861 453.77 cv
650.498 456.516 683.856 464.738 704.934 456.565 cv
726.013 448.392 774.622 405.375 774.622 405.375 cv
776.66 391.179 li
776.66 391.179 605.044 415.654 604.704 412.626 cv
.309804 .176471 .129412 rgb
f
571.221 298.908 mo
571.221 298.908 571.15 320.2 573.301 322.781 cv
575.452 325.362 578.451 326.22 578.451 326.22 cv
577.861 321.63 580.561 349.516 583.333 358.551 cv
588.756 376.228 586.357 399.631 602 410.667 cv
618.386 422.226 652.023 456.565 672.671 453.554 cv
693.32 450.543 701.493 451.833 708.376 448.822 cv
715.258 445.811 741.929 426.453 749.242 420.861 cv
756.555 415.269 777.634 392.928 779.354 386.031 cv
781.075 379.134 781.935 349.022 781.935 349.022 cv
781.935 349.022 779.784 313.748 784.946 304.714 cv
790.109 295.68 796.838 275.865 796.838 275.865 cv
796.838 275.865 789.678 167.489 773.762 154.153 cv
757.846 140.818 699.943 112.857 699.943 112.857 cv
591.799 142.969 li
568.139 207.065 li
570.467 297.142 li
571.221 298.908 li
.878431 .643137 .517647 rgb
f
638.688 377.198 mo
649.872 331.693 li
701.094 331.693 li
701.094 331.693 725.488 366.671 725.858 369.461 cv
726.228 372.251 723.643 378.231 723.643 378.231 cv
723.643 378.231 646.646 395.05 638.688 377.198 cv
.796078 .509804 .415686 rgb
f
649.872 263.083 mo
649.985 263.372 647.265 262.156 642.89 260.94 cv
634.388 258.577 619.639 256.214 607.285 264.895 cv
588.572 278.043 586.809 261.882 590.379 255.659 cv
593.95 249.437 596.746 240.233 605.994 240.533 cv
615.243 240.833 641.914 242.745 649.872 263.083 cv
.909804 .690196 .592157 rgb
f
688.752 315.964 mo
683.161 314.474 677.029 313.865 671.563 313.865 cv
665.881 313.865 660.919 314.523 658.029 315.531 cv
658.016 306.713 658.154 280.482 660.196 272.634 cv
662.664 263.148 646.861 249.437 646.861 249.437 cv
647.786 249.75 649.567 250.359 651.9 251.103 cv
651.941 251.131 651.982 251.158 652.023 251.186 cv
655.921 253.839 665.613 256.044 674.219 256.62 cv
676.716 256.983 679.114 257.201 681.275 257.201 cv
685.224 257.201 688.385 256.475 689.932 254.585 cv
689.935 254.582 689.938 254.578 689.941 254.574 cv
690.802 254.198 691.262 253.926 691.262 253.926 cv
691.614 253.677 li
690.691 256.872 684.808 269.002 686.06 275.892 cv
686.751 279.696 688.584 298.032 689.621 308.698 cv
689.434 311.411 689.155 313.923 688.752 315.964 cv
.862745 .615686 .494118 rgb
f
678.404 256.767 mo
677.06 256.767 675.655 256.716 674.219 256.62 cv
666.367 255.478 657.525 252.897 651.9 251.103 cv
647.094 247.871 639.237 244.872 631.827 242.501 cv
636.01 241.274 639.115 240.533 639.115 240.533 cv
639.115 240.533 630.442 236.715 620.091 236.715 cv
619.554 236.715 619.013 236.725 618.467 236.747 cv
616.711 236.816 614.817 237.013 612.874 237.295 cv
612.726 237.29 607.571 237.008 618.467 224.702 cv
629.52 212.219 618.469 196.31 614.657 190.921 cv
610.846 185.532 625.383 172.714 628.579 169.64 cv
634.488 163.953 655.753 162.977 675.19 162.977 cv
680.276 162.977 685.239 163.044 689.766 163.111 cv
694.295 163.178 698.389 163.245 701.743 163.245 cv
705.398 163.245 708.173 163.165 709.666 162.919 cv
709.966 162.87 710.277 162.846 710.602 162.846 cv
720.527 162.846 741.635 185.309 745.801 190.921 cv
750.103 196.716 748.033 235.359 748.033 235.359 cv
719.43 233.946 li
709.045 241.312 li
705.814 241.671 703.42 242.297 702.353 243.216 cv
700.93 244.441 699.7 246.403 698.652 248.684 cv
691.614 253.677 li
691.76 253.17 691.781 252.887 691.629 252.887 cv
691.423 252.887 690.9 253.403 689.941 254.574 cv
688.108 255.374 684.457 256.642 679.55 256.754 cv
679.174 256.763 678.791 256.767 678.404 256.767 cv
.898039 .670588 .560784 rgb
f
674.219 256.62 mo
665.613 256.044 655.921 253.839 652.023 251.186 cv
651.982 251.158 651.941 251.131 651.9 251.103 cv
657.525 252.897 666.367 255.478 674.219 256.62 cv
689.941 254.574 mo
690.9 253.403 691.423 252.887 691.629 252.887 cv
691.781 252.887 691.76 253.17 691.614 253.677 cv
691.262 253.926 li
691.262 253.926 690.802 254.198 689.941 254.574 cv
.890196 .658823 .552941 rgb
f
684.625 443.354 mo
671.528 443.353 659.839 438.935 650.515 435.753 cv
649.215 435.309 647.927 434.652 646.658 433.814 cv
645.086 432.494 643.622 431.258 642.284 430.166 cv
630.061 417.873 620.708 390.944 622.122 381.84 cv
623.84 370.772 616.531 349.988 616.531 349.988 cv
609.649 349.128 599.734 335.632 598.464 334.411 cv
593.373 329.514 599.755 314.284 607.484 307.734 cv
615.213 301.183 627.514 301.536 635.476 299.228 cv
643.629 296.864 650.515 285.964 650.515 285.964 cv
656.361 311.765 li
656.67 313.129 657.144 314.423 657.76 315.628 cv
656.682 316.031 655.928 316.485 655.578 316.974 cv
653.087 320.446 647.462 326.239 649.854 331.766 cv
638.701 377.142 li
638.695 377.161 638.69 377.179 638.688 377.198 cv
638.688 377.198 li
638.688 377.198 li
638.688 377.198 li
638.389 379.632 651.825 396.82 676.013 396.821 cv
676.764 396.822 677.521 396.805 678.292 396.771 cv
696.326 395.976 707.964 386.795 714.107 380.108 cv
719.953 379.036 723.643 378.231 723.643 378.231 cv
723.643 378.231 726.228 372.251 725.858 369.461 cv
725.56 367.216 709.699 344.117 703.521 335.188 cv
706.227 333.497 707.373 330.8 704.934 326.392 cv
704.934 326.392 li
703.552 322.958 701.626 319.4 699.947 316.556 cv
697.968 313.203 696.331 310.842 696.331 310.842 cv
695.613 318.416 li
693.969 317.643 692.203 316.981 690.364 316.423 cv
690.342 316.194 690.049 313.099 689.621 308.698 cv
690.315 298.638 689.738 285.814 689.462 284.041 cv
689.145 282.007 691.205 280.745 695.691 280.484 cv
696.353 281.161 697.074 281.85 697.832 282.5 cv
698.249 282.856 698.668 283.21 699.097 283.54 cv
699.514 283.884 699.961 284.179 700.376 284.485 cv
701.218 285.084 702.043 285.595 702.781 285.988 cv
703.514 286.388 704.153 286.676 704.619 286.844 cv
705.083 287.015 705.354 287.094 705.354 287.094 cv
705.354 287.094 li
705.354 287.094 li
705.354 287.094 705.171 286.871 704.841 286.514 cv
704.507 286.164 704.047 285.647 703.471 285.071 cv
702.903 284.482 702.229 283.816 701.49 283.121 cv
700.755 282.421 699.956 281.695 699.138 280.987 cv
698.926 280.805 698.713 280.624 698.5 280.445 cv
699.363 280.465 700.289 280.512 701.276 280.587 cv
709.617 281.215 731.388 292.775 749.455 307.506 cv
763.085 318.62 760.557 331.512 757.638 339.74 cv
753.638 342.715 748.812 345.503 748.812 345.503 cv
748.812 345.503 756.125 349.616 750.963 370.397 cv
745.801 391.179 735.046 397.016 735.046 397.016 cv
735.046 397.016 726.84 416.793 725.152 419.57 cv
724.76 420.215 720.314 427.459 713.607 435.084 cv
703.479 441.227 693.713 443.354 684.625 443.354 cv
.898039 .670588 .560784 rgb
f
714.107 380.108 mo
717.718 376.179 719.43 373.111 719.43 373.111 cv
719.43 373.111 li
719.43 373.111 li
719.43 373.111 li
719.43 373.111 li
719.43 373.111 li
719.43 373.111 li
719.43 373.111 li
719.43 373.111 688.588 362.357 686.437 361.927 cv
686.324 361.904 686.203 361.894 686.077 361.894 cv
683.801 361.894 679.55 365.368 679.55 365.368 cv
679.55 365.368 673.342 361.923 671.892 361.923 cv
671.863 361.923 671.836 361.924 671.811 361.927 cv
664.996 362.684 643.183 373.44 640.733 376.299 cv
639.526 376.559 638.813 376.84 638.701 377.142 cv
649.854 331.766 li
650.563 333.406 651.978 335.021 654.389 336.547 cv
654.389 336.547 674.554 338.576 683.941 338.576 cv
685.211 338.576 686.283 338.539 687.082 338.454 cv
691.176 338.022 699.271 337.845 703.521 335.188 cv
709.699 344.117 725.56 367.216 725.858 369.461 cv
726.228 372.251 723.643 378.231 723.643 378.231 cv
723.643 378.231 719.953 379.036 714.107 380.108 cv
.862745 .615686 .517647 rgb
f
690.364 316.423 mo
689.832 316.261 689.295 316.108 688.752 315.964 cv
689.155 313.923 689.434 311.411 689.621 308.698 cv
690.049 313.099 690.342 316.194 690.364 316.423 cv
.890196 .658823 .552941 rgb
f
760.208 251.186 mo
760.692 252.382 748.812 274.817 748.812 275.892 cv
748.812 276.968 735.046 260.818 735.046 260.818 cv
735.046 260.818 722.014 254.549 713.202 257.181 cv
704.389 259.814 693.783 266.758 693.783 266.758 cv
693.783 266.758 696.331 248.4 702.353 243.216 cv
708.376 238.032 756.551 242.152 760.208 251.186 cv
.909804 .690196 .592157 rgb
f
676.013 396.821 mo
651.825 396.82 638.389 379.632 638.688 377.198 cv
638.688 377.198 li
641.447 383.388 652.502 385.409 665.775 385.409 cv
666.496 385.409 667.224 385.403 667.958 385.392 cv
670.427 385.792 672.861 386.031 675.157 386.031 cv
675.479 386.031 675.796 386.026 676.113 386.017 cv
683.642 385.789 691.376 384.835 699.098 382.577 cv
704.814 381.747 709.994 380.862 714.107 380.108 cv
707.964 386.795 696.326 395.976 678.292 396.771 cv
677.521 396.805 676.764 396.822 676.013 396.821 cv
638.688 377.198 mo
638.69 377.179 638.695 377.161 638.701 377.142 cv
638.688 377.198 li
.756863 .529412 .435294 rgb
f
665.775 385.409 mo
652.502 385.409 641.447 383.388 638.688 377.198 cv
638.688 377.198 li
638.701 377.142 li
638.813 376.84 639.526 376.559 640.733 376.299 cv
640.399 376.689 640.424 376.932 640.895 376.983 cv
640.895 376.983 li
640.895 376.983 li
640.895 376.983 li
640.906 376.984 640.917 376.986 640.929 376.987 cv
641.924 377.155 655.403 383.357 667.958 385.392 cv
667.224 385.403 666.496 385.409 665.775 385.409 cv
699.098 382.577 mo
705.935 380.577 712.764 377.556 719.43 373.111 cv
719.43 373.111 717.718 376.179 714.107 380.108 cv
709.994 380.862 704.814 381.747 699.098 382.577 cv
.752941 .52549 .431373 rgb
f
736.928 242.494 mo
736.928 242.494 735.331 264.606 730.394 264.027 cv
725.456 263.447 734.343 269.489 734.343 269.489 cv
751.554 275.892 li
750.002 268.624 li
748.719 262.613 745.96 257.017 741.974 252.339 cv
736.928 242.494 li
.768627 .568627 .478431 rgb
f
766.189 207.138 mo
765.637 208.296 767.22 225.562 766.189 226.853 cv
765.159 228.143 748.53 272.758 748.53 272.758 cv
759.53 281.108 li
764.811 285.116 768.25 291.086 769.068 297.665 cv
769.864 304.052 767.837 310.47 763.519 315.243 cv
762.232 317.513 li
762.232 317.513 764.29 334.085 760.208 337.682 cv
756.125 341.279 748.812 345.503 748.812 345.503 cv
748.812 345.503 756.125 349.616 750.963 370.397 cv
745.801 391.179 735.046 397.016 735.046 397.016 cv
735.046 397.016 726.84 416.793 725.152 419.57 cv
724.317 420.946 705.05 452.323 684.716 453.434 cv
663.989 454.566 640.998 425.96 635.08 425.635 cv
619.8 424.798 595.24 387.324 594.81 373.335 cv
594.38 359.346 590.508 312.587 591.799 305.209 cv
592.928 298.755 595.786 284.633 596.483 281.198 cv
596.59 280.672 596.714 280.164 596.86 279.647 cv
597.931 275.858 602.616 259.549 604.704 256.758 cv
606.126 254.857 608.549 251.883 617.179 247.796 cv
625.809 243.709 639.115 240.533 639.115 240.533 cv
639.115 240.533 629.52 236.308 618.467 236.747 cv
607.415 237.185 590.943 242.664 590.943 242.664 cv
590.943 242.664 589.228 218.826 590.943 207.138 cv
592.659 195.45 609.006 160.606 612.877 156.734 cv
616.749 152.863 614.657 144.34 614.657 144.34 cv
577.603 148.991 li
578.134 328.043 li
578.134 328.043 582 386.031 597.478 406.678 cv
610.45 423.981 647.721 448.31 660.196 450.932 cv
672.671 453.554 707.341 453.142 728.291 437.001 cv
749.242 420.861 779.354 386.031 779.354 386.031 cv
781.121 295.834 li
796.561 270.73 li
795.167 212.431 775.168 188.315 766.189 207.138 cv
.776471 .545098 .443137 rgb
f
704.934 326.392 mo
704.934 326.392 li
703.023 322.938 699.685 320.332 695.613 318.416 cv
696.331 310.842 li
696.331 310.842 697.968 313.203 699.947 316.556 cv
701.626 319.4 703.552 322.958 704.934 326.392 cv
704.934 326.392 li
.905882 .682353 .580392 rgb
f
679.36 324.792 mo
683.059 323.108 686.012 320.757 687.923 318.978 cv
687.672 319.611 687.393 320.117 687.082 320.469 cv
684.565 323.322 682.234 324.457 679.36 324.792 cv
658.03 316.134 mo
657.937 315.967 657.847 315.798 657.76 315.628 cv
657.848 315.595 657.936 315.563 658.029 315.531 cv
658.029 315.742 658.029 315.943 658.03 316.134 cv
.898039 .670588 .560784 rgb
f
677.15 324.908 mo
675.37 324.908 673.365 324.728 671.006 324.529 cv
665.455 324.06 660.642 320.831 658.03 316.134 cv
658.029 315.943 658.029 315.742 658.029 315.531 cv
660.919 314.523 665.881 313.865 671.563 313.865 cv
677.029 313.865 683.161 314.474 688.752 315.964 cv
688.519 317.144 688.245 318.166 687.923 318.978 cv
686.012 320.757 683.059 323.108 679.36 324.792 cv
678.659 324.874 677.926 324.908 677.15 324.908 cv
.890196 .658823 .552941 rgb
f
703.521 335.188 mo
703.023 334.469 702.589 333.843 702.23 333.326 cv
704.558 331.654 706.151 329.416 704.934 326.392 cv
707.373 330.8 706.227 333.497 703.521 335.188 cv
649.854 331.766 mo
647.462 326.239 653.087 320.446 655.578 316.974 cv
655.928 316.485 656.682 316.031 657.76 315.628 cv
657.847 315.798 657.937 315.967 658.03 316.134 cv
658.033 317.603 658.04 318.451 658.04 318.451 cv
661.155 322.569 667.875 326.58 672.913 326.58 cv
673.531 326.58 674.123 326.52 674.68 326.392 cv
676.343 326.011 677.909 325.453 679.36 324.792 cv
682.234 324.457 684.565 323.322 687.082 320.469 cv
687.393 320.117 687.672 319.611 687.923 318.978 cv
689.497 317.513 690.365 316.436 690.365 316.436 cv
690.365 316.436 690.365 316.432 690.364 316.423 cv
692.203 316.981 693.969 317.643 695.613 318.416 cv
694.356 331.693 li
649.872 331.693 li
649.854 331.766 li
.905882 .682353 .580392 rgb
f
683.941 338.576 mo
674.554 338.576 654.389 336.547 654.389 336.547 cv
651.978 335.021 650.563 333.406 649.854 331.766 cv
649.872 331.693 li
694.356 331.693 li
693.786 337.708 li
693.783 337.721 693.782 337.734 693.783 337.746 cv
693.786 337.708 li
693.94 336.988 698.857 335.75 702.23 333.326 cv
702.589 333.843 703.023 334.469 703.521 335.188 cv
699.271 337.845 691.176 338.022 687.082 338.454 cv
686.283 338.539 685.211 338.576 683.941 338.576 cv
.890196 .658823 .560784 rgb
f
672.913 326.58 mo
667.875 326.58 661.155 322.569 658.04 318.451 cv
658.04 318.451 658.033 317.603 658.03 316.134 cv
660.642 320.831 665.455 324.06 671.006 324.529 cv
673.365 324.728 675.37 324.908 677.15 324.908 cv
677.926 324.908 678.659 324.874 679.36 324.792 cv
677.909 325.453 676.343 326.011 674.68 326.392 cv
674.123 326.52 673.531 326.58 672.913 326.58 cv
687.923 318.978 mo
688.245 318.166 688.519 317.144 688.752 315.964 cv
689.295 316.108 689.832 316.261 690.364 316.423 cv
690.365 316.432 690.365 316.436 690.365 316.436 cv
690.365 316.436 689.497 317.513 687.923 318.978 cv
.901961 .678431 .576471 rgb
f
693.783 337.746 mo
693.782 337.734 693.783 337.721 693.786 337.708 cv
693.783 337.746 li
.901961 .678431 .580392 rgb
f
702.23 333.326 mo
701.509 332.287 701.094 331.693 701.094 331.693 cv
694.356 331.693 li
695.613 318.416 li
699.685 320.332 703.023 322.938 704.934 326.392 cv
704.934 326.392 li
706.151 329.416 704.558 331.654 702.23 333.326 cv
.909804 .686274 .588235 rgb
f
693.786 337.708 mo
694.356 331.693 li
701.094 331.693 li
701.094 331.693 701.509 332.287 702.23 333.326 cv
698.857 335.75 693.94 336.988 693.786 337.708 cv
.901961 .678431 .580392 rgb
f
591.588 162.919 mo
590.277 165.421 592.354 181.684 588.42 192.869 cv
584.486 204.053 581.905 240.533 581.905 240.533 cv
581.905 240.533 579.026 245.966 579.754 254.814 cv
580.642 265.606 580.42 280.586 580.184 285.786 cv
579.754 295.25 582.765 304.284 582.335 308.586 cv
581.905 312.887 586.206 349.022 586.206 349.022 cv
586.206 349.022 588.796 371.821 591.588 381.285 cv
594.38 390.749 604.704 404.084 604.704 404.084 cv
614.657 415.268 li
619.518 418.608 li
629.38 434.844 li
628.672 435.555 595.669 415.165 588.088 391.179 cv
580.727 367.889 577.603 326.58 577.603 326.58 cv
577.603 326.58 566.418 245.017 565.988 240.533 cv
565.558 236.049 566.8 210.693 568.139 207.065 cv
569.479 203.436 591.588 162.919 591.588 162.919 cv
cp
.52549 .368627 .313726 rgb
f
794.361 272.758 mo
797.34 270.619 810.327 256.627 813.338 260.883 cv
816.349 265.138 821.081 276.877 816.779 294.452 cv
812.478 312.027 806.455 323.551 804.734 326.392 cv
803.014 329.234 801.624 341.553 794.361 345.503 cv
787.097 349.452 782.796 352.033 781.935 349.022 cv
781.075 346.011 780.645 316.759 781.935 309.016 cv
783.226 301.273 792.219 274.295 794.361 272.758 cv
cp
.835294 .494118 .392157 rgb
f
710.936 560 mo
717.964 551.622 728.291 537.868 728.291 537.868 cv
705.353 503.884 li
705.353 503.884 694.825 502.164 687.727 502.164 cv
680.629 502.164 660.196 533.136 660.196 533.136 cv
675.496 560 li
710.936 560 li
cp
.188235 .188235 .188235 rgb
f
591.588 162.919 mo
584.891 175.703 li
578.804 186.051 li
585.196 193.965 li
578.804 207.966 li
576.369 213.444 li
576.369 213.444 570.891 219.531 569.064 221.967 cv
567.238 224.401 569.673 232.315 569.064 235.967 cv
568.456 239.62 574.543 277.97 574.543 277.97 cv
576.369 310.842 li
576.369 310.842 566.021 287.101 563.586 280.405 cv
561.151 273.709 560.542 234.141 560.542 234.141 cv
560.542 234.141 547.759 200.052 547.759 198.226 cv
547.759 196.4 547.759 190.921 547.759 190.921 cv
539.236 193.356 li
539.236 193.356 549.585 180.572 552.02 176.92 cv
554.455 173.268 558.107 162.919 558.107 162.919 cv
558.107 162.919 569.673 153.788 570.282 151.962 cv
570.891 150.136 575.76 135.526 575.76 135.526 cv
587.326 123.351 li
587.326 123.351 590.37 110.568 594.631 109.35 cv
598.892 108.133 603.154 96.5669 605.589 94.7407 cv
608.023 92.9145 605.589 100.219 605.589 100.219 cv
612.893 94.4476 li
612.893 94.4476 620.198 88.6533 624.459 85.0009 cv
628.72 81.3485 640.286 81.9572 643.939 81.9572 cv
647.591 81.9572 668.897 80.0549 678.637 81.9192 cv
678.637 81.9192 668.897 71.6087 670.723 74.0437 cv
672.549 76.4786 686.55 80.131 686.55 80.131 cv
686.55 71 li
697.508 77.0874 li
724.292 83.7835 li
729.771 75.2612 li
740.728 85.0009 li
752.294 77.0874 li
755.338 95.9582 li
755.338 95.9582 766.295 111.785 765.686 113.612 cv
765.077 115.438 765.711 127.612 765.711 127.612 cv
765.711 127.612 783.339 132.482 787.601 141.005 cv
791.862 149.527 808.298 170.833 811.95 176.311 cv
815.602 181.79 819.864 195.182 819.864 195.182 cv
811.341 195.182 li
819.864 215.879 li
814.385 229.88 li
814.66 263.083 li
810.838 261.787 li
810.838 261.787 809.431 264.932 810.04 266.758 cv
810.649 268.584 805.254 268.23 805.254 268.23 cv
804.645 271.274 li
800.384 276.144 li
799.306 270.394 li
796.123 279.796 li
783.339 253.012 li
783.339 253.012 789.427 232.315 783.339 226.228 cv
777.252 220.14 765.686 211.009 765.686 211.009 cv
765.686 211.009 769.947 180.572 767.512 172.05 cv
765.077 163.528 760.207 149.527 745.598 143.44 cv
730.988 137.352 710.291 134.309 710.291 134.309 cv
699.943 143.44 li
695.073 130.047 li
687.159 133.7 661.592 134.917 661.592 134.917 cv
645.765 141.005 li
633.59 148.918 li
633.59 148.918 631.764 136.135 628.112 137.961 cv
624.459 139.787 614.72 143.44 612.285 145.266 cv
609.85 147.092 598.284 161.093 591.588 162.919 cv
cp
.270588 .235294 .203922 rgb
f
656.325 326.653 mo
656.325 326.653 659.766 323.642 662.777 326.653 cv
663.959 327.835 665.411 329.602 666.815 331.344 cv
668.987 334.038 671.044 336.67 671.811 336.977 cv
673.398 337.612 675.905 338.246 677.981 337.154 cv
678.718 336.765 679.401 336.159 679.969 335.256 cv
682.135 331.815 684.286 326.127 687.297 325.315 cv
690.308 324.502 694.18 324.932 693.75 327.083 cv
693.32 329.234 692.459 330.433 688.588 331.339 cv
684.716 332.245 682.488 334.396 682.488 334.396 cv
677.703 337.786 li
676.71 338.49 675.43 338.649 674.294 338.21 cv
666.649 335.256 li
658.045 331.339 li
658.045 331.339 653.935 327.856 656.325 326.653 cv
cp
.2 .129412 .0980392 rgb
f
760.207 342.139 mo
760.207 342.139 760.079 342.932 759.854 344.321 cv
759.609 345.705 759.298 347.691 758.854 350.059 cv
758.406 352.426 757.926 355.197 757.334 358.149 cv
756.765 361.104 756.074 364.265 755.284 367.382 cv
754.461 370.494 753.565 373.587 752.653 376.466 cv
752.202 377.907 751.714 379.283 751.234 380.582 cv
750.744 381.878 750.284 383.104 749.801 384.215 cv
749.353 385.337 748.849 386.331 748.419 387.213 cv
747.941 388.076 747.556 388.841 747.147 389.422 cv
746.952 389.717 746.79 389.987 746.624 390.205 cv
746.447 390.415 746.296 390.593 746.173 390.738 cv
745.93 391.026 745.801 391.179 745.801 391.179 cv
745.801 391.179 745.916 391.014 746.131 390.704 cv
746.238 390.55 746.37 390.361 746.525 390.138 cv
746.666 389.906 746.807 389.625 746.98 389.321 cv
747.342 388.723 747.671 387.935 748.083 387.055 cv
748.444 386.148 748.87 385.136 749.278 384.007 cv
749.708 382.887 750.114 381.65 750.545 380.344 cv
750.952 379.029 751.381 377.643 751.825 376.209 cv
752.692 373.333 753.537 370.241 754.317 367.133 cv
755.148 364.033 755.874 360.926 756.486 357.975 cv
757.115 355.03 757.776 352.297 758.305 349.946 cv
758.837 347.596 759.34 345.65 759.665 344.282 cv
760.01 342.918 760.207 342.139 760.207 342.139 cv
cp
.47451 .364706 .294118 rgb
f
611.134 341.172 mo
611.134 341.172 611.331 341.951 611.677 343.315 cv
612.001 344.683 612.504 346.629 613.037 348.979 cv
613.566 351.329 614.226 354.063 614.856 357.008 cv
615.468 359.959 616.193 363.066 617.025 366.166 cv
617.805 369.274 618.65 372.366 619.517 375.242 cv
619.961 376.676 620.39 378.062 620.797 379.377 cv
621.228 380.683 621.633 381.92 622.063 383.04 cv
622.471 384.169 622.898 385.181 623.259 386.088 cv
623.67 386.968 624 387.756 624.361 388.354 cv
624.534 388.658 624.675 388.939 624.816 389.171 cv
624.971 389.394 625.103 389.583 625.21 389.737 cv
625.426 390.047 625.541 390.212 625.541 390.212 cv
625.541 390.212 625.411 390.059 625.168 389.771 cv
625.046 389.626 624.895 389.448 624.717 389.238 cv
624.552 389.02 624.389 388.75 624.195 388.455 cv
623.786 387.874 623.401 387.109 622.922 386.246 cv
622.492 385.363 621.988 384.371 621.54 383.247 cv
621.058 382.137 620.598 380.911 620.107 379.616 cv
619.627 378.316 619.139 376.94 618.688 375.499 cv
617.777 372.62 616.881 369.527 616.057 366.415 cv
615.268 363.298 614.576 360.137 614.007 357.182 cv
613.415 354.23 612.936 351.459 612.488 349.092 cv
612.044 346.724 611.732 344.738 611.487 343.354 cv
611.262 341.966 611.134 341.172 611.134 341.172 cv
cp
f
604.704 367.949 mo
604.704 366.589 617.76 399.229 620.19 402.363 cv
625.073 408.663 627.749 414.275 630.944 417.419 cv
634.881 421.293 640.895 424.302 640.895 424.302 cv
640.895 424.302 654.496 441.699 662.777 444.52 cv
670.208 447.052 698.051 450.113 710.526 438.068 cv
723.001 426.023 725.152 420.861 725.152 420.861 cv
738.918 414.838 li
753.004 392.469 li
753.004 392.469 770.751 384.726 773.332 376.553 cv
775.913 368.38 778.064 339.037 778.064 339.037 cv
776.343 299.982 li
788.388 281.915 li
790.381 269.057 li
796.838 277.155 li
796.838 277.155 783.686 307.469 782.989 312.132 cv
782.292 316.796 781.764 377.502 779.354 386.031 cv
778.15 390.295 772.057 399.843 763.408 409.676 cv
754.759 419.509 744.331 425.87 740.68 428.499 cv
733.378 433.757 716.142 452.019 689.007 452.995 cv
677.773 453.74 li
666.344 454.908 661.201 453.005 650.637 448.491 cv
644.926 446.051 638.94 443.058 634.423 439.736 cv
625.304 433.028 617.106 415.681 613.695 407.736 cv
612.62 405.232 611.796 402.643 611.22 399.98 cv
609.325 391.211 604.704 369.659 604.704 367.949 cv
cp
.647059 .435294 .34902 rgb
f
604.704 279.334 mo
604.704 279.334 605.2 279.591 606.094 279.972 cv
606.534 280.176 607.089 280.382 607.714 280.635 cv
608.355 280.849 609.06 281.134 609.853 281.377 cv
610.637 281.647 611.499 281.894 612.418 282.125 cv
613.328 282.392 614.322 282.528 615.322 282.773 cv
616.344 282.909 617.388 283.129 618.466 283.207 cv
619.541 283.309 620.633 283.416 621.731 283.389 cv
622.278 283.39 622.827 283.428 623.372 283.402 cv
623.916 283.364 624.458 283.326 624.996 283.289 cv
626.077 283.255 627.12 283.046 628.137 282.897 cv
629.163 282.779 630.113 282.474 631.036 282.268 cv
631.492 282.146 631.949 282.066 632.369 281.92 cv
632.788 281.768 633.193 281.622 633.581 281.482 cv
634.349 281.18 635.094 280.987 635.704 280.701 cv
636.316 280.416 636.85 280.168 637.289 279.963 cv
638.179 279.563 638.688 279.334 638.688 279.334 cv
638.688 279.334 638.213 279.625 637.381 280.134 cv
636.961 280.385 636.449 280.689 635.863 281.038 cv
635.277 281.392 634.553 281.662 633.785 282.007 cv
633.398 282.174 632.995 282.348 632.577 282.528 cv
632.158 282.704 631.699 282.815 631.241 282.968 cv
630.313 283.237 629.354 283.619 628.303 283.761 cv
627.261 283.941 626.194 284.213 625.08 284.251 cv
624.526 284.295 623.967 284.34 623.406 284.384 cv
622.845 284.416 622.28 284.386 621.716 284.389 cv
620.585 284.403 619.462 284.283 618.358 284.166 cv
617.25 284.08 616.188 283.8 615.147 283.634 cv
614.126 283.365 613.128 283.149 612.217 282.823 cv
611.297 282.531 610.438 282.226 609.661 281.904 cv
608.869 281.619 608.185 281.256 607.565 280.974 cv
606.961 280.655 606.428 280.395 606.007 280.145 cv
605.154 279.666 604.704 279.334 604.704 279.334 cv
cp
.74902 .52549 .411765 rgb
f
700.771 276.753 mo
700.771 276.753 700.929 276.813 701.225 276.927 cv
701.522 277.038 701.955 277.208 702.498 277.45 cv
703.582 277.92 705.132 278.591 706.991 279.397 cv
707.926 279.781 708.935 280.205 710.025 280.584 cv
711.107 280.989 712.27 281.345 713.47 281.705 cv
714.076 281.863 714.685 282.054 715.314 282.192 cv
715.943 282.325 716.579 282.459 717.221 282.595 cv
717.868 282.689 718.521 282.784 719.176 282.879 cv
719.833 282.939 720.495 282.964 721.155 283.009 cv
722.476 283.03 723.799 282.988 725.075 282.759 cv
725.725 282.702 726.334 282.494 726.95 282.341 cv
727.256 282.259 727.561 282.177 727.863 282.096 cv
728.151 281.975 728.438 281.855 728.722 281.736 cv
729.86 281.296 730.96 280.713 732.004 280.21 cv
733.048 279.699 734.035 279.216 734.946 278.77 cv
736.764 277.871 738.308 277.177 739.376 276.666 cv
740.453 276.174 741.069 275.892 741.069 275.892 cv
741.069 275.892 740.486 276.236 739.466 276.839 cv
738.436 277.421 736.983 278.291 735.206 279.268 cv
734.319 279.76 733.358 280.293 732.342 280.857 cv
731.318 281.414 730.285 282.047 729.065 282.546 cv
728.768 282.68 728.468 282.814 728.166 282.949 cv
727.849 283.044 727.53 283.139 727.21 283.235 cv
726.566 283.418 725.92 283.646 725.238 283.71 cv
723.892 283.963 722.505 284.021 721.125 284.008 cv
720.437 283.956 719.747 283.923 719.065 283.854 cv
718.388 283.75 717.714 283.646 717.045 283.543 cv
715.722 283.268 714.435 282.939 713.215 282.545 cv
711.995 282.159 710.835 281.724 709.761 281.261 cv
708.677 280.821 707.681 280.342 706.761 279.908 cv
704.922 279.032 703.461 278.172 702.414 277.625 cv
701.38 277.052 700.771 276.753 700.771 276.753 cv
cp
f
693.783 248.361 mo
693.783 248.361 684.716 265.138 684.716 275.892 cv
684.716 286.647 689.911 307.076 689.249 310.842 cv
688.588 314.608 684.716 321.921 684.716 321.921 cv
684.716 324.931 li
684.716 324.931 692.126 318.447 694.244 319.085 cv
696.362 319.723 704.934 326.392 704.934 326.392 cv
704.934 326.392 703.457 323.01 700.771 317.977 cv
699.052 314.757 696.347 310.768 694.825 306.865 cv
693.09 302.415 688.588 284.066 688.588 275.892 cv
688.588 267.719 693.783 248.361 693.783 248.361 cv
cp
.729412 .427451 .345098 rgb
f
697.621 262.557 mo
697.621 262.557 698.282 262.374 699.346 261.862 cv
700.427 261.377 701.92 260.564 703.794 259.747 cv
704.726 259.33 705.75 258.903 706.848 258.484 cv
707.944 258.058 709.127 257.678 710.367 257.332 cv
710.992 257.181 711.626 257.013 712.274 256.873 cv
712.929 256.76 713.586 256.61 714.26 256.534 cv
715.605 256.361 716.986 256.226 718.37 256.28 cv
719.408 256.306 li
720.434 256.4 li
721.103 256.449 721.782 256.543 722.458 256.655 cv
723.807 256.866 725.095 257.168 726.339 257.499 cv
728.817 258.182 731.05 259.051 732.924 259.869 cv
736.663 261.542 738.918 263.083 738.918 263.083 cv
738.918 263.083 738.316 262.767 737.24 262.267 cv
736.703 262.016 736.047 261.72 735.288 261.396 cv
734.528 261.074 733.66 260.741 732.718 260.37 cv
730.827 259.643 728.577 258.911 726.125 258.331 cv
724.904 258.037 723.62 257.77 722.326 257.6 cv
721.683 257.501 721.028 257.413 720.347 257.368 cv
719.351 257.286 li
718.354 257.27 li
717.026 257.242 715.693 257.336 714.39 257.498 cv
713.087 257.667 711.815 257.922 710.59 258.202 cv
708.151 258.813 705.906 259.552 704.015 260.283 cv
702.126 261.021 700.541 261.637 699.423 262.049 cv
698.867 262.259 698.405 262.385 698.1 262.46 cv
697.788 262.523 697.621 262.557 697.621 262.557 cv
cp
.670588 .439216 .321569 rgb
f
604.704 269.87 mo
604.704 269.87 604.827 269.717 605.058 269.432 cv
605.284 269.144 605.601 268.708 606.048 268.185 cv
606.493 267.663 607.042 267.029 607.74 266.368 cv
608.422 265.69 609.256 264.988 610.219 264.293 cv
610.7 263.944 611.231 263.626 611.766 263.271 cv
612.326 262.96 612.902 262.629 613.508 262.317 cv
614.131 262.042 614.756 261.718 615.425 261.462 cv
616.099 261.221 616.78 260.941 617.5 260.75 cv
618.929 260.328 620.437 260.015 621.981 259.783 cv
622.757 259.697 623.539 259.611 624.324 259.525 cv
625.113 259.494 625.904 259.463 626.696 259.433 cv
628.303 259.461 629.825 259.501 631.401 259.697 cv
631.79 259.738 632.177 259.779 632.563 259.82 cv
632.944 259.884 633.323 259.948 633.699 260.011 cv
634.453 260.133 635.197 260.257 635.916 260.443 cv
637.367 260.751 638.74 261.185 640.013 261.658 cv
641.289 262.124 642.467 262.642 643.52 263.183 cv
644.581 263.707 645.514 264.268 646.306 264.811 cv
647.109 265.337 647.77 265.852 648.302 266.287 cv
649.364 267.164 649.872 267.767 649.872 267.767 cv
649.872 267.767 649.3 267.227 648.184 266.442 cv
647.626 266.049 646.938 265.588 646.11 265.127 cv
645.702 264.885 645.257 264.648 644.78 264.415 cv
644.312 264.166 643.808 263.927 643.276 263.69 cv
642.22 263.205 641.043 262.748 639.774 262.347 cv
639.148 262.122 638.482 261.964 637.808 261.782 cv
637.137 261.59 636.439 261.442 635.73 261.29 cv
635.026 261.119 634.296 261.008 633.558 260.9 cv
633.189 260.843 632.818 260.786 632.445 260.729 cv
632.071 260.695 631.696 260.661 631.318 260.627 cv
629.834 260.457 628.221 260.44 626.702 260.431 cv
625.93 260.45 625.158 260.469 624.388 260.488 cv
623.623 260.561 622.861 260.634 622.105 260.706 cv
620.601 260.91 619.132 261.192 617.741 261.582 cv
616.352 261.98 615.036 262.448 613.818 262.974 cv
613.217 263.251 612.644 263.548 612.085 263.826 cv
611.551 264.149 611.018 264.436 610.535 264.756 cv
609.573 265.402 608.707 266.026 607.989 266.643 cv
607.256 267.243 606.669 267.829 606.191 268.315 cv
605.72 268.812 605.35 269.202 605.098 269.468 cv
604.841 269.73 604.704 269.87 604.704 269.87 cv
f
631.374 296.971 mo
631.374 296.971 632.626 295.897 634.574 294.451 cv
635.544 293.719 636.684 292.889 637.915 292.019 cv
639.144 291.152 640.454 290.227 641.764 289.303 cv
642.43 288.858 643.086 288.401 643.722 287.939 cv
644.364 287.486 644.995 287.039 645.607 286.608 cv
646.214 286.17 646.8 285.747 647.356 285.346 cv
647.918 284.948 648.417 284.542 648.904 284.188 cv
649.394 283.831 649.798 283.484 650.184 283.183 cv
650.565 282.883 650.908 282.614 651.166 282.364 cv
651.702 281.888 652.023 281.628 652.023 281.628 cv
652.023 281.628 651.832 281.993 651.473 282.613 cv
651.302 282.927 651.066 283.292 650.752 283.69 cv
650.448 284.092 650.112 284.577 649.689 285.019 cv
649.275 285.475 648.844 286.001 648.324 286.475 cv
647.815 286.962 647.293 287.504 646.697 287.985 cv
646.109 288.48 645.519 289.017 644.869 289.49 cv
644.231 289.982 643.575 290.468 642.909 290.941 cv
642.239 291.407 641.553 291.847 640.881 292.285 cv
640.218 292.738 639.517 293.105 638.865 293.503 cv
637.542 294.265 636.276 294.921 635.165 295.435 cv
632.954 296.484 631.374 296.971 631.374 296.971 cv
.772549 .647059 .560784 rgb
f
695.691 280.484 mo
695.626 280.417 695.561 280.35 695.496 280.284 cv
694.78 279.546 694.145 278.822 693.63 278.172 cv
692.586 276.887 692.029 275.892 692.029 275.892 cv
692.029 275.892 693.047 276.402 694.405 277.332 cv
695.091 277.789 695.865 278.35 696.669 278.976 cv
697.269 279.437 697.886 279.932 698.5 280.445 cv
698.17 280.437 697.849 280.434 697.538 280.434 cv
696.883 280.434 696.267 280.451 695.691 280.484 cv
f
705.354 287.094 mo
705.354 287.094 705.083 287.015 704.619 286.844 cv
704.153 286.676 703.514 286.388 702.781 285.988 cv
702.043 285.595 701.218 285.084 700.376 284.485 cv
699.961 284.179 699.514 283.884 699.097 283.54 cv
698.668 283.21 698.249 282.856 697.832 282.5 cv
697.074 281.85 696.353 281.161 695.691 280.484 cv
696.267 280.451 696.883 280.434 697.538 280.434 cv
697.849 280.434 698.17 280.437 698.5 280.445 cv
698.713 280.624 698.926 280.805 699.138 280.987 cv
699.956 281.695 700.755 282.421 701.49 283.121 cv
702.229 283.816 702.903 284.482 703.471 285.071 cv
704.047 285.647 704.507 286.164 704.841 286.514 cv
705.171 286.871 705.354 287.094 705.354 287.094 cv
.780392 .658823 .576471 rgb
f
610.296 272.451 mo
610.296 272.451 620.62 277.613 631.374 275.892 cv
642.129 274.172 646.861 272.451 646.861 272.451 cv
646.861 272.451 635.971 263.562 627.073 264.181 cv
618.175 264.8 610.296 272.451 610.296 272.451 cv
.937255 .937255 .937255 rgb
f
757.656 248.489 mo
753.329 245.65 744.488 243.497 735.087 242.232 cv
734.418 241.368 733.85 240.772 733.423 240.533 cv
741.851 240.526 li
757.704 248.361 li
757.688 248.404 757.672 248.447 757.656 248.489 cv
.654902 .458824 .345098 rgb
f
750.002 268.624 mo
750.002 268.624 li
748.719 262.613 745.96 257.017 741.974 252.339 cv
736.928 242.494 li
736.928 242.494 736.87 243.293 736.743 244.584 cv
736.146 243.676 735.588 242.879 735.087 242.232 cv
744.488 243.497 753.329 245.65 757.656 248.489 cv
757.569 248.717 757.483 248.945 757.396 249.173 cv
750.002 268.624 li
.662745 .470588 .360784 rgb
f
750.002 268.624 mo
750.002 268.624 741.901 252.432 736.743 244.584 cv
736.87 243.293 736.928 242.494 736.928 242.494 cv
741.974 252.339 li
745.96 257.017 748.719 262.613 750.002 268.624 cv
750.002 268.624 li
.631373 .443137 .337255 rgb
f
757.396 249.173 mo
757.483 248.945 757.569 248.717 757.656 248.489 cv
757.672 248.447 757.688 248.404 757.704 248.361 cv
757.705 248.361 li
757.396 249.173 li
.631373 .439216 .329412 rgb
f
701.095 267.204 mo
701.095 267.204 710.697 273.741 719.43 272.451 cv
728.164 271.16 735.046 267.767 735.046 267.767 cv
735.046 267.767 724.086 259.196 715.689 261.181 cv
707.291 263.166 701.095 267.204 701.095 267.204 cv
cp
.937255 .937255 .937255 rgb
f
634.816 266.758 mo
634.816 266.758 636.498 275.548 631.375 275.892 cv
628.292 276.099 624.399 276.856 621.696 274.817 cv
619.905 273.467 618.638 270.489 618.467 266.758 cv
618.467 266.758 630.514 262.356 634.816 266.758 cv
cp
.266667 .301961 .337255 rgb
f
713.538 263.083 mo
713.538 263.083 711.947 272.451 715.689 272.451 cv
719.43 272.451 721.924 274.343 725.858 271.436 cv
727.384 270.308 727.65 268.002 727.565 266.098 cv
727.487 264.316 726.214 262.823 724.462 262.485 cv
721.023 261.822 715.303 261.089 713.538 263.083 cv
cp
f
612.877 140.818 mo
610.452 143.143 603.844 159.315 603.844 159.315 cv
612.877 156.734 li
612.877 162.919 li
626.774 151.868 li
631.375 155.444 li
638.688 151.868 li
646.785 147.701 li
646 153.293 li
646 153.293 654.098 148.561 655.211 145.98 cv
656.325 143.399 660.196 140.818 660.196 140.818 cv
655.578 149.421 li
652.023 156.734 li
663.638 145.55 li
674.68 140.818 li
663.638 149.421 li
679.061 142.969 li
684.716 145.55 li
693.783 147.701 li
698.691 160.176 li
707.515 142.969 li
718.7 140.818 li
741.851 141.185 li
724.654 129.742 li
721.992 126.904 718.624 124.839 714.886 123.759 cv
706.993 121.48 692.102 118.269 674.68 119.891 cv
648.128 122.363 628.578 125.762 612.877 140.818 cv
cp
.337255 .301961 .278431 rgb
f
809.466 272.758 mo
809.466 272.758 809.556 273.526 809.713 274.87 cv
809.87 276.212 810.096 278.129 810.308 280.435 cv
810.53 282.741 810.739 285.436 810.872 288.334 cv
811.009 291.235 811.072 294.327 810.896 297.47 cv
810.855 298.252 810.754 299.049 810.654 299.843 cv
810.414 301.066 li
810.134 302.171 li
809.777 303.64 809.353 305.096 808.92 306.494 cv
808.49 307.895 807.998 309.232 807.45 310.472 cv
806.93 311.72 806.31 312.855 805.683 313.863 cv
805.038 314.863 804.381 315.742 803.686 316.422 cv
803.354 316.774 803.031 317.09 802.688 317.336 cv
802.361 317.598 802.066 317.839 801.756 318.002 cv
801.458 318.178 801.199 318.342 800.962 318.461 cv
800.713 318.558 800.502 318.641 800.331 318.708 cv
799.993 318.84 799.813 318.91 799.813 318.91 cv
799.813 318.91 799.976 318.806 800.283 318.61 cv
800.434 318.514 800.62 318.395 800.839 318.256 cv
801.036 318.089 801.264 317.897 801.518 317.683 cv
801.783 317.486 802.026 317.208 802.292 316.913 cv
802.425 316.767 802.563 316.615 802.706 316.457 cv
802.834 316.286 802.967 316.108 803.104 315.924 cv
803.663 315.204 804.166 314.295 804.683 313.3 cv
805.673 311.276 806.513 308.764 807.228 306.007 cv
807.602 304.63 807.9 303.187 808.259 301.708 cv
808.523 300.595 li
808.709 299.56 li
808.788 298.829 808.869 298.096 808.902 297.338 cv
809.016 295.836 809.048 294.306 809.073 292.803 cv
809.088 291.294 809.102 289.809 809.116 288.371 cv
809.126 285.491 809.13 282.795 809.166 280.482 cv
809.189 278.168 809.252 276.236 809.317 274.883 cv
809.384 273.526 809.466 272.758 809.466 272.758 cv
cp
.52549 .368627 .313726 rgb
f
791.365 307.278 mo
791.126 307.758 790.726 308.666 790.238 309.805 cv
788.78 313.206 786.603 318.528 786.602 318.531 cv
788.396 319.406 li
788.427 319.353 li
788.591 319.071 789.406 317.716 790.433 316.478 cv
790.944 315.859 791.511 315.272 792.038 314.871 cv
792.565 314.462 793.038 314.285 793.28 314.295 cv
793.385 314.304 li
793.843 314.38 794.348 314.411 794.893 314.412 cv
796.456 314.409 798.345 314.148 799.971 313.669 cv
800.785 313.427 801.531 313.135 802.157 312.752 cv
802.471 312.559 802.757 312.343 803.004 312.074 cv
803.249 311.807 803.461 311.476 803.557 311.071 cv
801.61 310.612 li
801.616 310.614 li
801.61 310.611 li
801.61 310.612 li
801.616 310.614 li
801.61 310.611 li
801.619 310.63 801.427 310.882 800.995 311.116 cv
800.359 311.479 799.307 311.825 798.186 312.053 cv
797.064 312.285 795.862 312.412 794.893 312.412 cv
794.43 312.412 794.02 312.382 793.714 312.331 cv
793.569 312.307 793.423 312.295 793.28 312.295 cv
792.776 312.296 792.309 312.432 791.882 312.629 cv
791.135 312.979 790.48 313.519 789.872 314.121 cv
788.07 315.925 786.685 318.377 786.659 318.414 cv
787.527 318.91 li
788.453 319.288 li
788.454 319.287 788.694 318.698 789.07 317.785 cv
789.635 316.415 790.501 314.32 791.306 312.408 cv
791.708 311.453 792.095 310.543 792.42 309.795 cv
792.744 309.05 793.012 308.455 793.154 308.172 cv
791.365 307.278 li
cp
f
787.527 421.291 mo
787.527 421.291 788.603 429.827 789.95 440.044 cv
790.641 430.824 787.527 421.291 787.527 421.291 cv
cp
.964706 .956863 .905882 rgb
f
640.366 560 mo
651.562 560 li
659.261 543.593 674.113 517.596 679.969 512.057 cv
688.157 504.314 694.825 502.164 694.825 502.164 cv
694.825 502.164 732.175 545.156 734.921 560 cv
746.931 560 li
759.925 542.754 779.174 517.019 781.121 513.348 cv
784.086 507.756 796.131 475.923 795.055 474.202 cv
794.419 473.184 791.901 454.849 789.95 440.044 cv
789.552 445.349 787.898 450.55 783.656 453.77 cv
772.041 462.588 701.769 501.303 700.771 500.873 cv
699.772 500.443 660.439 478.074 646.767 469.901 cv
633.095 461.727 607.285 429.464 607.285 429.464 cv
603.844 421.291 li
603.844 421.291 605.134 450.973 603.844 456.565 cv
603.844 456.565 603.413 465.169 607.285 483.236 cv
610.115 496.446 629.92 538.395 640.366 560 cv
cp
f
595.277 287.177 mo
595.816 284.49 596.26 282.297 596.483 281.198 cv
596.59 280.672 596.714 280.164 596.86 279.647 cv
597.355 277.895 598.623 273.467 600.049 268.935 cv
601.366 268.432 602.82 267.719 604.419 266.763 cv
604.74 267.481 605.154 268.132 605.612 268.715 cv
605.384 269.004 605.202 269.248 605.058 269.432 cv
604.827 269.717 604.704 269.87 604.704 269.87 cv
604.704 269.87 604.841 269.73 605.098 269.468 cv
605.255 269.302 605.458 269.088 605.703 268.83 cv
607.636 271.223 610.296 272.451 610.296 272.451 cv
610.296 272.451 li
610.296 272.451 613.915 274.26 619.097 275.379 cv
621.696 276.244 li
621.696 276.244 621.686 276.243 621.666 276.243 cv
620.845 276.243 602.996 276.305 598.526 281.628 cv
597.19 283.218 596.135 285.199 595.277 287.177 cv
.654902 .458824 .345098 rgb
f
600.049 268.935 mo
601.688 263.73 603.536 258.389 604.663 256.814 cv
604.078 259.537 603.46 262.676 603.843 264.895 cv
603.959 265.561 604.159 266.184 604.419 266.763 cv
602.82 267.719 601.366 268.432 600.049 268.935 cv
.662745 .470588 .360784 rgb
f
591.599 295.947 mo
591.522 295.947 591.445 295.91 591.368 295.834 cv
590.078 294.543 598.526 272.758 598.526 272.758 cv
598.526 272.758 596.531 253.962 604.704 251.158 cv
604.806 251.123 604.897 251.106 604.977 251.106 cv
605.963 251.106 605.335 253.685 604.663 256.814 cv
603.536 258.389 601.688 263.73 600.049 268.935 cv
598.623 273.467 597.355 277.895 596.86 279.647 cv
596.714 280.164 596.59 280.672 596.483 281.198 cv
596.26 282.297 595.816 284.49 595.277 287.177 cv
593.371 291.572 592.444 295.947 591.599 295.947 cv
.631373 .439216 .329412 rgb
f
604.704 269.87 mo
604.704 269.87 604.827 269.717 605.058 269.432 cv
605.202 269.248 605.384 269.004 605.612 268.715 cv
605.642 268.754 605.673 268.792 605.703 268.83 cv
605.458 269.088 605.255 269.302 605.098 269.468 cv
604.841 269.73 604.704 269.87 604.704 269.87 cv
.607843 .415686 .301961 rgb
f
619.097 275.379 mo
613.915 274.26 610.296 272.451 610.296 272.451 cv
619.097 275.379 li
.666667 .52549 .439216 rgb
f
699.943 267.767 mo
699.943 267.767 710.957 261.888 722.141 263.083 cv
733.326 264.278 735.046 267.767 735.046 267.767 cv
735.046 267.767 728.334 260.406 719.43 260.836 cv
710.526 261.267 702.264 264.373 699.943 267.767 cv
cp
.188235 .141176 .105882 rgb
f
607.285 273.741 mo
607.285 273.741 619.33 264.278 630.084 265.568 cv
640.838 266.859 646.861 272.451 646.861 272.451 cv
646.861 272.451 627.933 252.663 607.285 273.741 cv
cp
f
630.407 266.228 mo
629.479 265.667 628.141 265.391 627.073 265.419 cv
625.952 265.448 624.696 265.6 623.738 266.228 cv
623.08 266.66 622.306 267.298 622.356 268.182 cv
622.41 269.127 622.568 270.013 622.766 270.924 cv
622.809 271.137 li
622.851 271.346 li
622.884 271.341 li
622.972 271.546 623.092 271.749 623.292 271.958 cv
623.917 272.611 625.042 273.018 625.906 273.136 cv
627.012 273.287 628.224 273.284 629.277 272.878 cv
629.955 272.616 631.103 272.139 631.287 271.346 cv
631.535 270.281 631.724 269.273 631.789 268.182 cv
631.839 267.351 631.033 266.607 630.407 266.228 cv
cp
0 0 0 rgb
f
725.183 265.388 mo
724.846 263.356 722.383 262.635 720.566 262.683 cv
719.469 262.712 718.239 262.86 717.301 263.475 cv
716.634 263.913 715.943 264.509 715.949 265.388 cv
715.956 266.375 716.129 267.337 716.315 268.303 cv
716.372 268.299 li
716.361 268.759 716.503 269.161 716.904 269.581 cv
717.521 270.225 718.632 270.627 719.486 270.744 cv
720.577 270.893 721.774 270.89 722.814 270.488 cv
723.502 270.223 724.583 269.766 724.799 268.976 cv
725.12 267.797 725.385 266.608 725.183 265.388 cv
cp
f
630.024 267.247 mo
629.437 267.146 628.745 267.217 628.249 267.507 cv
628.222 267.512 li
627.67 267.599 627.475 268.007 627.669 268.293 cv
627.622 268.508 li
627.613 269.134 628.275 269.493 628.794 269.673 cv
629.516 269.922 630.344 269.896 631.056 269.632 cv
631.375 269.513 631.692 269.319 631.725 268.948 cv
631.753 268.646 631.785 268.344 631.818 268.043 cv
631.889 267.396 630.853 267.115 630.024 267.247 cv
cp
1 1 1 rgb
f
725.798 266.169 mo
725.203 265.107 723.319 264.758 722.508 265.754 cv
722.11 265.8 721.622 265.922 721.468 266.3 cv
721.297 266.722 721.711 267.063 722.078 267.177 cv
723.021 267.47 723.927 267.897 724.919 267.559 cv
725.265 267.442 725.503 267.213 725.464 266.866 cv
725.745 266.712 725.97 266.477 725.798 266.169 cv
cp
f
654.389 336.547 mo
654.389 336.547 649.872 328.157 650.732 324.931 cv
651.593 321.706 655.578 316.974 655.578 316.974 cv
655.578 316.974 656.136 321.125 657.615 321.921 cv
659.269 322.811 662.422 323.211 662.422 323.211 cv
661.939 322.109 li
661.161 320.335 660.558 318.49 660.166 316.593 cv
659.765 314.648 659.439 312.313 659.766 310.842 cv
660.411 307.94 661.487 286.879 661.702 281.493 cv
661.917 276.108 663.638 267.102 660.841 263.539 cv
658.045 259.976 649.872 251.588 646.861 249.437 cv
646.861 249.437 657.83 261.28 658.045 266.758 cv
658.26 272.236 647.936 283.313 647.936 283.313 cv
653.529 281.493 li
653.529 281.493 656.552 288.973 655.578 298.242 cv
654.604 307.51 650.732 313.533 648.797 318.91 cv
646.861 324.287 642.989 332.245 654.389 336.547 cv
cp
.729412 .427451 .345098 rgb
f
671.811 361.927 mo
673.093 361.784 679.55 365.368 679.55 365.368 cv
679.55 365.368 684.286 361.497 686.437 361.927 cv
688.588 362.357 719.43 373.111 719.43 373.111 cv
719.43 373.111 714.782 375.115 713.457 374.898 cv
712.817 374.793 696.814 375.375 679.982 375.957 cv
661.932 376.582 642.928 377.206 640.895 376.983 cv
636.967 376.553 664.068 362.787 671.811 361.927 cv
.658824 .34902 .313726 rgb
f
640.895 376.983 mo
641.699 376.983 661.917 386.447 676.113 386.017 cv
690.308 385.587 705.235 382.575 719.43 373.111 cv
719.43 373.111 697.191 372.251 692.459 371.391 cv
687.727 370.53 690.412 369.724 683.963 371.445 cv
677.515 373.165 671.381 374.402 664.928 373.111 cv
658.476 371.821 640.895 376.983 640.895 376.983 cv
.772549 .454902 .423529 rgb
f
639.978 377.198 mo
639.978 377.198 659.486 373.128 662.422 373.335 cv
665.358 373.542 685.146 373.339 687.082 373.548 cv
689.018 373.757 709.451 373.327 709.451 373.327 cv
719.439 373.327 li
719.439 373.327 699.342 372.466 694.825 371.176 cv
690.308 369.885 686.437 368.81 684.716 369.67 cv
682.995 370.53 680.629 372.466 677.833 371.391 cv
675.037 370.315 673.101 367.976 668.8 369.361 cv
664.498 370.746 642.344 375.047 638.688 377.198 cv
639.978 377.198 li
cp
.498039 .235294 .207843 rgb
f
590.979 256.664 mo
592.012 258.289 597.675 244.49 604.371 243.881 cv
611.067 243.272 634.199 243.881 634.199 243.881 cv
640.895 243.61 li
635.417 234.141 li
635.417 234.141 634.199 237.794 631.764 237.794 cv
629.329 237.794 620.163 232.924 615.919 234.141 cv
611.676 235.359 607.415 237.185 607.415 237.185 cv
607.415 237.185 593.343 239.62 590.943 242.663 cv
588.544 245.707 586.718 249.968 590.979 256.664 cv
cp
.270588 .235294 .203922 rgb
f
699.943 240.837 mo
699.943 240.837 709.074 235.577 713.335 233.946 cv
717.596 232.315 730.379 229.88 730.379 229.88 cv
748.033 235.359 li
757.772 245.372 li
760.207 251.186 li
748.033 245.372 li
748.033 245.372 740.728 240.229 733.423 240.533 cv
726.118 240.837 725.509 238.402 721.857 240.533 cv
718.205 242.663 709.074 240.533 709.074 240.533 cv
709.074 240.533 702.986 244.49 699.943 240.837 cv
cp
f
684.716 319.855 mo
684.716 323.465 680.034 326.392 674.258 326.392 cv
668.481 326.392 663.799 323.465 663.799 319.855 cv
663.799 316.244 668.481 313.318 674.258 313.318 cv
680.034 313.318 684.716 316.244 684.716 319.855 cv
cp
.94902 .729412 .654902 rgb
f
680.416 382.249 mo
673.313 382.249 662.422 377.621 662.422 377.621 cv
664.641 377.304 669.537 377.198 675.08 377.198 cv
686.164 377.198 699.832 377.621 699.832 377.621 cv
699.832 377.621 688.419 381.742 681.389 382.218 cv
681.074 382.239 680.749 382.249 680.416 382.249 cv
.866667 .560784 .537255 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 19.0.0%%For: (Marina) ()%%Title: (musk.eps)%%CreationDate: 2/12/18 2:37 PM%%Canvassize: 16383%AI9_DataStream%Gb"-6l&m=&OXBi+p(%(W,%U-rg0cTS`YhpAn2NBI+e'/]3R]3),:2#GfjkTa.*9VH%eo3h^J@i1R(GjfjA@1H])ktMiT`+a)%M?A%T.5<^UZ:*IhgG+fbo_sas3K"$oAQSrc\F*-_`[n]8,r8DDdRm5\\`_OkF>Z?p?hHi?b^jWr\s<&5(E+I2`GY^]m]Y"cOMm`H1pCi%X(QpDDk8!KkDNEFhZ!=iI.ck%T;E]9ruul:s74]uqmZ$#5C7n$=#4O[94%JlDr_hI*.NTG^APrcTmZCirHiesBc-UBmE^jRmI4L3%5Q7#,^A,UhDr/6UpAX1.2ui1k;Y0`$=kio7`RiG#/ku<2&>]5+^-(2bppXnn^3ZtA4S2hJkPLkkUkSj7nE[8DpkBSr\]r!lB.H8@%D$2LV%J[,.49#\<08FdSH(3^hjqbF.oR#ib29E=ceIN1ts'n/:HLH&2?@Vq=g%uR*W3soPl1!/U^W$db=*gM3l7+#^o:_It=L*D/%#P?!M^O5S7T,mpsMe?D1Gc0SFrU0V#0E3+3+IN<:R0uXcmC09*]_hYsQg^c7fZL(^ri<M8]m(hVeZQT8oo*B?]Ft7p$GUr]mLLu-%bG9L^l<AA@4Pss^rR86ZJ,/Fa0/0_ahVd!m^Nf@^\,W!ppsW?>4?r[W8b7*2bI[J1j?n`C(b'53QfDOn[E'3_7OHimhnAs*b;VYd%R-JhF)>NfI0>HccYUkR0s7"F>lL=i9s6DJ`lb7lKif-*B=MDHDeM*-KX'^8uGJ/@pe]lk#kj`TPdns`H)k#KbhYogUCObpp\bt3c%oaU]lbC=gg[9pX6S'sUlS,25b?@=>2rVYL+Dnl:jRt#cHrV65i\,Z<an/FL6]/RKR,CfX]E.%EI2h*sfmd8b15<8'\fN6c6^3oZ]%Y9=of>WmH0ohYR)ma\JNF<C>Ls"!iRH1pORb<NXdp@TM75/23/$fAGjNSf0"/S0OJHdQ'V8,rPD=+Bb1K6ZW`pKt<I)#49*n?6hm%s8M$RqmZ$IXaP?eotUKEq&leYf/`csh6Z:MZK-)-o7XY-%-;9(rpns[CCdMqkPi@6L9I2]a:<E$]p*/Vi*MJqq;T`HhEV&#044_E%2rB%m?bUo/p:-n]Hh[NcDr:L"SbCTlB74EB_VkFXL"u[oTp5EDc0@?<p#=4thm@jZO+!>l;L2GZ:O(*u]`-NlY?l\L\kg"jnf)l$%Qd9$Ppu3sa]RTJJ]3>r*6f)<\'r9^"q=b]/hL7U=7]lE<[sdr9c*MUA_u<<SX_4pooEJ1_`VY.6X@;d:^V,">g\p)hDdU5.d<X'm%f3^lX4FH\>B4&F3>C4UJ>(c'4frrC9l)-aoA?->GlM+udro`aAIJ$K]_4M`sr:@D$^3]>3n67HWC%k3mgi>B'2>t]T>6ukHiC@5r%hbF,^RSSFM8Qgc\XfPP9s7_]Hs!5A!;Hg'k[O]rs3D-ieE]]Mtq0ne$^$HeVr)naeLU->?dPC>o$!BmZmlH\M=0BHGQ((g7iDthc%\t.p"*D*a!IOo!\n_sBn%V6YQ&t)G9Uq`3NPe([/o\\u.*48K?pSG-BBJeae4P+"@qq+N/g@28_+R>tdUKaSQ2b(4C`ci@k=T4k-%W-tn2D4'uT7eppAD>@7_k)3`_9Y5k919UD3Oi8/MQHE&W-R4"UAO!UYQM>UCEdKR!Iac@mlskdEKB,D.fjMo%9f>HXWuERu/9b._%;1)s6A]Ct`*2V1H^9U+e>U9(1RtWMfq0Euejd&[^lj5JGN'+tqqr0e4N,ah[<.GmrGa*4fmq&lD)V9++CK]u7Xk2lY]j:*XHg/Tt%`O)M49%q^93i8BgQgQ5HTHLR_bphg\o9QTO1#M'HHnTOa82mUrQ!A(Wb-B`dgN"t=,h/Zn<E,o#l;k+SZ/4'DH8"l$RC9W-S$]NP%D;1**c$$SPbG5HrnTqlDfD3!aDqEUm7k$CK\(>ho8W16sH;)A"XN+&L3Z`4"GK5&u?"%2\a.)`Kh8f]RCcBs)a.&QfgREPXCk8@c%hPT%T.h?i.Dn"K]mEP%SmJYilitCh3]6m]JlJ6V2pU[uI]:JBXmd;eSm\Rhhe%NEY]fc2j[1p15]j,i4nfqX)b@n?1G=/n]b0<bC%6b2'=c-%C4e=i,#jBY>E=bdWF+qnq,?``Ts=D,A>pulq^cg@mjBUSY]30`a&CdY26;ML?iP,>k@b.9*C.*GH(;!))sb:!0sI/<Br%Agg/$>a`3DglL<@b^?ek6aRpN)2`,FNVsFT4+?)Cf$,Rjb9!5"3n(ZZf6dB9g\"L7Q?KIrUdqdNY,uLkeOj8l<g&`5-!FFuY!(Mp%Q1_WNYOCTInt./M[?Z`J>*63UaZnHN@Tfg$/'<1/d0g3PZ+T,l*B@Gkj-)GF(l"I7I`lWCk#<r!a-HT=fMd"\Qm4\e:42fSGJss8%I%acY^bm4En-N/[OZ\ECQTOHU)rY#Q_S<,?Yq4[H's=tN2kMIc89`M*2o>3iL&KQf,)e2^6]A=G"PI5PA]/M`4-&('Yg'`o@A$1/%Bp:1taF8Li'B*!'kpY>1X*#&pRtUmH2$tiDZ>ndF%(VWe4I0bke[6*"g.@ZU'G_a#UVE/+F"88X'F);YUG'LPPHb!6bWk06P%f:k%@sfL?_mO:l<ORaSP&(t42NAoc_nAaQ>8`?oCatoj/nN;5c)e5,/@+Na1@O[B<ntbcF=eG0SRcBU1!(IOAZlFbX5(l,]p7Qo/rFK\%)f:b_%3':hjo@$g"Bqj[H<uO&A3oIW%f$Pqs$k*q,mBDO3$03O*LgI>IX/[F@`Qn7_u7C9PpL6%WKKrR+Hu'<<*F+!i9l4>h15XZ%-$H!#ea#;Zm7#ZbA@E-oJG7'4f/C5lZ`IKcmUFr=Yh<=BL:k#f%+/V4i_fl4L-(8%_$#PC7#1*5gX-Cje)l!o;EdpE]B)Pa(0rH)%+gt[@ht,+geiF5kPY1B'DIb1/L*lPkKVsE_8ocj)`:'Md?p_<9N_@VD,u^pR;r1>hL5iDro\tclToV;GPRc,:=J2H$A`ScnJ0X6o%M0.Z]O_b,=N\g6r5#jZ$)*&4QO*:$sG-pF%ho1M\lVCRA-SNJL'7[];7AfKPS765oQF,,"9O!tP&-#LXI&Eb-jVQfaRY'*9I?rp#%;s\BM6+^$FhqL`%-`&>UqH'7nc"prS/+K\l(Q//b4&,HCTu2a,Ks^RNp0nUt0f;]&`g!a'C1e@+p0al&pJ$:'Y9cE<FHnV@A_MWM%`eOKeH&3%G:5WalSldUfn:`V\Z/Uss0'Vero^g`SoR/I$*`XZ>`U$eZ.Ufkb_Mo8[FC@+;fLhc0D>*)YAs#:U:KOkqW4mSu"aeaA%lmhu0C+[[5OKG<j+R$8-3%iSB]2tm-e]\Z^4E[qLI6l^bK2HD@EZHeca5bH%G.o*DQu]c%ld!Z(XYXjg\[4cZkNQeoSh@nO7JUVb%c4#Go<pF2\pLJPEK+7C8fC3;9pi!q65'qpK7+>*23S/a[*]_i%>RHmm6f1bpfM(n[->tG0qmddoNj=j.Q9bVa&KQZGcm1(PPTWtW%TENNhJ5ccbU%(YGT\B%2BR14HTc;C2Nmr\29hFY=<@Dg+gf#`;`?"%9.[lIa6I:H&eV:"5h3pNLUcqbW%m_EAk6dD%7JG;NTbaV:%"P'GK21fkU;E5(h9)$hsDQ"^E7tR%+jK>F2MU3W+;C"=41sOfQ?+Lbn#mq>F-7DSbS'%1u3'h\EjA[qcVgD@DO'3lmgE=$mFt8g7%1?qC-"NjN2MaOAlZ05)S8nO=q'ZrHo:44I3%5O5R;YBe*J4C3.o$B3!5s(ri`]/1*bDo*\39%</8Pi0,gI8REL]h]M0g(Fi4NK]M%k;kM<;9NXM)LqHm\\ZcTg;9f&YY=c2Z7Borp1CdU;Y$uTBkPR=-YC*(1BDBjfoG0=>,Gp'noB(Xc@>9.MpJYBgo4*9Sn@i6=Q7;/%QFugP*[pj#dVQJCcELMdDLS['hbgPS'8,kPEdV=>F.[WAlc708e&lc`G\I_]>c%b@qT,<#:%Vp71;hAleBc)r(0]LHW<Q'UD\aj@%rS4KAD0.O3WW+qrkf^ud_`=cua=bTHPu_b1lU7M1QJ>*;;HqhU>dnad^n]t'3b)!Q=Aq07?fjf[+.=6Y64\(.LUbXFBo]RZ4NqR^%iA!Ek@Z4lEPc%dE,i?R-VT8MP'3N6\CR@RDn^4FH=RQbTL*s9Xo9K@F3e"a>Q.GI1fhcln<"[f$eC[>?/EEnBY*2D&H18coKbLCL%FuGC4I'ST8fd['"HY.3TS!D5eS[4HQ-lfU*U3u64>52h#kc%QhD1m"&Ik?--Zb<49%)4A0OSWkR]nKic&+2h5DM=l\8+'6ad;<sf%c6E6RP(ZVTQ,eN1>UYnV,,/Gn^O%4'im,3Lo6$EgNaF3\_qb]UDn[igoXD[,9@p?]9LfA?JHj+b2_Z5f&BG78_0%eVoEhR"pkHEe%9Db=[iOQ3uB=?)tS\93TC)hA2XL,<1B:YT-G$`jIAESps8%bB2*ut)`kBhP^2mTrUXUWKj)YhsVFe(4e$^/gr58n($bAtcn>inH@%(sDOgfD&*!n\bn9A(Rt'Y5`(eUXb\uSZc's.YeY?A8s0!p;Q[!0>FRAnXHkNdX8"P8i4<\:a8=:>^mK/g"(,(5G6+N%\le,0!"nI%dUHQ:+m$re=K^YReolsIC4oA;MtWS0!KddpagaeSBMl"ecF0Tq,H+f`hjWVe"i("QimfSrUHct8BM4sHcb_6\:'u%l]VZ%"eTO@Z%X4m7kg_0"qfVGXWPNI-0T'=_YqRFpVb#OF@6Rt$Zm1Y6@[&(sPDqhFJ00_5fXFa]*]PT>k7iPb=+TD5no09tel6heq_5Im"*F@hI%A?Wmq`MJem&>C]iFsXlBkjFb.?#f?a2!i&]37nuBYbGqEYO[5\C'QopU,?;sLhZ_u2sf.F8@O'<VnYcpia968eIMO2^1Z6U:9iFm%Oj"&5Ce)"D:#L2:()qm5%DO/.SC3>bmpOeLQ.n@H=\!AmpU'#F2P.I1?ZYPI,A.6@$[];Le(:tRh4B31'mSqK*48A=BcHs4CnOLF%_`I(GT%jN\9+Tu#0E""l?l]^%aUBW*lm^Y>G__#u3&U+=6Tupl_9`]Ln(ei]i[1WTp2NVn6ZbF&cS>8pS+%'7h*3su]?C4D-'Z75%^G^pZF4^GoNY=fV6iTI3XH*4RS>j$59%ah4,p^VYr;\SC7OHk`d4lN[n$]/j)r572M2mnSJM#+&2`FOo%4um@_CK5u>Kt;4b]s(S%O@t!?_F:$jh.3W_njW(>L-rO0m#be<C,99GK,,o3BVlnn\+=tXi6DPq<0O6VY[c,b'"*9aNM')uW3kJh;`?\a(iVQ6'YL?,d+&7f%Cgu1!=&<b-lO22Z%)]%m:?W,5)Y-;8Ti,lLe_t\L5+F#4VE\JP*U--9_R53a7#f!PfF7\'6V7'U5sQ59&Inpa[>5c:&U+d1-W;5K%TL9Jm+HBDDDQ,lL8@7[ml_$=)DePTW7(Yig*R9q*ABG#)LSd-QWBX4+:d/DD3Q!BYcpE'QcMtUoJ+'@Kl(/=[/0E)cGh5*8rn$qW%!M`.-]Gf0,(*/iD4Z68eruH<u=(AuTThZ%IY6K@4MUN%en!No[s/Mo&s&B;?s7^j&(Uu>I[:/2(eq%md^fP`%FYpQp2LKX*s06kt%3Y7msMeTt+pEeFX=sSpcFI@-g&F:UAs7&6a[-O@<p`K&4R"o['$\[Y7(nD#s:<[cDkj"ar;s3E@Vt'NGh]j^5b.i^QX:O;B*_'YX%h;<2j5--,LQI5MKg!AHgDdMVkbWhkNfA46U=*kJP60MX=*LcVF!DQ`+8D6A*%N[L[W,d4Pn?U)1j:0_rk]NpZ1dE>WPA"17DYe]=%k&k`T(,@C]APSHk\j,eP&#\0RDLB1k[EYmlJ%bprkK-Fp[_^)Z_/UhBpVIO2\OV&80qSpJ3N:qH?HlF(k<m>:8$JW7!&sd'^faL:%HjSh]MI_/=jP?rgB"soU[eUWnr%Q!5^c5O9+O8G[TU[*qQ.9^M-NN=D5WFi"k.+49Ha<n?Rq_c?2J70`DVXP;G:/loR9O*l`6ht?%b0/?6l4a$>]'Ettcg0YX1>*'h2TmnA"c=_NHHF!GUJP=#:A[+JI8571/R3=tSVAkhQHS-sjjYE&(?f]li*h\_57;q-c6FH,+SqE,%+\mY5>!U"dM#TRa@Kc@R=("Fd*fQ)g(`i,elUFq#FE-gj#7"(45N<Y#<mo:QG.!0g)&&9IM!qQa#c"?FVro2H.ae5=>'/"cXja_3%<1:oqC3Hr=k@fe)S=9$bW6oN-!4Sa==)5.ZW3o7b5l"#_VV7[%UTWa-b8Q)b_9NaQY^3o6KHbG#h?nbkp$+"hdN1M^\L_j/i[6UX%[]DO1a?E7:X#/JNITg7-j%s\H$tS(Ud_p<odQAF>5-:(\17*CcqXobjYaFVr1h`9lC67dei#8Gh0sn2B(nK^UN\)sXc:)dXk!EO"%nMrHE\MQmf7i-JrkU>`i:f+05dh#)Q)fi4hGq-s70p`F:P_iQi"l3mSFB,0m#)W(f>Lf9[QD.Rr;.Q=n[R9Ep)`IB)M'/T\8<PHk%Y&#/-s"iNl?3:r)(;iJ.ZC@rGPU:.?KNHRH:e`7d@_5IB*A=hF[X!3?f[Ff1;Zi-%<`1IHVmK?+\SgN]bEQq"dQQN82ol9,%(d.-%_S2M^g.L(ao:L>,[L;2C.bA=pk(.RM8855sl*;D!b56r0:?8B,T;.ps`V.C*dUH^II?fP8N(<!(4SB%f/B,`\c!?hFQeD>15B_8<%B!EeoK-b.&o`=s5A8C1Z*kSrdcmB-oXYcq]gN:0)XT]@td]AgPDSjhBj@m5*%!5S<_KjYe[+BEKg@u8p(b"cAg:uFO;JF@/D$9tE%m4,Hq<>)D`lB^7p;teeD]3p-sKsY_tJN1+r]*eMAds&<4]2NklCaqB&e:g3[cEM`A+$6#QA2@fSNd>]cX@fi?hU5ga*RM[.RSFj/%Gm@^0cG1ql-gcFbBfHjX2YOp#(V<H4-g/"'F,\kuF9-)r&RdH;V<:C5?D\*nmmYa['0p@!ATZZoaL4SH2=WB?d<Yqta3K"TClaqU%B@r!\c7N4WK(rlNG8IQ3FKnKa>tXP$YPYQU6.DH#JmGu*40!g:r>QKdVY6#GhK2'>]53'Y;tWoX4O`r"$``&ig"WQSH\JYlWO&tV%/ko(-l`-R-InNFg0b5blrLaGQ28R$rl:ufgli+5u;HrC4=5Sa2.r-f%l&Atq>Qu3(N4S)C;>)b[=rbk&cr"\(j`jh/:WfN+3g$!$%bJg$AVOWE7'8*1]k=Jf@\8V\B[eMl*LIY0**^e2V`T\XcnN;hX+2,1FV&lD2c1s7TKA:.!]<c5*%<4HcSGM662pVAAf06pf`^`+4%3JfE!C#RXt8X)O-[Q(V5h3H`O/,mWS^R9_S:cNULU`/C,F)p`@m*Q&lZ>H$]"@9_cb:X4^Nr3W6N3H/-.F!C09K[65#nsCc[--9"%-?i+phMlN40hak8'iZ1DE!6\Q:pkmmL8dTogme;:gf'WrOk.<`ZNtk2_\g[\9p77W-,teQO,&RH$h7sB7BCe$_`g\8RnWe7"p+@i%5h02l90oU"\pF?s*aA>78CI`]qK,3<qj?pkl=m4ZYf$9\#,"M.'r?pM)%gC<"$n3b)+(el>f(9(i0>Bn%J]mk2pYgFq!.>R,9=Ws%VG"jf<On36-T0^haLi0-NZH^_oQuWAT*u'Q$3T)hddI40lI/a_me%(a.;HfN5bHff?.DXfl^:Z3&+5#;rUEZji&Ks?R$$C-)$(dE%ZVLIIT)QMqHf,sC5PFfR^F/@:Y^>/&PC"^/_.E+QS9jr(j?;BfP*""U,38TLl7#'6a/gUP4Kq'>@'bl/5m#m<C+3mhL@/>\C;!M4%dtL$3(uZi#,?ti5^bg7Qh*-<,a.2=N4B'=7J&aD_"*\2Ph@Q7iM&k6Y:;KdOIJFg6R<PqZeZ;ZZ";QNal,Ts)L-Sq`mL!f^[mS"e%7j'gJ]r)f"#$iTqh9dQJK:D5$-3c<[J^ot;7.t$]d5#aOh+u9XU;2u3oT@Z4,n=;.VUW,Edrboq1%f38>DhFpD[iX#Q6(^a$PW")%$28"G>$EZM@Tad$Bj[_N6@Mf]&!uOsYNj/nklWDB;!uWPoX&@/00_:<TgFqM>jBIkMl<_bE9Amdr.YU,6%tf@)Jcr]<TEbJq1G+u%L$a93BGbHFbm&[(\=!PIl[ZG[/i,AdRn(Zg@q?S%!QaXZ>"4'\\J\n2s%G<aDp0ANB7U`&`QeTb590Nc=q$B,[k6giojjT3qmG05%gq(lB+$DBS)bRt]RDta[40)$0EP(h*c3ejU1tZtHb69!-"/Xb2l83s7;E;)Am*#$,'gAue[D=6j9M_kg+/Zl03!aV^4+ikIC(8e[%qe>l>Z7-*O(_utd<3cfs#sG"UbDHX4m(VGQdk2lF\oJcG41]DaEY.CW%[F^=EHdP'3$0TjjJU5_HH/V,i-ia@3^6ckUsceG14*N!%#0,XeI?*akaq!*E$=Ii`1S$7gLR??W5WRd_dh<VGGHmoDVT6FKM"2sTql''QK7ARZ5:!i$aZkhD\B"Qf1G_STfknrF1Gp](/mI9O%-:9kSRQXn*Eqa]7;\K0R.Mtkq4&EI_?t[&hda:ZknE?mdVfWV)!i1ol5fP/i6Eq"6S^WI,!%WV+>@!o;!^sVrPCXUeB%5iEf;Q!T%fR2+=H-p/=kf,rLi&dLS/Zlu.\W<TY.sF't0H-4SM&K@FP=@uSe8Fseaf3WJr$VXAp-Ldc@%s7Lq9cKA2p7E.qNN`uXkHKuC71Z"%ofl-&DT97N9DEgt3Etp7/37<,]sVBRR7X\rVT1aG-C&;+$C21f.'nl8.i=sfJqEq-c71fRe4HJZnQVm';J:=G>Z^Pc[?SG6GVmq"%5i>F0pNr@u\#'#if^Hqp8FAcamnknIG\BjIgAqS/4_1qbDBcZJ-M%eZHYDjdElV"#$?_]^kR`X-)`3Q"TUd=ke.$Nb"F@l`1S$LU%*ch;IS3N'[I\ql?5F7m(:[ms0[cXRNjsakf>."Sd;&@CIoW%pW)RM%>5B)]+362UMjR7&9rr"eN!seXQKD`MNrdNJ^hg^8g#,I0T%`BBatf6CHL)E,1-f<$_E8s21=8h!?fh-ibue:g-4?0%WU3HLI@GY$e.(6175bQk/ubM`f%onU%`jj;I*?2D^H.+1@anmRriij+j>%MUScC8%8G;fknL>D'.SNh_K0,SNqsK:E[Rd(@F06[qFgb_hp?n$5:G*@m6)4muBj<G@8L.E:2J8j$#]1W1M&G\1qqbHE@SuYjo*;%nYF$cnor\Z:Ejl/ZJfpfQ-BIQMZ*>:``=Tp68BCD_=O\6,A-:QQZe[SVpOX!?g<a@`KRu_C5%c^`E\[:PaHF4[BPa<AcAsGL<*V0%F'?%u\a[WC7eBiPdjWO!j7mY/8RrfX'!?)e+m4qg6X7c6;:o6X\@+WALL7+Vr8bouXF9VqXR7:-><X%UH"T+S$`="_4K$"'-\k'<%(S7n%i>F;"0MbN@\jtd+b"#XMr"bX8S\+War09GMgA%5C45l`jg]-'6!PH>2OTCNNrW07>IJYVe@*_!9mE%F20G;.0D*2-ngMo0]%%KEi+A3V)u(FcE"CFN&+_UC=]'rID:NY=3<1R)b_U[)VgF%^.lD=MU,:['dc38]Fi=/$U6$t?QjM0-*IhE,eDGIU?eicF'\W`.Ik%>aX(SCO9]6[F&rBM%6C;rm<N_@90k=.AqGi`lok>S`2G2jdnVHbb$WnDG1R0DR=I/4E.'Ai5Xr3[9d0F:PZ?LbiKAW8$JWT+*o7-%)S'IOO^TAe&=FM8Y7du`3ka^G*,bAt$U/E5eVag9mZK-09OaSdCs5<6YYC=A37qkHNu^^D!>Q&9WYaGJo]\J'2#=%tZ2F*C>s>tA%o>jBRR%sIbUTFs<_ZOO*?I$FZf=7K3T]h.c#4XP9bb_s.iBlB=b;hAd5VCXs4I"41#B`Pj<V_0`1_r&q]AkHZ>:)FH`hW>l->_p$%@=$g[O*'neb9JHTg>+e;Rnhth(7RR1@q[ne[-0*Y$LW/ScGl&ji\<tG_N_OO1Tb]dR4%061uC`9i_J>:#.l:b%X,EX-<65N'dauK%F-IPDKO%)NQM6=b]B4)kQje:#iap6r#q&ApG>O%U6U/hM^A\AMDd,t(9#R#o^#@E\8+dETgG:Yfc_k&.J&dq;0_,f$5%;2E^06q0%gjrfcjGJG?Dk:uEA:s.aquM=t)1nL8X-Oe(;ZVM<%a)0%PgH&k+U3A;U)X)4LLA'=Fnf0r\XeK_FGMJ(ZDJ58F-<#X.%LTdJonF;%!.o8N&UT^t\[`m7-5'Yf=Nqk[1b4,5!6Y?]'8_4l#\sHG"ZR0DZLQ`-:HS8ONu=KPjd]14NVA2Uqktk]`54'(J"cESk)IN1T'$hd%hN]XQQl)3d3MOh!d%"6=,dnkkrF]qE"j(mnQqog*&=CF0\kTc#P%%9U845N2jh`*U/h^:qW5ZXfI^UTRXRaKqko?k1d=+iK[l::7%3$V9JhG^oh?RCIeDB+Kn=++L(]"daTR@sNs)Z(d'I_@#EY<2V>dgmT0::4WppIo,cbR\F3mk)?bfWQV0eiiNJ2SEcr27Bo014B#-%l-nV2&)CRHd35*:],_eFSf':'\0MH)g7P`oElc].J>Eir]g#b93+ckuanPRUE)/"Ydt\sqoA/MHhk8]R1hH&<c3Q<a=N^7EE0]Ef%JigDo:m'G]$Bk_PfETSKBAK7)Y?CFoQ?R\`/8&i+\`#/[Di!,$-BPX3,pTR9C??%$,rAj&VhG<d31N-_=g_LC4Yir<<sQ4S8Q)b@%F0(cgl>fH4b<"2H@`]]rVN8La1Gu+0ULu7OP]!(U?I+f,"G+PkhZgZi1kpQ>H8ai<DM^)nnb=bdO3+'X+YE<l(k31$r1e^iB^c<E%fO5AuXMu1ke8`nec?Pn*ZKmW#\jDK_.)\E)K)c/HD<4Ws1Cn2Rj>P.t7#!fL[LIgm'A[PY+&T5pf)8iR5?8q&_ZA;Z6G@*(+&>_h%+7FY>j]c?9rE8KJT=Flr".?pikk+=n/3eK6C21;a1QE,C/gH1P=ul[Y-I=LS4F[(Ge.0(2H_]$7@XT4/%CsI3P7<L@lVQcd/D'W^%QgWGkf/I<Z5.2;$hai(Qao4),cC@Z#=0?0^5#@QgAU<9mn?HR$pe*hMK8N7a2ZD+Hmrn\LL/`,^_K`#&cS6efj0D<2f9;%U-*uAj%[i@2;H&,"-AW/Ct,HOWA<\>ErGrIl#rGmWIH!7bH^)N%%@HDFbi+Tq'RnL`X7tZlf(=N@m>Y`RoSn3;n2GUAf\sTK^T4M`lB5.if%$d"a_EOt[mJ#`=qE]Xo.+8]OQ6!Qr$'2H&#PMq/M7p=^:%5b+DpF*ZL4ccHF-dOo:?MB`"\Q&JU%:3'Ied$:(dl=3\($&%k3QXrW%_RI,MdkmeuV,R*$9=$A=m\994k%q^cd.*6%=L!O*.n..*Jeen%[hGUP)bZc($ujEiH'TTa-9MGK_gi!`h+SOQNG+;$s/FODKtlZt%j??1`-Kd\/K2`(1%`6sXFUcE#nZO"=qEomJ5C<@Q!d^d<_9]&_:)(FU,3Y\kfT*VtCRX!7W1*BIeLWd.eV^=UT@bl25C\q&+'/mm%3nDX"FReRje$G*)Ff&k5B>$j<BJP8&GR2+0J?QV(J?.%[e3uG].hAWE/@V2tX)frQkU1c%;g=l^Ybqe<6N4*4L%b>JDOAg`Tk+PP%m<N$1T(_rgQARo'_$>(;#E!48e!UP`Y,puTR6f00P`UC[q=h!2/UKu`Z[XppnX*N5O%6L$4QIM'IA;7Op1>AnIK856#A<A=GLt<h%PeEG-]@*m,6i2#!B.q@/_d9I,Oh\G+r-^EsW,==QnAW9PbhXS9Ve\]LONkM+;5*8iQH.j+>qDHaU%EI$P::MM..X,^HKU^ba4&*k%BJ5i*_41aoA,"9oOk!CMoBm%?S%IDg'Nl$."O*4:/Y$_5Y[Hn=K8-#H@6'QuKnF=TA\AGM%*l>CDh>-n1bTe&cZ<2DO0B4&)3X,T%>iW6q,*7A0G(3eRLUC@n/+*r<8Zh4@5Ylig=q8`%<He-:W2i/)BpLA3c-d)!H4do4\h?3,RHhAT,$@[G/7CN)'`!uJ/?sYCU7^)u%s7QQpp;\J&;(A/dSou<nGgbQM0EAp]KW93UX^a"K*-u=6iCQ5\kr9^b9YKpWm!qKeNoqG<%gS/d+*b"!LPG2W4BU@##KubtW<Z_X%^)kKp&1YR]n*.\f[H=<Oi[7C\=Vf7Klou"N^MlU8#@FFm:rtJc93LDo\eMcVH9?bL(k3#CrP7__D/ER3CSr9Dg-=N'J&#iLd`T_e%V3N@VZRDI8KIEIJF17WNp6eW*D'sVWm!;QeCS.^,pmce`cI&p#q]S#.*MV#DdIC^&r@lG/hYofGF#WDKpe!\6@!AchDLu0jmZZd2%\L7NEoN9&aK@*_\S-6(6"()Q"lEWsp1f]=nh6N,cJRT/0L\1l;8Sm$n-N19K]c7g]0IqO<)=FBg_qapar:Q1Pn2-I0UqH5q-^"\e%FJpA(>_VYVb+,rcVR<\W2S[:R1f)]A-aiQV,0^&,+()a3nXg<3=3mK<8X@3\j'Ug\N-"UA8"P>fSL%\:oZ`tVF\KJpgQ'V7kAL!`%X#E:6h-%>>A\a#g1$]@JM]\/%+$36r;dfAZ6O%epn>D<Pi`g+G&Nt-mWHmRC]((3?061Y*rTFna-<2iDQmnWM1>1'53a$dC?5I=&%c<_)o2a[%?R(]g.5+dr2q]oOP=n`uDlocrgiV`1rO,\P>L[+WO#>S2Qgg19_J'q<kLm)'*cZOESFC?B[6>#GZ)^iLI#,b7L+aNZh%;rP>$3:G<TS%3aCT,)*\3[nsENt4)cVT:GgV?`-\fV`rgI+#:AaFCl-06rX3*<][AghjX<gb.e$(GkULoC,pkch*'V4[ik-H>(Xs%nZb7>!B@)6JS'R[]2#Xip1ZYW/gU#_IZEjl3)eSN_gA6k0t&s`SKmPbOkFSIAN#sEJ_A7N1:,^_V)-jR1UF$Ql-mM$1qM8bV2PeN%5!CZVaAUq+Z6;g@-C*\7J!+]G>fb"W_c6D>.f:t8I[CHQV."[Z_P4Aa9-8?5k;FaqiQH^sqrTj+?G:^bo$&8*qU7a>*l"*Al"bY[%opai$HiO)a]/QI+?bcH\2r?_2FkcmTCtmL+isO,pRWCSBlZsl3[epa.Q->fCVnD0,s86O*oe$2cs56-AKcg>ar;"*]ph+m:_ljRM%o"X>)=*hu,jd4lBRln>!in9;$^Ds6P4MMl=^I6g^rC6eda6Rs<DdP\Xs75QHBCGh?p_h<is*/qgp6E;h0<?P8]_h!UqmZ%.4?e,k%-g@`dJ+rNaM_BSWiq`JD*<).,n=SflHe!W@Q4;X?D19_YYi'ag[4?tXEAFUN$#%o(.XkK5p%._)Xj1oJr:;^&[-P4=_UTWI5,<K>%7?Z8_O]PaT^cJ:Y.Z4RTO;33j9r13,31*\%\OuP+`'[-u6.XKC3A.As8eu2*Uua'N*)e-]X&W3J@GS(SaNm2o=$[VW@?"?o[MHJk%]:+E]*27g`fQbfU/bLSF0Zr#C.W(YKcZ0b/:uu8"]b6StC1ROfb2'AYAR=sO0)A6a`)O35Ph-I\<\G+q#dkX_QtqegcfGN)-2cC7%+u_sVOl8t;KI'ZG[6.e^#s#*_$>869(?q81lgM'4X!mhgU"+t`CA!M%PmF7t4nb$PEfXoA1*le?q.^AnH3d)s<!GXlb#_f'q1'E;%]((?I7;8g*3;YSP.pMec<;[qc)g9n1_j.GOFEOZdF/n3'8fnDP'7r=Mk!L7!8U?s"3M;^o;!^&?@3Z__=[jC%/"]mrW+*Cu)mG-d%0E!?'b0`U->S_A+PiY'gWoLLa.sY#3Y8FG'Dj`sqqDH?@alQOPLI5BZglgH5?0!?\DO-d6d->0tjaqU0Tk$P`=*C<Wit[p&%O;0[%PVE>U-d+%KV+iFB,oLPC'))rMH(dsP]rj-91/'In3J1m8$@gY>PK18WZh1fP5WFX3.cG"1AlZ!/18gkj2GWMBkcEfU1;KX*/<#*3%dK'rn-hid:T2Su)B<)GBr>QRF/Vgto4WNa.S\-##19lqeO0`Cb!45EM]YVGpR+l8E4RuU[2>9/;E^Ya')DQj$b%J0rAaXFR[B(76%COEC10.4,pM?iFSr&n4F-SOWN*<S>hL8@:@o.mLUmte$iX!k;Pp>6;^fhR5g#cgZTMN+9]-F58Eb3666]k_Q,$$J8@b_aN.BW*\"%XdsF=b30@[1P/rqcdZ_*;n$pFhT]F(++>mCr;OeW`%Sk#nlO.J:VD&Noj>F\qet7DIfAd&[pSG2EVYLL^A.QDZhH,eqGM49gI\ik%O+23FkPoO1:Q^Krnk@i"n<K!ibIJ>O)=/]eMTV+%h5'6Pe@M-Nor;h"2F]6b<G-1s,!Q(_Sh`T"c^1U^';Z%sQ!W#[8/a"q*P3^*%>?O4UaeG-DC.'noTd4Kf&N6]+bFBF3c)t9T9?YU#68j_j^:\7aKibFcKD0[IEOFY.ot_PXX1HFE673,(iB2$s>f#p<_caJ8f6^WI%+2UG2,2F_Rjn4W^ncq-T&9bR@OR!l:@&oDeZ&e_cZKV@hj]0Z];0Jee7O-QV>"=bnA2#P%jNYo[9\Z]3^23],ZqC>5XdPC)g.hM$%P`'Oa/'qh5ljn1<c)HAt^2c8'O].?*F89<MA]N@.\&dFJ*_e/TW_$>><\?XW.>V(Lr-"LigQ[@7@nL1ASn5*fr;b/)#NM)UE9Ac&%R9Kj)<=nk`c#-`sCTXo<a\(E#o/UWm$]$(%QXL,\QeR0R#ie-g?^';Y';7q'$2H-"+G^jZHcWWI[N,[ZUoO<JE1OlJfg[eDoVMn8%+@u/TieDE33NdOn&6F.PKC!lfFn0.TMWc1PBO)bnSbC+Gc@X#d]iFKYUZJViS;?pY:+Yk%f#VQY=gJBp$g;X.r7q1Ze>:cZ4W\l8%H6Z1h>No-_PS"[Jn'ILPkh7ogHT=AFZNod'r/k2F-SMotCZ072od@)S!9m@h9F)]FpZj#?`$D*'K.B`H'roIm)7GD?$sk-8Bl+"7%;'Hn$*#NE^04p?*H94m+]BNm%/6>ZX&%rtqR?J&/^RGi-14Q0%bFcARF7O4NpJeV2msXb1%5LorjBYFsiJQtekQog_Z]'mbRmC/e%#d8W_:_p-3@5BZ,=LoFeL<^$lA72d]GS=]"8A8.5errf-4NkSI'lN$D1]f`?Z9Ep_Y9^0'Hojg\pI5^RA`2uG']C?N=oAAQ-+Whd%Q\dOu$T8/s]?]78oS+Q22NZOpFciC*GFbN2D5Sp?I941h;+2[`d=]'VL2d5eL&9n\ei+0k4,$bY%_G^Yra&BlZ(uO(Q:LUZTSUUl%Kk+7GPmg'f06C7Uo4-%B!1b7M;ig)P3_6n]<a=]*Q9?uj^6,\6MCWihR>nQ>'/HT%O+u)0BUNFjKX#Ro;'D,6E^:/9=0S];l\ToQ%)^e,tituANW;upgTbJ1N5ZqZ(#MG[\c3>n+k?uJ'5-.m.:peg[jtE3gFI-tED:\TVcHqbl)S-"uBu"SC8N31InPJ('K7ap#"_?FT%fJR]EFG`kU'c_\$\&dmu0Jq;cG"96M;5GM3n:RD`O[?B*S)KZ&d4<tH[<h6)>?e"Dl+J4.WV-g6oUH\^dP80fJVc?doO&9DB2E.:%\$VnEeZs9Z)AOd'VSgcHXG;<<l1[#l?5]p^@HCu^fjt2`)VSqjh)u^b4^2^&4oabn[N:N1_S-UNQC@((*>-BeKG>91Qe/60GS&[R%@MV#@R1Za@oNJfjYdS]n_=%$PVOJ3n9G*)kXe!F;W85](]"\-2=tP5=Ds-cK*gYA@`S:S:E>J+Y?NPS,U?1M`Vum?F8N/;V<?s9G%Z?G@V#c4j$D9]_h$A39u2_RHbS`b.OR?u:O#(b%D9Al)JS"#`Gbnn5E7e78'-$Z#NQfQDp@'4D0,nQARDd<^nW`#?iQbZm<HOnB4%7+N_Xa3M7a^+$p/ZS#\(OA9#LFfEpTeg7QEFfkVA_]ki%7amEeQbjqfJ(kj-5UobnZl>@#,iIf2XKWW/[PKRfnYR^^\s\mq&T%oW%BP(PeU6=>BB3^UrQY,l[fp61EbIh-9Zm6aR8u#cQ/V,!3*$SjX-#"RC]X_HBppLT1g"DWYb[u#Z2_/a0O@uo0aj,Ds45,q?qmI-+%9aP)1+js(WEpkNGr-'Ka+Euq1Eg'C_l'_T!G3qr4/SFHa;@66,9=H<Xqj_G.RmedU7;).(;8Q'sZ.:L!EaRLajcSApFLJDKp+FA*%KQUp*C.,N8@62m`19d1)_SYqpBf%8I[osp0H(=r1--U5_L_E6&:FDS[W&<VTU3<`fUspHafCJ\*G"uC\jOGFbXZM_E-^lIiHnfN<%fnr2[6tk&XZRCC",!9M:2=!t`1JSd'4Ip/OT\b^^MYc-5Mc+nt<lpuE208>#J+!T<O4Wf2JM39naGb2D8#e+O)X*V/5rNT\7thLr%\pt6dA<p`('^J*14Dlsf#L_!D.H7WIbrj+M=DGpci=5pqs22@1KTS)I^8MlRMo&6MWL(s;C4V.j?@!o"er,@R[@1I=$/;?E2u>[m%=:K>k6cs!f*+u%(5[af8fHh%2ICUi]#+)PqCOI#C7"*p]-cU]mX*kYNJ-\GUL[%iIMB]sAC;m%4?s1]6!5=h!kS3DE3$D`PlRhBN%(ts"fhp]j$7P3bcCMc@]iomds3^p7EB5@2:>BsFcn+jYQ3mG_V3B-,<h>>WnU6'FTB,^&l2IF$S%C0\?g&5CB:6V5P6pP#Ar\W$j%AKRe)buOnS'p7t6hP3OX0CfUlL!Hc@\,"OH3J^euCW;lZ:iUQm,]^(,\/V'B\^do3FUOQ5eZa0"9^1\B'6ukJ5GmjPK,$Wu]+:T\%cCg/R3*<b5:"FmNS86L;^k/k\E8O].HO';L;.YnpN@qZ<Y+;,ENKRpXQf_h2CMT1s2_SC.kcsQhCfIR2L,:P&6r2KqQGLhSU-hT]%k^GGCa7PAHd2&sIb%NY6)pJg@\:`(SD0U'nWOT8DlM7krI_33$*B:7JrnQC#ok)*']#/BQ,K.d-Hea:2MWA7d;KKB#FHP)"I;Z\1%n(X@MYcP:dj%_Ni=3Hc=f*umq.OiX2-<lrFC1cC<NjiSN7OU?/o=Q[5N.F_]kA+MW\[h=F_'DE'e"(DR/m%<+_th/s_#9#V\ZB-+%WDtk=Aa9gc(c(kAbq7Kp4"&f[cQ$ag>E*+dgc=B0#\p+*f@kg#9*9+EB;=g@EC7G5r2m*MpH3N;/^dWj3c4>HK)p^JY;s@`+<,/(%h*pIZSO9R3ZMeELW);o94-ppV3'g+'9gL?;bA]fnm!Nie<dXDgd-2MKs&Op_0rVW<6l6)E3b(+E?AG^Q42fE*_ak%*>P]&&/FC]X%#koR_'hrhTA]3Y+&eTl4_WE&46Kb)u8e$5E;2m$)8$CNsbDfsn3(ho?&<1=V"P2m?MH44gb(di]b*@%$f`joDlpk]lH(k=.kYn^J%V7CNb"#]:SK6CXbL)"k>AFAqA^eEu,eP'ND`&SA$K_&0AH+g1PR6.2.<-\Z'^0=gBY_+7'_`aR]gd[HfeuSVq\#.I-nmU56F81%>%^Yp0b3I5,Sea[cX0?j2I4?1U9)ak6hX^LV`V59P\\f2GZ6YBPs`&,];7U:F;\\!&Wc5GHogF,.-Dm/>Qgk@7$Ng*ZBV!:nfAJuT%%fYuu`A$k]u#CO5n6t,0,J%_bs#I*:Wokcdf4(B4<kP=MqgoK2!l4gklcMPeEPmVnS$h?#(COSo(ll<f.[J'6pWRJ?S*dkc]=2Gd=%?;#*6f+OQ1d'Z88$Q<#7/J6c*7/`rrM,:-;'di-J+tO52(QM[.ZfAT^fZ\?<!5].MnksX7,':SF:aKNo>@fS%P3AN.*RSRq7>.'i%_nXfF5C37eQM3EaXB9&QZaG+]k?LM>n&nWk;HA^p:.OYMfB[+9_5qC_+9'>9Q+`2KX%uueTjF[4oBU6Nb,DKQ<7C/Z>H[krH]C-r%J$r[e]iAk6oK=ihPX!,$^*\K/_!hc1n*<-ER*r=DmNg#V6"!^;OBEL@mGYEk%e['$__p'#C)":X1Cp6uAjpBMa[RO\/._JsMAt$h%<S?ZFkAP4.^?>7M?!aa1l(40"JDr_gG#93e6AX$`K#848aY#FA8#.pB(GCJsIm>qNa*#JaTJ$WVod)$@<09O/=L=lX@"iH#oOVa+%F-+9@k9Dlp[D`^NJ-?1C$W@(hWHL9Y`b&uf:1[WDJKlfeWU&_LoZFK$Q/5LZHI8qE=Z31Oi^^YHm/*f,_p_UWJKl'or)V<b#U)h4%6dtHkKp,4Ud.sdDg6qLR2a7K(MO4lp4/B+=$:Y#"KtUZSDS?*oSk>>Z`ZhF?qog!YfJ9LVXBMqeCDq#>_RCdA'tV"j!J`g4Us;N+%6]A2D-JJH#5$$3r>SSJKThomQdlDBAfe$@s,Ih27X218ee]e;c2)OqtT+lh?WL^%>hC(ETU>g0IHEnuSR`;cS`U9^,2JP)DCN""9%X`Cr7dPoM2fil)_r2m*Mp\\?n^a1u`?nP^lCfGZ0W=5uHi,QI60h`jgX*HE9#:<EpYd;34Z7:l@A]!-(K=XU'TI=YO)M>7sW-poF%<-*\-+&G=02dT`LkRq843`17;Z8km'dlVML.Wf)<-,=Of"Xhg6OBJRRC88kUBbFgOQKU(NI:r%2,>ZP#Bs0M73f;"t?mm`&l,.+_%=SY=&=_E(UV`8TC40%!BYsZ<5(heKl[^JJK!r(Zk6@@D:gh]de\^3X14U+1(7eD%JIa;e0H]VL/Hric7`RZ]pBNu0EKJ[B=Q-)RR%B]cOlc&6^7:2X?/Xpm!h0;Zp.Kg5VK02:fL[77B!)?c`"l9#n*Fu;*!F\#]rg<<l>MOr/e'@qaa#p:0nL8M</H`Cm6F]FVq?E9+:%$C`7u#OQi8k]2cF0&W;6?;Y(pcrQp[_-GTk$-,hq_pB1#6GU\:HQ#>VCsU\t[HDIFS\A`X\B2+SG74#5>Li%&F]1(C^aaGa_1%L0%aiH_7'(99D761RjmL8c!]e4$N<hn;1rCWh#ZZ*=\i%Ke`Zes4\HDNi1YLfA\[<;>;XTrBE[Y-56PX!"t?gjrGRL@C5ZeJ,,P2$Eq%&J0r[.t4Am^K4X%+>+-u22^9hYA@0o5P,h>>C]V9d-kY?Pu7<tH):L,hTje)qTHe5>)E(WW]QZeFeGn!IMJk1_PB42-s=G=]$shC%7<oD;)DI:8Q(T`nQFA_Jm%/N7UFmnGosWc`JEroddjWQ0C$jSW^%VBTf(j[$*f+e(/rF9S`PqafN=,P$KQ(nI))G'S)auW7J)e1q%:3g_d$!mHr4hr2u*GeG-MVliN"J_F9U:2GM'55O;9-^Bn^`L]Mob[1Bc<g$fd,u@&)*8!b?9:tB[]7QaT8r3V(6fIP71SX<8Kq3E%^H8Y=K"cOG*8(c@G(Q9e6+[pF"k$F=)Zi9Y+DF/#EbmZq8fa?1mRGHggdbl4DONlB]QSBUKcIm')S@$e1i=]1DS-hf9+Bbf]9qF<%Zu]":+Tk'k&*dL`Lc9FCW2bbAWju%1>M>1jNUkl:*W1AbB,L'1/Z8A,>n&Q(eR!&dadqVtmC.1p97m"R]j?%7DsHsH0<=9."7Jsf%fA^Ji:0!NJ"'8u-alM,9#.ma^>[^IrTq7sgHW,o3GLR!><Hdn+=D_iRQlW]oZ4,mTrb/E?Hhu=El!$&`#1G/oI8J[P;],5&;+6"-%F$N-d#['SJIDL;eoBbEX_)>?HCs/:=:bU)ue8-]oMVlgLP#>^t"3R[RKaG/)j#rs-@\#\cX4<fT[<2,&hhu3C_2>LP#c/T9n!(e)%13DkE(.sJVEZ+Wm3_g3:FS%XXH!gX^rXLr$/'HB2mu=($N<8$b293-mfJX\Y;mnCF4%:MLKfn-Un.Zd@*AJ6j=D3o#)[me5E`F8&%hN$Hj"PG4A"pViJ;+6qA(]#rs"qQ(lh=M-\h^BuR(_".1F*RR[$u+';DK^!8af+0UTO::+06Hdc,2ako+EMRM=@^3F%A@r#8&<*V%&5,b="V4n5.j'e'LRXk(M2$V[c4QDqEU[YT.3B!(&(CXI/ImER#`u5J*'?+l,g%hBaaikW`,crLnCX]7%-LR_`"),^E=?;A0ZE?@%<E(Xl+5@FjI-5@^_E5R]$1[>pQ9j;]L)S$KW#%@l.sA$D!2l+pIGZH!V*A(cf,hZ6Fo%7qdW^L,?s[X<5Y$U52emuTA+nAS1/QC1%o$OEj>f#s^gOc(mfMB,W;=mJ5Y7L:7i]aa".(agaC4!D?<dXhppM<"NE,j*mZF]_?;h]o;#ii^A&R_eS_Q+]LhC-[<#\3>r*9l>7%l4gkno4^J.;`CBnV7/>:S+V+H79=h_[T9Rp^UJ@ZSe"K,T*#nE",f/n^1"u!1;729)Dlnu'l2IsL)"L^pkBN!ridDDXMNp9<ik9?%)cj$@jEF_2L6-=UYm->/=>@k;n"=,!,i>8(%49u*@a2ZrK8MN'I"R;6UjRfPof=<sXL[NJ.l=b`_hp=ar.#JsJGFp6l\Ki,MD`KQ%L_X]eq1]W*aF&Vt29buS'Pj@e#DtNV^>[!M2o!7e3H2^K`#Lep:h#HUhgr]c4Pqi%Nh1/#0n[g@!+HC%hZ.*qTPsV0L7fXY@1>N[%n6lbmhqcopU>OqI*(AcC@1>]`i*d'b^Oq;!+FSlt2'dUfLRkWf;]hr(c?K&fJSLRT#$u5XYD.&SiPQQJ^=RG5HuH&a#-?B@2,%(e%X5UeH4a6\*p2!+0pAEdufmAb'T:Vi!5&?l1XNR=(%fC'dpCSIt;";5biT>o=)J)0L%9,];oqi/meSdF__qJ%s9's/n4/_Ok8\OJ^%7$u_^7@:cd;.3$E.V0n]P_/*.ZbFr)eS#Xss..@-HGZN<)TK3(`U;Cf#>16r"]dgoAR#.QcTqgRT$?TokP)F1hQs>>:Jn>l;DqCQ%MlRb/$<I)j4Z-o;%;[a&Le/$+**(YQDVlj[KJ@&<eI)S'ktO$mh=A)om#2i?=ES:-@;es%4cQ1;qP1H5mHIhRVf18co&KC9GQR'&%3ete8-B30uCg0S>!Mh`!BE67*pnueE8Z/NLjbZ$%4bhI_4LEWfG#.5`:>KN9rq<dR;Dp4tG#,%"4oO&[4b*Iff'.N>L9t!F1pHLX%TtK5\dCY,sgJY?,+[@^d4g/Pb'R^MM@HoW!PF[F4e)"-#fKFXYCXedZiUaKc6*%mDos7udcfK;(pT[aohsds'_Jm'l706C0>#]Ig%lTGuU.&bn)S'lAh#"q&j&Io"<V,Q)Ob0)QkP6Y20OJ-MKMVZb+5)lR6Z<C0Wj'RO&.`%Ib4dah>hFQB]IDt'*T-1qAE&1MO(kl[t%Mm)kS5gH+D2estU$u:DQT?9.tE2TY?2Cep*<ND.0D,#/1h9qk/7MWTd:sSU.?tM8._!Ym#kGI7mPI5`(l!%)aDu%(?8m"XB-Pk)O%=W#DgjMY&B.JS/Q(;g/F6rfe7SCTmi4,L%?jF44+<YnML`!LT;=3d'Z$[JQ^gm]`20%',fL.L_*5fJ@*r/n+PZPVr1e4"N<%08'K%7r1TXXZ<HR1G858)^]B#LFUhV-R`K\<.Sno!(Wuf!GFQS@!C)CS;>8fQIOX)qUr=9DFSTsX$0I_j\P:2SA*bPZ2D,V6=bYY6*J]%%4VdNn[SW@qNZ]`"o:jZdAk$j!o<B9F*:)SN[ktPD.!ADL@n&$WkoSQY-<Bbcet,uRGd^YV4b%85oK>Eo3-!B592Zukj_Yi)?gjpI%[_O*r"`7OW24IIW?JN2&";NoT6<gpmeu[`6Tcp?/%J@S-?2,b%hA#?:Ymtu"MI,NXf'B_FC2KNUjS'hXJoPBq(_[l6dYWm5)W7\C%>-PuP!JQ\H-`@@gYE5$!XG/UPX<+LC7^5%dnn1q37Yl&#D'=1=W5C3HTGP$aCXr@A>>$?Iq"Z9_D(r<8;p,5^%!&,[fT]@lOuCf2%W53iM=Dfj;MS9gHk&+\BRHBF$.4<agrOUZ0j@g8d2^B*bT\&.W:@\>8#OD':_md'L?h3f)X[)SJ%=Meiip.ViH;]?2k!R/bXD6'M%ErJg2iF;IRI'&u2=\(#![+-RJ9=Mee<VhZbe9Y?BXFWV7SkaQK&$+%-le1=mVG:IG]C*"ZFZg_IosoI)J4<#7pbjrbJ6sg-SV*?l%7HX`BO(4RYb"?&a,F#__p7eFEA1f]X`=?E2(lc%\1!A>g+^jO_Au'@HE%j8-3?nb2;9]2t).?_e_rD;?(eWsh4+\>FLf34R^^RR@%m)UO9j!@)JG5-)%!.>AaQCH,=Bu_h^4EAOa]:8m=T^LR>bCor![6p;(-L6t"Aj\1L7&FsC!%u0B]9P6tjDlC(O:G93+qc>g[r%13%#$PVi/_ZoAON#f'J]h]$]sft%(nJKt7bD`/RKXXU(HI?_7Rfpm/7FTB0(8u(XV6UT>D9rZm<$2F*puG6)#&1^L>;5UTU#C1H*-ei%f$;s\4mZPO,W*QI7k')K!+guX%@g\P%[L?:.hWdN=njeYi&"+_o>iJ06o+Z^_=Hq)O:9OIK8_OkdDQ;ZQM%l+mbN[2.H1PZ0nPE\%0Z\70bT1pjmh*T]LDg7">d7cVdWg?BEIp!$!o5TNM`le>LQODBk<6P(AX9o&6c/K7Yb_I=YL^c#/N.\Q5:>jI"t9aeJ6=r=2`^#-%8Sc?[=*kQM'4W*.1$l`pV:rdE/2@!46kV<5Cu43.KnZ<68r""r(n>XP&_CLP2`tDS?oqUp%O'tnF7es>qX)lm=O([,YD+"a7"b=k%`t0pkNWo\D5/dq?DQ\+)(?"+<kfn4d!8d*2_t`qK$jPL)2LpMY',e&>ZScgtB)^eoTV[nH5iGI[CbIBh"8Wg!r,RB$(1FP&D1i2<%/t0g])IWj^G+rJm]q#B)[@?R!_=g,hlVD?!S@t9(E+HoU!7H9Y&fo/R[7.O_E8QJQ]d<,E_6A6>3`Ns+75q&%j+J#<gPH-qok"Ws%gMSmaJ_Td@Sb<iU`p%:7q]ZhTR(#3m\.]=bMgc'Zlo-ZmE'X>AM[.h*qP)SnCQ_kt\'kTb+L`!n\(fXlBQ(Z?J,o#`jL*]?HTS.o%jt@0":L_&a!WCc/NnBW9Ysmf[0i0Ms:PGD+!W+CkCgG1KKR8n1J%'Tk0EQ5UdI=`L*CKJ-Rgl=Rp-`5b]n\OeqI5e]@;pNG$p5Wj%Jt;0L5K&hAeO+ri"I.^YkB$%\K((jWZ?0PEHKB"Z*B(b?h.oDKppG8b"PE-#+pIj23OM)][rhV$T3\Mmk[Y:?TC2>fQ+Jt^fp*B"%>5<(is8Bo4-N-BD4R7?*`X5'mh5[2dQQ"k*nXL=_epc7k.s<F]\7&Tb\)V`_NS5H>Qi6bR[,'8^NRLpAJeUs8j%.m8`G%`%8?6Er%H=$!ukLH`I,TKBs]HW'blIhpuKNNi-cU`Tm63*)fY#eW`?l>Q:&feNh'%[NF;JC]OXmM#$7V]uZ&P-"K&;>$L29[[P$3Hl:/)=)8%fma@'pRr!&4"i;"6@`7q`duVGJ09EQ=mCB$H%]QU>6s/O66O.@>mA(a1/t*GW0bAR1SSRifK=[t,p=o.bqqS.KZ,`dCCL<1G%AH8%c_];$`an&IHnjU?>?Zi%g%b8kmm66qQr5^iJXO@t[''t0)l[T_H=:&;V'M'k$C4n1VP0koR4<L8Js4t+el/7Qoo]LLBI72q^1J<E%jHTpQ*G5O%%54Q?"??gpk'j&QLtiiX#qNg=;h.7oTWEtr=Y7jl\#6$8g^Ku,1t!!W!1pNf>/1]k*6]nQd.\Cf)\(]T1Do$t&"]pY%4)d*f<gV2K9Z[LFHsM`;.L"E!G3)=8>/1/<Wu3LW@2=-TGec?-abV!7(0?[(_e.Ms()q)p/sB+2#+4'YJU.,5#81ikO^"tF,*]1'%3kAg,VuUAORl-ZEKl[L?[h<h2A$)2VXKEDg).j),,K=Ce5]EsX#R-jGWc9t/_=#EuSt#/2L!-dUdNKq6_ZF:Yf-T"qm!`V2,m?^M%LCXad1;+#!"IL5aimj-1R`')u)[C9-C7<KR$`qjknI&FGAi:tQ=(GC&Ol'W#6WQKC7%5>\I*E]<"aL]Z0jkP96>P.K$ij;nU<Y;:%boe(PgsIB&kpi?>MmeUZ8Ka9fHHf7qpj%#6-@CTa^WBRmF<s%:aBuA1h57'YdtEeW_T%U5l4L".@E7la(+cW2X:?$,&5/kjj?6'Y%dN-.XZnR^ilZNb4T)!"$`*;J&&9?uC0_A_)Lu`CC\\RNgAdDK@@?$]beiAEg<?uVI3(JUE,GA1M2VLDt@PnN)3.S_GV!Aq6e''eL%WcauZ<WatVU9;C#(X4d4)UO7NejTcENLs%j2h79.56=C^ft1``.(4L2@^O<HL0TMWWb-GDL7_]5b>q>1@_b6<A93oj!jb]plI_t&%\88/jkaMah>=#(&@VA$JQnWP6ZQ]DpX>YTKc^r`!6u'O<LuI^#g%I$A#gZIK!S[W`\;FE"1V@L<3M?/)3jDkq=N*!hfPUQ*i14-*%[gJe`+rKUb'+.bLH_p<LLAL8pQ%JT/E%A^`(r?_$:Z2UPc*A1JQ4=,5`je9=A1k#fqjR6!7?8/sh6%UUFs@"m/2jqCYSKO#9eL)'%6\roX0EU^/!OH&MJ)-4_:k!%,!AJD["].T%2;Tti(61cb$lK=?(eJ<i[baaWIBq[M?k[D'3U==-$s#s..i4[4iJP`l@/mRpTj-Y/%drPm:6LN:5s)0SJ,TS)P&&th4N+!m2!uBe<0af.JJI#:\d(mKmH.J+DeYh=Ck!K\H/.UcY9d,:8<SVGVou7E,qT,/i$?ua%$!)I-%ku!unbV377'j?`5&$?mg#S>rE;[)@>EehiH"U?',M6gC&R:E1G4_.:TZ',[l-6c%^5fs438H%1l<F`TU+r%So0,q^(!EmW(i0ITe%_E>\.P9i&M<-T_!2@4n4,M<Q\,nLnd)8MLX@Lq"NVAsE,<NY"3%jaPWCYe'h9J'!GcV9df=CA6H;RJ;@@fjuYRTL'>\gT3QCs1h,%6'T]mMjpAIL/DE\Z%-eFU)(O&*"/>i!t@#)RFj5q`ltg9JO*YDRPe>Rd0N+\77D!+9I%mW:q:4A)&"/U2`XtlCZ6H>Mh\%='1GDP%4dP%_Els0e,ZRB=/#:?WbsXOP'H,q"E7JX!Q06,S3i\5XBtAtO-7rik5RL3sW9ZcD_H>`rfi+=a0FB0H0h7*=7sN>8$I5VJpgehn%eU:9OX/\AsZ^bWhKQs02XQ%6&(3R2s*S8^c[uK.D>4V1q,D#cU1p^bL]p5'5Xk\@;+$4E?*X`M%_WR06+.eRP$&#k2hF4=Vo!jjd%@%9WD6$i8DQ*9B`F&f?22^Yd7oN@n$Uq"G_dM&uY19oB&hQ*^ndGXAs=X1SX(dnJb@GrE+BUL^sXKMPqp+p"B<>2Nd=D5%>)Y+2$%_R,ACDIL#mS;j4J2?VHbXbZTc&-,4$S?p3K"Gj*ieot%N(9G!Ol4E9]$$tQdX'*aX@i&SDD:/0HJ\8NR/p&-KHUQ7?/^%;6WHC\g%]jr:)#ZY]K&=84OM;/=EJi4h*oEVX_VmcpVQ(d0r!'@u>^*_V.QqM,O.1+BJ'+bP!OW[+=ksF_nf+d6/JeAp,NVK>*QZa6FWNE4\%/-n6#K`)N?3?$ol6)Y8[%k;WHk1iZf]MYRLK:m"%d1]HoMkPg/(I`M#7k3J>RTZ+45QJ";G1BV=P>=.0`YOo`H\'25Lff$U%hPaR%0FTu/[r2g4c@Cu$0j1VDJd;sWdgH2QpftKK&XNuVL7&F/''%-Y__S,=^N9O/8UX*G`+nQZn`8=RB?Ispp/),i5O/G1;5r)#'no7B%F'(GR7qR"uO:bo^J3ou5/u@eIC)mtKgJhDYbpiV$M[_*UKW*`S;$fn8!N-KMJ4YFH$jM@`^gOZ"<h9m[OdoFPe"]Kmg$\$<a/Kbp%>\R9e]o8gd<-=3"FpuAgNIZ7XaENVH+grK0/=_!,2In.4cq!@i.LD1m0GS$'=g`d&c,c2u2;>3!^<jhEE\&SY+^/4M?<C^!#@Mi!%DS`EqX]nI%SLosI0&%AM4`?eY%`F'YksjG=dT1;5]l=c<0F1nJX!N;Niil(bVF"@92Mk[W=`H`r&1_rb*^`XMb>MRt$RunN(mCW7%0"K[+PaZ8j)"CJM=L$Np99)KkksA=5H;[g0!^pYRemUIOlj;[4=bgJf!:>YM`C1>nOWHPAT5%=Q1o7.Lq4dM[iLkK<-TUcp#;S)H%_6ZY9K1D;qKk\F:CfN;r9$+ZNc]*92&QqNfW^uZ]M7.9B(rf'Cr<gT62hoXMKFkS.ff:qI?SP:^Jf[%M>*WGaBjYp6=<:=oL_nfb%Z1ft%:k@]gaE1$d0NH3^A:\Y]fF[I)(WeIb`Xja-e^(^"N>"RgTVMi&eTG7Og_:"9XPuuoeV9C5?>EJ<(MkPckq`BMK9D"B2'P_g%8Q4!X%`=(OR<Bc@2ch7;rb1l,W)HH4I=!)5aKu!l%%0UN'%U$-.X=l$^m's]PpM/t1SOa['J"f0ZC6OfO_W,*Sh,Bj;S.o!e=;,r%rf$gX,r'Xg!QRP)$M#T#!ZdNYO2>,[f?3FY8nL]I4&in6d1_$A:1aleGMl=pFE(CmH:Ac\pWM3!J5mmF&hF:b!8fP4Msj'._bDr;%djYG;@>RN50&0pd'Za9YiZ5j7k\fK$&GpCM$<#HJq=8fu%PHO!#moN%=Q#u%-JIY*=tHX`eFPN*[2.X_q]-ELR$GF]>3*ocZU040%BO\>IIqW3:.t^Gg.P;u9?:BN]Or[&)U/-jc'e["lQ8^Rf=VU0&P7dRgk'KRdCihJ=ERIsI4KNH"7!t:AB`PTV1'VdJ#RO<Ug]C0N%Q=hQ3c95,nc)IA=fg70%9#Y#1:#X6JU4>Q^h63X(#AVtSQP+0*TH.X9W>b`SR2MF(hikG+i1!k*:bQOf'J2.dF,jhV-_l35,_fRX%\Y3jd@:Q!n&CrCWfE*BZXZ:p,5sku^r?0G2/>gG@O:<iEc%qN+cZ7J_<B_p,G]i9&Xd\UAAhR1_:^0U:b@:8K.>T<V$#VuUiFVKo%\s90)DTXL9IR79UG9/;h$pd/'>fG7rO/KlN5QWF0h\#*V)-\"q`M:i6/bZDf1=h&J_Vcdi,Z-L4h2u])+[^inL33/hI3O5X]nLLp%Ao\TpoTG0M.1@YRoA'e'&n3fYWdsNDkQU7sT[OlM;An7`V_B-kHr%D'Wp5@qo;l#.*oYct*#R1=Dj;B:eZE!-.aDhbBWctnOSP,!%Ahc/0N=7c&HnE[1Zin2\ABJS>(1;`Z/5+s%6-?`4)`S#J;Gu`[.>52D2IeFC`mce)2EBI&+a#IPL!6llLG5>4$b,YR4:OP$ZR5gr%=WDf4N:(#6.4T'(Z(3pDm>D*Xi]q$uZ&BtSdU.u>NQHXRj=P72YF5N'RnHUFk_lDe4`#ABZb@EL'q75H#`-Nig#1pM!t1E0cA>sR%C5#r*?%GZkBg%&N=JEq]]&]&)B`O>O*u#n:MggC:Nj75USM4*p%l?V];JM.&h2n$QMsr8_:=H3dgb^`.4MR;\(S$g^8E3tE?B?#?%&ZV6k(dp)7FZ7-?3b4P')s5=QV^$7IK7Pg*gQo'oGqXAF5kO0Cm]`JU7$XLT!2<ruZ,"h>n!DZ[U4?+.SR)uJD_`7tB_UMs!6ed0%HS.uT=S9$FA+HajJRr=nM9$R=(ZCQK]RK]Le`60D:(U+#_E8OR*tTQpJq/60)[o')\W"J,7q0:Ea^u*]K#=YrUr0;G+fl.s^DXak%\6>38lqX%=g1\cmP\6@RArBhY`La*lD^5RYRF-6;-GEKDJd<sak]BF7-3:@qTeD3.cB2Y*D7<6Q7Do8S)-U:;,n99kGYkqPTP:8`%Sf-FmOcm$k%kEUch^hkp&q]Hd>57#*'m9hZ1ZNr2*1+ni;<C,r8@L8m'p1`9A<=![Z46Et5fE`gfT.W?C-.#Y@?(D6-&"9Y<[3P(%^/nDZ8RQd/+I$8Jf@d-aZPmQ2&sFr"Qa(=F7n2$\dd@D,KkA/OIYO-$]"gR9ntJ.4R:9m2C5#WD0'O(j92^Di_hXPs1u512LFftu%%&qO:iR-4$U_-pieH;!YK!t=D&1erm23T@BPSN'$<D.XE+O9GWHKLBfMe5,I'MVN7+C(RFW97dr,gO3t!_'pd;#sMV@XSpb_6m?G%Gf+K.4=1;`Cr!''5\PI!OU^L8_L%CWpuab$W-ANaRr\3fS/`%dZ\u=6JIlm=<tQ&P@^'\PL06>BXdl$JVTN1E@E:KWkV1G\W'3M$%afd0ud/bW&,EKSs0nf7%RXTiWWbp[C)>42s/_"WK"H!<&RpfW%XbE^'oL4M!X$J6E$:ih<fo;=@U0H*J+A"PF0GW'<G$;CGgq`'M%TU/*V7YHTHTN;mdT33JOe_k1/UCAQ#$sq:E!9g2sQWZu37SU3&U+*?KfOpIhm%cJA_u(p5pB?J.E!"NMmtjNOKXX3gm_PVb:eZGH%SiWqdZi_Q?fY%oN*I3PK:c;!@:;E!!BktDb2!jEp")\B0"P@?a6oOFnlde1gTQ,+,QHW4O7$qq_0uO+rF>;'rR>8s@<Un=M5%k2k%]\&1!pdEp;VO)EmF'[<(%jKhGa>"KUmW$@1%1DM?E,_2FJqa8UOrtpOD@-E<D@H"_oJdQm^pLD6il?!Pb.e0E=u!>rD8p9ETPC`Q%oKXfVn_7Ynf>[ZC3:\,N2/YrNT92)E>W-rl(DS8t^j.%.[`fOj76S:4cT9krqJp*;E5c?Qka^LF<Y0O]'Tkl%V?ZA>_%&0T6``[6%]^4$\J4)(t]kFR4W7L3ElPIr%$d3b8)O<_a4-Mnn7q'n`[/93q-D?7CX@r%S'Buj?o2E"l3Qf]Ih>7E?%+5L14d7OX#oFHV8#tK@%SeRN.o_8,*;Qt^b1M1b^ca7^cIk+dFK'P,,gDS9ZJk[BT*ms$k5SV`[MKN__;*!.<R2Zel^9hU_-[L4'^AMUG^s$QT86<CnfP``,%N%cjEP3"$-"C:c[P>(sg[C2ej(ig^pWehOk1<D.IU'JS5k_A>$4_+DKphJmOWo/GtqA?`]\eBCJRS<k7a^dn*d`da\=EIP[G!L8I%h!b.Lk%;?X9^nWg^4?MLdu`>jE42![e:Z1-!t%p2Wgpu'"PjZI*b;4b@GOF-Z'h.YOi#K9\Bl%I?QdnbVDrm*qcl.TRUHCUI+Ar^%+@sil];go)=3W>--$#o"g(X]+B(Y(_AG?!AR8cjlDs\u.\Hfp+U.,=0=2fOuV&6-Zi@Ht,JYi'P'r`&_3g2-3-Zp8>%[C[Z&89&n%gAI`JB&GrAW#Hii2Zd/t0n"mT,cHG[HJ9`BfH0_H=3_`8+t&%lKRfo<i.c2RcdD2>l\Y#5bYW%2Vj#2<Zlbl21cNm9.@Fa@6e)0`%*3hYB*+FgjbR9p\4GsKMp(kLrS+/\N^1\o2>^Wju,u#SsNnH*Y[,V>@b2Bq>cdha:[6,XT!/&LrA^"`7OT?gJD84IsLkTa3CJ_D\%hV"1)N_IJ]'FuM^BLaq^US/BWOfY?i!&^.FB3'U%&1qbT3nb*G[F-1_/GtuR)ErKZ6<4/5!suBi!!risgB;!ic$Dk./Au=KR3Kt7%?W)5(P;sd6`5SUF@Nu.6^e>kXJtD;0E$So-i+En`H#-Kcpj+!h]BOq<X"mL7McjU,AdQ@XTUQ!+8-#iD&TZ/LL2M`m#eD"3H@qoR%)%;D"Bqc(`lRk.\!;8,##&1JUp:++<+Ue!E/UIL3D%6bIi4%orM'eHShob5gd=j8i(*I'feo'na<XZ(P<O5"l4m>f[5&5ZZ/Y)%8%?Ujh7Cp:ug7TFQf]%YuULI$a!ER>uO,=g8]a$dU'pD!hUqQR%8^9?6c!ObpGfHJlM2I8qC<(.C:8(7j(9RQ%uSXJ9U&=!U')289;%.UYN0Z#0Tt'(Q@W+;,A&]<Mf51-+tOO[/shB$N*`OgBdKB;Pr%(>'\^:&i,*Q3i:Yo;'g5Len^.dkPW.qc._O@plR9RBD\BN5=F&%3+rG<&pV:!b>Pi$OBF)!)!N2P=@AAd_)oUeHWZ>MlDV<4Ah#F]XO6jN)IdE%4(C*q@O)\BR<BIV1OuW?<E0;sN5fBnTGNaopIsQ<%E6*_%fFe`l@E4SJ'>>etL*b4Nb$ikD`Y[\2_sgqY2$1TI<j@87m=r(jIPCoHJ5lu+`$U:3&T-g\KD,d$.Dd91]o6P0e:<)9QOsf0%@^Tal']sEm^DI6<oEh%0R5?(6>U%cG;N/sWpktN_Qmq(HL/?e`f6=:\P_"QUI6c2&.jMG.E!!r_hA>+`4&0RberYLbP4<hXB19LE%Mr2`Ej]9&CWlkO%X2Cs1-c1qbbCiYCg2;O*Ad3[AWgN;.0'K4P:`cIsL7?8l>[n(dYI%IU-r?<c&Afs=@,IKQ=Qc^-pUQ8?<uD"S%$kgmp.fg2TX;_<5X>m3IE5iPlKgfUU6a'sO8V0bQY+4Wt'[UYGqMaOM;6-CD7QVP(QE&pDBiEc>$B;&aA[=#SBk+AUAd)6KN=3]:%$mIV(8Q+V!fEaWR3.2$U#ID6g!J(^e&DZ\8"&p_q$Q9IHZWYu/9XR68ZJR4B_oOb/&-DGlCVAKt@:sUDR,Oo]Z/aZ*1LaYpC@<*-%h<N/@8CLVYblk@&D;@bmBi!oNgV%7ECXj!5MoBHcfJU4hZDd(D)o<#qr="'GXtK]^FX>=elo70?)9N%*pRrnA&9<F2.:Lb]h$28r%6Ge0Y!ALStgm4j6>5/ej-9)VYSlR_&k;G\,*i:0kE^D<64%5qV$3]NK-:aa=D?pg,GdQigRJ)(Vr4-,#6J0hLJ'(H#1?q(ar8SU^%hn=F/LVo16a6Vp7^O?(8\*or_mOmA=:9]8U5gTV7U9J+>2JQeC7[RJ9.[I1_b_k\\JA="ZYadb!LScid,s\T5$51:eC<VUpngU[r%\g=_&L90T&=:nWgg3HI`_*B=%bfH\G8#*"Bi<a@J]hPCdF%3+VjGkW.K2l.^bYUFO)+V,$[>?MVSB)";YD1(l_`W#4,NV4^Zc8E"%=[b'B^`Xd;KfJ.W$YS9Q5p`+WPa'^5CdA\""#iK=$,UgB%;2[J*lcZ-pk1F9Zd(c;=:U)FEpa9)I3fq+ZbmDR"-6QiE@d(C-s'.)%eMDn0M8\q8JAK7g@&(jM-![j\WEg6iF(EG%<NdSj!':&s1qnM\Fu/cL^)8c<^_?!j^0+F17rb"S3#+D([]9Vm+QdG$iZum9[E)bl%2=$BT=H7330:ET3-O3MH2R#&im:8iLLjXka$T3<UUU&%U+Y!9i,Rt/n[U^"saIkT"k`!2pm58*g&0<'4=Vs7Z=T+qEq;EOEl$a?\%S1q>NAhR/SNJqSJ;#nB[E0r`uf'[3"j#e8rK\-MS#\n>nl&UYq>\?iF$Q:Qrf\bh:[?DXF[sqN.fErn_*;%5BWnI50R4bdIW+#c_%&4/FRBkDGe`427g#C$CXTA5#Wj`tU@h@tp`&BtNNiRZEP33<5O+fuB#eJsq\5s;^h88t^65lNCV/0&hA3&%Wc*r/W*iAB#s'tM=-%k;'cq?OS'&W3b#U,6TkVX(&5FSn#&\G'drD*[/E.<Y:;?g]KhB6i\+ue#_qMqO+FBJ9qcoRN5O`BVn$E"\;@!<lkP0_1HilRX6q3%&Y*__@psf,S#_llXXYX@J?JG?%n$]Q<F+"bfc!kFUb%)I#[B,,BiVr/$*_K99P>94Q*+:''b8/c)["l0dUpCtL=an]TU-tdCJ=ba%mKSsdp3XmOFQ#2F"@JVgoJ.d`e+m&QXh^n;J3P[)?n3k@`KpQO7A6g5noMt^_6nD.+PbFG8gi2c-MrL7K"7hl*jabe,MWm#+".I=%4Q:'`_'9(5c^IW;U*(\mTKD))7V[+lHJjL83WQaMiIoB(QI3?7='A08[h_KNfoC-ed2&e(,2cSd7FqSqK,Cr7Xg#Z$qM83[<GKFB%?(ZmCJq^\]WdS@Z/J;#j,oAENB%*Ijl&&oL48"%]N<VeBd0>pshZ4%k'-diadUbPg6FV,rX'V_=<Am922$lfY!Z*l-2^=8`@;Y<6%rESuNDG30;kQon*I9tl>5bc<!#o8uDJ72Jdi/BK.=Yo8>qF![MR.Q%WDRqN"6Xil8[416MX1##/kYcU]@T_!`On#;p%RH;1?r]NQ%+K7CBeNHJ'2"Vb##g\-Ug@[>3<jU@]'\lbio-K*o(bLo)PRa@]Ob:cZ2Edoq#*WQ$YNShq.I3#^(lmfF,D0Y@G600RT9FmD))\Mb%6O.f+J/_7]TT0ZueGjCu0"d30T<S$VF&G"\YZJ$7AjG6u&-+-4UU+u';S!IBW"D3i>1bY8-928$G,QmpW(5-B+B$rg2:<IF2SKhY%D8b62*,*I<R8MQBbp5d=\C[/YZ4I;_>=T%mK!"aN7\aRR=2hNK4=+[(I?e[DEqea]m0U/_5pTGXZR4W<)X7JDQZ;@W)&$Nlbo;DD%5mWub2+%o)4cRFt)UipC*\0SE#.eBr'=taI/#2hp&$d8;Ts99>rf3SQRHoU\n=Y8Fre&iUg+lqsISnLgESe&8B"DrM,fk>[q6>1!%^7_\`^`M_NA)JIWNS;_RAq6@P*`f"QF8-oSabgC#KVnjbU:GPo0*]a>I)M=bO67!B0'pRJ9#,F@UpgS8,]cJ0R5&MO3C[*"U@)n1%!kKWMTLmoh_T`m2.RY;OSGEn"96iCq&VsLs$ffXSd&/b/Q:CRpr#A%1i9:KlU.)`1I#eq'2N'!a3WgbX!1cS@(![>`fpLn/^M:.j%:9a]CROk]FY:r<n`d?Z,C)F^R:8%irXTl$1Q='T5^r+("$\rPV=5Y@D!pRPsTV<gm!i=_2#@;1PONbrZP_(T:jF:E=#TPC.OMQE-%?YR6$>24NI+c&s4.tSQ@-;Wgk.g2Q1\X8M=a7EDpRYIWU7bFEdHB]/jOu6/TU@jnZ+t<ACKU'U-Wq"Rl.o9oPl+%IqQKjPpQUA1)%':+N])8eG(`Ud"Zl7iEhT(tX7m88T$#.5h]SEn@-\IbHL_%m5+TUNK*42,bRlu!Pg9-1NU^2]eYoS?4q5*GthGo7h2i6fk5<X,ft%H;kU-Lk&nM3tmKmFCA@1I^&60&)HC,TmhgrB(:[rLa7s8NP;D)4c'F[L2[<UO<h+WRUMFeDA[c]dPYA-e,eD/O[2J/]LP"akZ1Yj%5c3M1-A5tOXMP,#U;;O8c9&UC[TLZWUr)RV,cIt+B$1e:@WS;Z9,]#].EnmXI(+5sZlRWe-TuK6_5R[4]g^G6=lYUTH1"g%(t'-^%oGf2eCu<W>1Y)PL'8XcYcAAl$a)P%j0cOaTZH_ra+F[B->hh.@7'gf!6AjEI(O\*^6IB%f$jEj"![*q(7r;+a0c,8B_jRdXP/Xd1%5_uCp-!=kn#$EfCj;V[Gb*j%\P*!N__m,Z^"uT:ag1:D&K;d0X(0.!V7E3Y-5bt+Y#e^R7$t2hdn6le*<02gsTiis#"%#g-MX-X<%A\e\H0e'2W]no3ZlqMKMjdO>"K85qMko,J[]HGQt!!:'05_-HM"?2$c83m>p0cClPaKU#Ci-/,d=A]@_F5%##0!7a9;)PnlcE#+C%+p8m;?U`/K^oIP.==Z*E;BOIMAfKI(I1D4,/'Vi5+sIaaTT0.A[Yfim_UT0P<7)G^QPE4+JE,"Vj_Uf&NnHN4aI2_&%Yb;9`oeK(%C<TmkHGjC'brL)TCKC3fJ4+9HU#6-52B8ce8TIZmX4I]N3N7YBhY\jp4b,d\D@U?WdXSmo-_c`t"i[J)&en%C`F<6a:GN("@Te@"%$b(.`Qj[J!S&,`-Wc9dKn[)hLI1dP^e!`8_0Yik0m"<:U6*hTe`ji\#Jgej<S)tmLO]G<`>.Igh3=W`A[?)[YM&*F-pq'CP&h.XL%c9\^oNptT31^qWhar:@H;R%e=`*PP6/ijD'Q=EK@054Mr"o<D`gnmRu6`R!W%k%>HBWXViYiZ:%(=PQOJt]M#8r%q,MU'l-2T<r1%1\2Ve?$CbJ8f+_+kkUVoLO&0_;ZZg&9)%8]=QE;Lj5QsQb3Zu5ilR$[]pRSb9CbJOZN3mdAgpP'5HDF$4!#W2@0VC\S6$/TAh"&P%?VC])HHI^lEIhg!*bab+gW9coXei2WTP_:9iGkH%99]s*!HX&10c2a,'-R.36(tbBCK`R/09<(7a+QTe8X>!/SSe;+%_0(FHF;1%%X@"h3<0%I(c%B3`ghir5G-Dtj[4mGGTn>*+J39R9E!C0C!W\t(b`S@%)r<dtjK'+'i$`9Y!=eOo;#r,C-h;XE==&j$:1:k<Cb]MF%V,F<#1p%OrLQd\44A933e9/FJLs3=;IA#m!%6Ob,Alh&q`X+-,<OIjr>2-.@@0GC?6Fmck%bka:lIfNQ(^8iq7[($UA^[O#i1[8M%3CIF>$;5$4Q.D*U_*,]DlV9!j)FmjF$dPp[#m(6lC^i<RH<IR_j,o_B!(9*3)#f4[@\1r9%3GieG;V;bV^%?=AX_g>T?J'.Q"Ra-%eW(eFQ%m9_Gp*cX%mr`N)$IIREHENF2H&hV1W94T^-&l<?K7$b5,&tS&]A>E/DQt/=3sW6X(5ZFHp162M/6[ahPt+uhIc)=[M)0p%@6W8<7O4$/A(2);DdgM]TZ3pF:+j4c:od6s%@rgddK("BoMuMO!`f]'p<2Z("q_nY#*dC!lbp<O7:SlUfe%=oi;u(W13mS]iMq/c%Ye)Zc!]u^gW%CG<=a`/#+U4qr31DF"TYSpQJT46!!`Of*U\1nWAd43oDK7m>I^,D>UbIN9<fO5l_\V'l_kQt9,;ht#8?HAX7GYmC%ipK(n;=$?7kZ?b%BL!hc`>V&"0=V<6CZ#1.+S[t4E"l`bcBod$.EW?^-"^udi'Mue8(!1gTW2`DT!JUU&F@)60X5B>FS)XQ--V;]%][A$]42/<"?t*+\^sD4<Kuuk.#g([8A@p=lEJ%r.@.-XiQ`AH&*kao5]2QQX>L84bk12/Rjp)As^(Gq>aWkb4h-d.tQPF3m2H9pl%A4o%`,##<;2;1&`m3j%apKfF="S<m4i!@GRdnECaT?nA=7foT_62;\*r=5,_dSd9Q%aQF'VBRmgdJt#dk%_IYS3W,`B1.2h=!il`%M)XQ/>TX[JO6$m8NmAWFR\jm3Rb3]Bedeeh$Bnq4(56P"3E])+U6<O?"DU'#MMKY2RFO/*rK$H6U)n5Y`Q<XpoV]<Oc.qu>/osH:%I2,l?Q7Zk4<&V>`N.TYG4HOscK,a[A-S[g,[ek&iG#-EbbBdpqQus2q23cgXmOgWE.(5YX0_jXHUbUtKgsj%$.<fc6-0DsTgs%s2%,**%SThAl"HbNd!UiP@YDAP?5eYD>3[bZWl/Se"fMpHWIcaA\WX(LR4WHNP]81i:Cg+?lOM09]TXRFU(!hj9VrTI(2SJB^s9sU5s%\M`I#"_O2IYbfu@THjpqSmch#7+<j*mRUl;h)/C,<_op27Q')kZKnYjOo-fA/i%rUM=TH5X*MI(WHIH9>Dd(E>n,b&M05#!ULRV9%5UnYcX/4A>>\>Xh/hAoli.n,>YZgPSFjI&11L9:s;sMdK+6,P[DR/2^Q;BM/`S._I\g6@D:T'\Vj]V(h\nG`U4dU%A&D8\$/riiW%bQXG,(\l$A(S2r$Kk@3]'S\`]FFV<ce*&PpW:V@H\N5CXaIruu58mpdHY4db3V<flfRl'QqiF(0>BO8!r`hp1H)b=)0oteWA^C%*%,tjkg+L0XAkOPAOju2NfUg*M=>39([,bdB!--jIqpL0[P\!X#/ZfWH%5'BOoRL:K)!j]h9\XOV\i$i`V5Ym4abf**?!^gER>dCK'%/U%T6^K@dHLelAm`a$&3Wuobgj^JB\lh!l]`K$T5'BK:cAI$73:G,"DYuEh]/pB9%E>p\DF5'nlbEL+TcSFABH1M@eMn;*^`/nDi%>Fo(DaFZ`%<M'DFpr,9@YKEl7rkIg5gZiWIZJP<Yr=8/5?lODJnsjtS'tUUubJkYJ@>kaLfu?kC`jX7[H[^a+O`ONFqkaP2&=[:`%5LpZ]Nal[3`#$/o:+ku3@r:G)$omk%(FAgc4%iCjobjfY&M$[;,9s^@@rc/9-Y^"C:^oUPY4ZII].pjD="(O9-C<Qr"^0GpN',sa%ggdp::iaBi./G2;6A9l<BYfsmgf*l=J]RKc-igej><d9#EFHc*'R3kN'i;L_FBk?UBK$kH)0a(mKZ;!3s6--*]g=8?60eou4fE*7%-+UO5H$W;,0iqi'G;4*R-ZrW1L1ePhK,$f0n^?*2"<,ki"V2En!rQ`iE/,-W2[jmYlkLpReG%s(JqT&sq(!7Q%g`T!KnG">UH+?U%&TAN>\fnT4%:4X;4.R2s">8]iG\(ao/o,1a$32^N8:Kq`WthK$DZ"?q.8S</_)\:)cgY0/n(JTT[Mpk4m+^qXPsF6dDkL?QnnfGg%i*.Nf+F=n![W`J(hqZuK_(i1'LdLhoK6dnIC-;*GHHR&NB`YoL;pRUo[m.K:&WW(](mFQ/hoK"973FEui[ngU6[W)>DhksQh7Qt/%+eG77gYm1LT\X(L8s/LF3/a&Vg'W^[Mr0rh!%s)pW*1!BTNe-&/fJUd*B,[]aAX>SFAZpQBAQZba=SmM)*^%>2EFalLg'jAnOf3_%45AogrKBRYRr8[fEI6rYUH3a9\1R\l$1l-EmER?ig6UVDMRl6bbs*kcD;Rt&"k`OT:f?8Q@4fA3"?4mI\S]\V")Bu'6P*4$GbMY5%2q/U\bj:1n`CRl,Korh=k91=Q&oDV<jN/9QMaSEiJ:hJr3b*Fobn_XT;9%;KDqt#Yfja`,guF.B_Vl[Ye1=g[nIT:=Q7]<j6W!HG%*0>7&+=iU,[##&^"NZo$bLXEf[T##0DGjkY]7U,MYm#@fKC]PW"]FkWfQQGBK4#'",sUGu@,'=0UaEjBi5s=2&boQ->u(9kf@D0q%>JP$TJq&?SXb;FYJSU`ZcC.tlR(fSWX_h$leh:bi;J&ot:TPrKKj!Rbe^"@Lr-TZ'Ob0Mb`>4=>Y3H'j$V:A]SmT:echiSiD."sX%3'AE\or,n!hm?RO(6%q'C>o"RlXeU1P+R5tC4TPmlQt*@k$4G1LVqnAWPuf/>0NYh6LrdY`_JC*Ch*HuW!-oOo0OX9Od6PI<eT0O%XO%cV(7DLA-(l#b0e]*+>)%5sWCUG5d8)2>i&7^OB\K6,R9sW2A;sI-'4b9G[#O[/C#eZO9,k=TdN5OP9q2Ce'5QqB8rJR!1uO?F%kkt0CdcTF'OZ%"VUd_s-Ng`(6^LfEbp97f7-]Jo'o5IP.7f.-2/6GAV(/n9K1g7s^#dXdTm6e!Xqkhd#l_I&sBXE8$=p\ul^sP?I%Qk]ug#98tXc?@TKiDnk*5da=7ju826A4(m#N2$9`/0"a*78&nUq^0^"Q@;GXBS!MCLgL@B(*`rL+?,+B?+9QW6*q0dc\TdMM&*.$%%#d-$<YV\,EbHQdirVT++A:Hr'O$0K&QK/D/S$W_BYg@\\FZfuKqQDD1/V+f!\L&H//sIu)2*lNqr5rQTqUBA=]RG]GaXtCr4U)*%cVtPfe&G#T/98l7$!FSp'\^+EZgbl0MK$[S@c+$<'0HYb+bDC,G;a8gSV8n2mul1'h@QD??Ca%Y7X/!d3=@89`kXjbinrE0iZc[b%[b6!tP*Y5kmbl>6_d:A"D&.D?11^oaD9$ToZY%%XFldXEnTF.aJi&CJNJe&eA4KRuroVGA@7Rs_Cl$u26"e>Vr-^qEdq6TNR^t[V%ip&]'fjtVJ('.iB\Lth%)Ife9LtU3^9U1E:8.gNmH3ppS3K'A[=_oD>W5Umo?5W1A!OK/!M\6DME2179/Z]3tl^KO8klXS`Y<Ads%rlLM'A_6Y#Qc8JC?VJ28@%jL3Hs(/lg/!6%_SquX(sHs.lF]LbAr08gAUaeoBbb[<J6DdTF.*E&jaSttF;&6iQ>QLFbjt&KRls_[%pnqRHDaLPjG4f)OAsn),M\1VF4rQc9DSdq;6qTn90T5i#o\EijXIf@Thh5.p`>C$4_CXB;W%&=r/4&n:?/CB?quFlGOt_gc;1:&%%ZTKMNY;]mU_Bq_iK.oq<IW`D0aXjKL?XJIh8YY>TR&,A)6NSqLMmu/6@?tk5jtD?@Mcch8^-S,ti(k61M_N>uQp)c/Af9Vh^/(h:%4%#+#0>K-+$dp/U0+.t.J_>U@7AD??9"XSuB1-mAq6Jdj]l[BsjuDarE*7j1pgA_+bJ9@".a43tF\mqe`Ki[-?UCDs:D(o+ag+GI%PlApm7@[3A_i0l:9t7I(b//]%jqh!?f4^UbVCW.M!ZEMglp^dub+_:.jeE%&144hXI0*uJcQ?qN"(cc"opII0QB.&5@/slT_*hQ!%k/e[r+rVhe=;?JgVTIid5&Z`</<lD:-&VjfMQW'e9A&CiHb)MKKj".JOsI(f\W[FQ+Md=kN8d9hjWI#0F-'pXe%8p$E>iek0WO"Y%=U*BB)B0;89*:o*JWckG"PQ8c.L.bEU1BN9fdfq*b.jJFKp'D(;]Z]&=dIgH^,?lmU>-I?a3BcYMZ[VuJgH>KS_ol=ZFhQdQ+L/(%1a7BdQ7OiPLd22<('Z)tDO)i46(fMsQ3P9-JgF%lgQGhn=\9a7WA.)4*C92f#>>oN#8IJ&9ia$j\s"JaXY>)*9t"$a/8gn-N(bl-%9fBtRU<+1fHe.tdahgSU,&"8=+H.*n=W5p4k+]t,e0ZKn0Nf"d:C3I@>=)i8\p:S8Z:m0,ZA$fT[M(&^"08pbTWF)C<Z!7.j07Ig%5ZnrFEkd12m"Bn*HN7VW/5]1CA_@<Qn*gLF<G`/kX9QhA>n&1K+Nd%H9O[6]PbfAR(hjUo9/kSV6s9N6GPXYKdKk[p+D%CLY0%<<%_o5uX2X*]R8k,rORK<pVr]-t^,Z-H7dPk$hDV_60j<X3tM4`'e&7m#ZJ'(PP=VqO)+bM0NMl3L$HAD5Rc^78Vo!U2*;O5@4c\Oj/%6534\jVLf1f-ij6OKtC;Q(U".%IVL;M'u#n'?eRN.#\%'ck]#Pg^'#ODPA[-m&%@`.#Sn"+%60@bAbMC0;'l>AZ,k@TId]o.5bn6%/:DL<P&?q/M2ZW[AS$.,ZG1VBe%*M$qFE',3*AN[C=6WI[Se#\R]IS..:5&;)W?SX:)8V^J2qk[0Q:((H*U,-n!,k8rf(&1Gd9*K%o>Qp4O!0K&3*C\@!_Cb#_TZC%=j#9V?UKZBi+/7B/2K;k(kq\9?SGWAB?i'V2P[[W:pL`:bd5&TZEQK(^2@dS9Ska7;!77"MC^j:%I;W7SA>a2F]a:1HYPEm6SSm[1"Bf--*X.60,=8G59Fhq(Q8$n=_o,lb@jX>srk@<qBehbnHd3'M/6Jl&d^dH(CFEqfgGApt!ZW//%?ej9j)&rH5GNp/BNSTYg<>RJMBXts<h2d<!5fW64%APOb/G:goQ*H`o!D2cipS1ga`l0R>^^40qF(5PSOVS=n!4d@k/=$jp[Z_FF%:shPI+oqQZ#]<Hi9_ahR'T9_g$Ookt'"R\4`%F]r!YW-#]d+H"$rY^QKnu;n&-<H%cY^!V>TV[XD?1Os2R$$ZLdf3#A2AiK40+P=%(ESm><g+#O?&0a_*#?mCAjB]_/;RDF,oRQ@9Ve1IL'8!DrQ+h:IZ)0/_1b<eQ?!^M@@,T!2\hYG9NbdR..#G%-]kR]d(c%Ub7j-^%K4UP:QNfMhp?H!==;H,>9f*6$Rb/K+fK@([Jt:3U"UB32C%C=T/.*r,'F7,-!fJe4>fbM;D)*^H/9G-%S]!EVbG>3SP&s."lcXc(%YlZdn8gWHBaa5<0laC-YVS@#$Acr#>[6(FUb^K`<(1he.q=QGKgCjFAeKu4t\0*d1^9FeT1A)AeQRT5tZ>toiN19Wh%###K/(S/,%>Qado]YRFNW'nA:-q1Bb<n)7GGdO2eASN^0Lp$q*/]A[j:I&ed/ZFl9gk'Rq$i,Z/N2(P=?f=hijLsuY-[t)^YtRK\J'_MI2NKao%`@q.BD+&0j%DYuZPm6YVDLs"AC=?2<.JCcpg/VgCH\I$G=l<V#@/9AIH_m@R'0#?Ep]M!g_0c-ObONcJrfcnZ)+"GCkN9J+LaZd&%?56LV2$'n>QBCTa&RQCiJaaq@YJ`Qmi$,n,Y'8h/^>aaT3Y1.a/d):OMQdooHeuP>[6Bhm6K0L)39Qk6]dZIEhsig+.K]CFLtWgT%Ht?"o8aR>`Q%>dPaXkPkV?GsGHtE5-g$/t@RZ=)(YC-@$'Mr't?!1_%0BDG9AB__H!ZoEa+ruEd1l6UVcl=6q5e\#NG&'h5X.^9q%$i*DK+S>_(^5<4T=s@>D#eA$eOfp1Z^_/DYY:(nF10N//a%\F/hCCESL.]p1L/3\(+E4NC*HcN#9AD%m*E*E,`?0?[V_`:q1^mCH%]sTLMp6iEl*X<;&^qK<jlMdNk1.K=@aJQXk3S7Ja_0S:7Qq/0D@BTsS\5+o]K>;<?)DP'l/=ia<MtDn$+[TZJH<jb1[c"eN(MV]m%=4irk&ufVQXqqPglgiYH6XHHZ4(c&j#Urqh&73sf,j,BEY2O,Bo3KsG&ZY)u#dKIkI_f=;Y5r-J^g6,CG>#8JVdjR&g(hgT"HA$"%3YfI=Xt(AYCOBPrffTD*.8aAj"MA.DF_*eu[D&$2e('d^`ekfQ<L)mO=i6Y;]mUQ"fmgN@"M1nc]%5rQJe\G:n&DoTjfLQk-Hja^%Yj!nKF7$+3]NMC>41]]#*R)52!6^Hgre:f0K3[*VI+@;fZ<'e<M/`]L'Zu]1iemS&]%i%MNhL<Ai<j-(f#BYc'fNSmJT-;eAdH)m%eKbhbVR:".puk=@"Mf/%a^MB$=@%&h>>YpVP'8]4_?ga#.r%X0J)9fuJ0sbI!H/u?HdZrY7hlHS\ehsn2LIQ:DB5<TK%u7TBI:Yd%Xqid3K\?iP77)"-l95a[R`)OhBu-&Uf*VL_MT$%Jl-4&#DBs]V>E;iEJS[L;dhBZ#BR5M[]7@!pN3\8e]N1?FS<LH`k`ZU/]4e=0%0dj$p3/elV<r<uQ&u8P4k2C%[WAR$+!GY&/%lahRV\M(8>^IC<HAqA%9'^IZpP-%!-_NCC!m7[u%^E$I:3CtN>%o6_f^c".N+VG`%Bk97C^?Q/AAV4cOrW:N*M;<,910R>X-b("qmubh-Kn0Mu@'ihFO.aG9BS@6908.bQE5:-ggPf12B$V9gQ(Adr5FBj@$m]GU@'opY%@>eODhiH02gp6#Ld>FkQL&OAO7FX2P(V$'QP[7%"9f^B?V9I:e$l:Ur&Cbf&m)B1N%;06LU:b68=\nNeK=Iq#fnF1kCCB$\-&8`C%\i+E/9ir84k&i:1/)>1,lN>AR`=>hi!G5mKcS^*,=(N50[?9UWo"7dLSQo2V\0Q"k]]8A,frN@P.q85KO]YXffST:@Z>p3$_ALJ=%MoK::/8P65@p'\pA[T7WXK'M#4gD*4?a73#_Qkrlbm&/<A8@6jS\\m6k?A*lI;92K3Rs9p<lEitFCZjOs1J^>RoEF[&ain#=\JB!%#V%@Dq\V_>.P$MVW(gj"JO><oX;oG\4)e,$l0[HBK?=N'X(-e)$3Si@2jKYd8rikEZ;T@p'Je+?@s$?q#UPb$MbMp6^p;t5L1ifM%XNE-'r^CBE:BF(>TX$&`?"Qu;&Y%sNE`6*IoGE1_C+KKtDnf+L7J&HD-'a`F"pBg8b">#7KbXV>maW&^Gq7UBM;l3,Q'GUcU0ugj%iiVDKh,ID\*Y@TE-nB@Uqdm'"#K*4Rc"$uRMs9K]$D%?N$\kr2mD8PWL9e\;k,a0?!X;&:+J>f,cS.\-6WqMP_icgKX>&"2$RdM7%O@nD,<W[SLcYk54LcqBB),OB%``e]:b$'PU[",HVY*I1fJ?l2#2]0CbPa,r5esdN!b*28a"UJZC^5\e9Moc<qI`kF96;gPHa^h4K%EKcm6$6ufc_.;Y.]RDY>H/KlAHnniertD<I9NF8Yii@[QRYI<RqARUh`PEFR#hj$e^:<Sa-7^jKFLlLnWWc'==nD*?a;VJeZ5,d<%+@RuG2.+?BaND^SlEUN5b#2XnVZY#_1mSICDg-CBO5)O>_+8$D<>%Pt-DU3WeiE4gn%/<^--2-l&4AA5?a5'mH*"qg%Jc+.*k,Oj%"d"umS:1!2M$/4+,W/5eL8s6ca3'IbalBG>7$h[s*\75]8DjZ4'aAtF2ie\C#3pi]8qWUqP/g24UZ;"@>H(5YR`NY<.Rd)uA;+?L%-#m9[<]oMYc8pNDXPdIN#>-*hj]_kB>X2?T"KEU.qP(6D<]8Pp<kNSAr:EEgKp@&D,dPjM8!6DD=t"'rOfUYd>Fc"^Q&7S&V$<(t%(<3I/,V'm/Aj;8c-,F=nI2(b(@T):+A5-8`=ZI?sQPiIthQ,I]K!N7n=3=??(qA3o-n@6MB'+iRd`NpO:fcPiQ8,MYF]OKH?Vjd\%kT7'rVIn,QTd$23A/$G_ImI3TY[r6'5Zq4l8ZeG$X*j5Yh%u<@MjEqf:@pj\"CN-c,3s#$BEp+?6k(l3oliUnhpm_dgkdZ-`/A,*%<I%.S/%g#-YQDh%8FGj%/62n1=C,bWl]etA8ZZ,BlsCmdO)5JrC8<=i'*o?XL_Zt&2!DJ1XB<NfH^=nY@R=2!p\\L)U)";/!_0Dg%]nSKl,-W7t3D0;QYX3Ai$@DAG&c+i=CsYn-Q%f.r`im7fM.@?L'g]ED-[QT.H5+QXkZ+Rf;.(""<W%7Vi\u,tJ"s[N-Ee%gqtUeT%]F+$d'F]8%&D;(]ntO'i%"VV6lmgN8%:?_?]0N2S\3UpQ(!7KTV)=pSU[^L/X)5-gp;L6i#>qa20Q*/hf:J;8<D`)ZZbKqLX[s%b%XArrM#Ec)?M1>U16sl`i(a0b+ctXfa^:p,fL59#KhjDr;Ua.6t'q%lR2>s6le]\d8(LskB/Jj4C`k]kl_C?>f>h<;4<CA4UF,=#L%@qpSbWm`/mS$!);F[h+d@\9F>U`uXrq#_F:F]dW;AC]Z4Erf;^1"EpE<N&Y082jWcOpJ^u`i?m9>ic?nMEiR'>\9ug,A%"V\le1j%"]Rnl]S`"IT'A)b-ZH*<"UK^LV@'.-o3[6O@Q"I@fdp.EYZRfBTi?#WR&#A1MT]W:e_s)Q%hWQi3N<@t6+7[J<G&:#:1UeNW_i_-%W(us^"/-VZ_Eh"hY5c6;Wbcq,:@_>ikgT=V`mWr=78N;_?3NG+OAD[mbYB01nWAZ',tOd(,c;-]'aepFYY+HJVS^me5c(KH</FbA%RQ?m&o/AP7>@8Q"<-V:,Rc`ZKWh7qmmm<mLFKep];aK]aLLX^AmJrK92_PoSkKLl@!l)5k^*,)91%eDX@&\]T$!(eNq/m-G.fQNZ%Wf*+!]CAEO6r7X9X!a&:'E!iTq<\QRMQ.cLIAsHF<D=P98OZ>c\ZQ_nPr/Pa,U-7LX-839j=09gihP)(,0Rcsibq(LJrY`'T74N4%W"jT>B=r%[OG21mHEeo8kD+MM;$fe&%:E-@30</.0IgD[._ob=;$YH;c\k62g^'f3W2PL_4^tB;'_S\B]Y$qfcAKd]M2H:GYL-!2%*Q$VX&[cl+1_:D*68)\*<4kM92hHbkh'CDb5srVmaNM8)W1YD$rt$_\";$im`'f5/HX/ju:naHu0*i;.G5V]g05S>Tl8Jq?o3q_Y%OVCb&7MC@\?#OZ=$rhm%>(7-_Qo`q/5XgF6b]!J0U<dJepf"i*C`?dYl"B#EWec&]VbPH0YYV<4k!5QEX;>g&76ZF8@]nd`@KAb-%?=6Q+$M9RTW2BX2pOo+^;>/)-_U-E$$e;O!o2JTk2J/:$(,84d>*a3i@B$:Ib(Q?1RP%dNWM_EU%<"5Pn,1tUV\>%uF*W0Pcr6kE%TXY?kBqUXkH&CD-(8WjEVc\dC"rY3TPWV;]'"h-U#Q"85SRN:bY@-)K0W?d7VtbW+0@]6*L-%r(a:9E^*hZH[6QkF&32^8B2A1RM%+HkZ""Mb_e&*KjREk4nU5\\,FR<LnrMa5a!21?cF@De'5_W`dehgeXe+n`$q2anu2ZX2!Q;$FkQQFB0>%%3r]D7[41H3W([^n/@n%?!HQN)f1E$)Z5Mtbq1)P?qo\MRq`kMJ=8+:Y(8*/;iA_dBaTQ*PC/:s>ngHOU1sUT!DUHI4B"";:J[MF1.'rsR6k@TP)3VE!1G(X%)_b1lcKb78R4e6.%@$+_eg8,.GdUa]?Q`:_5`J")ctf-5*>h^'h1F>u'N;s%Rc9$[7I]d>;G7ru/7/h7D9,Bn9Xe6n"MrTID/XkP%A!Wkp^6CWQOcqcV.0nRFG\L!$JmGssS&#6=FSk+q,+!1Z,Gj:<;%cN,!aLVtX2;it/Z#T9`0Q#J$IM1:92V;_+7+`JT!r2H/%^Uh%>pYl7XR`;s`)>NE&-WDK.Gd)Lk05E9f"YS%dN&>-TTu*NXTY_iAQNAkZV!rd9i<FckKK8kMP:bbin]u"KE[44Y.RO[9*e(&*oTGM%m`6Q?:qE3,#p*f.g,GW<Z:E;<KdY\F2_MA1X.)@tdn+2F6GnUQ$h9]uP>XQVq_ssc\LDZa8]er=m0/]VkH-rXC%$B)$<3_L*d@;`%.d>!H]$)*c3Z[T^-L#oPE7/=,Bt/tpY>%:1Bg>;m0iqA#cPMY,P*Q"kBr!.-$&fgoMXKc-0,A7d;&O0a.J;p]3\F!,*\Es=B8GnL%Bo2oUfK70$VJ:3#^:ted_g6lEO<UY]7M86n:iL=Q.Ir7UOU$B#X!)D7g/&Cn9goF)"j2Cb6$Fl`m8YX5A<6GaSeb\sd>l1gJ4ssX%@8K\*aeR[4^)K1lL3G[o-efis'A1^)SWdF[NfMG8VN1XMl6uN_;.P3>oJ=KZ1>@PqdunH)Mq^!-D9#]l.ga5=Ba@9aZrqaf]/q1I%:E4k"FTnkL&A;^k8Z9$fEHrDVL8!0Cd^jK0_r-OI?H#.6W:Y@L!<P'07Yg(:/C\p$Ac2lNTN5'J^?0\7I#tQY-6+NLXsd!s05J`T%SF^`^0<T>[XY\X<l&[ZZeOSR[NDTj?..XrGM[Q.Rb=B#VW%;c(>p(,3WU7$L2b0"*K2/jnPP`s8(!%iA-'YX<rgfHX6F1'6jkZ+3%3EjH;C"RhaYU7<m_a54g,1&Eer51[og#Nmk?FF]84BnoM)/+LVC9jOLjPOTO5*`8/=?4\oVP4R3T=K3N>r\72kU.1c9C+As\U_U\%_QnnKIP\PJP;UM^4&iorjV&"J[HZqa0)*t+dKLD>0)9_Ch`W*?1i>2#*c.)th-:>R3MPIC,0R@;p,7[BTFDN;C8p^DeV<<##II1f%e[9&N`43H.g?rAs$n,R84(P,V3kJ6`jkB5;oPLN@H4CL@b/]1^27a8'V2"5ipk%mr1#,)ZDC$,N#3ChEMlPl0.H7W1<jt:>>"Y;:%]KYe>bQn,Z;$rB1l@2ni^r'%O)h@CCe^Sj'55nMi);^7*-NL1CQBZZ#;A$'\TUoa#@XML^e#g"L_iDn-$\co=D,8`e;QrG;Ljl]^%rk]qdM?Z&jPnb%eFRW-V1ou?a<>G&i:^m6Oa#u%dM+[6s!`)ppN?cj#FFBF1j+<rYWflI'?L`[W)TPeV8An-QEWDkT<EEon7gIL+%D_8)!Nl&rjL$oIlFBC:?[d829,.Dh;KjYj9G&pmq6ZG2]rUC8LDqpHHZ)mna,4+6Hib.t5@).l<"6(&?3h:o\10b!i!/qE!c:4lS%].]h#"$:8(D$V+'/&-_3!Yde],7R`5Ju?+'20gq'4Qp\ih=,WF]CT-?>6rpTI_qVnI]f]s,QGa/K;&U";g?%0$3DSI^ZS];>kSbA%8JbM,K36uni<2-Y+deCg.t3DlJcIp*hgG>I^Ig>E48&.@a(Z&FZ)?dhf<H(q**:+b]d?TCYTiOkhc0Kp`CtHM76W%UB.*DS`b.Pn%`?&Ne):T1//UMR+(1>7YA>R9tGN$>1VIU^*m?RsfL4C8`Gr5gIo,@.,V;cKVgPrsj%[^&58"#\BdaDT^7dVDO27+RL52FkN7q.:9%o18dg$Z*_^8sU4gbks6O>)kaKYVJM?#dGklX[EkEn6&\)F`oEH^Ark-LE?<T8;BF/pC8n[aA4Y%0>CNJW3[.&e=SB)`=Qj67SuBV%bkCTTYjt&ecuKs>QI!XUdjI52IG`?"_^%Ml4HZt.T/llQL<"5KkD"._$=EMHn7MZq%gQYVDL=B_#N4n+ZY-7>@;O+'#sl;^SmqIa%[htVo"8NN)MX43hKh229\<L6a^re\R=A"jBq&)BO%.q^\N=`%a]Q>[(>$@'IpR@.?MSQgnOqF'`[A5G)YtfMZ0'oWcGq&$r$S*A(%Ycp#$\-b9,YgDiUK"?6R+Ul%bc:,F6`!Z@BXj:hS,M`+5(:dE&W9ehILCbrmhptN2MJe10$]Gh'j)>*(<+%k,D)"R.B@!dH-<3k_%5uG(&PkRHIaVPUO1HqKMW1)I-,ae:a3LmIr.>?Jg@+/+5KeIEE7rB)PPrO9U^]%\4[h837ErK/f*,t0\k'13u/Mp_Ba@'%dj.TLp%7)ro@R6+V%2H=m][BW(F2VjZ%NOTM2B]22FHsn2KCV"9oGDpHroepW9fTaURV9*]O_G-BrWFK`9a;TWc@NQ&:3.oCMJU^\Ce&.;i%3N&=@P:#s/0eD7$9h7fXZ<:ft\SRDheT3sG5KVlFN^*8Xc^1b_SWp)$13*i.r7\DplB+>kJm`]%l*Y;C;GZ]E"Of#14]"8@GH7dT%#`H[T8;6(I]58T\4eK:OX<N5k\96LK_27KTW\-::I2302CIOH7*$Go)p(^pi3i3NWJRg.?rOc%OTJAffHr?oO/PXrXL)2`Ch/9[D%5R[<sOYJ'5q2t:^O'm9F6b4_]%E)VY!q"P4Ca/?_!1;oq%VOcZj$VB7aW)#e<E(]N7G4TAeG[!"<`PXn!Rp:o,$9/@k2iaL%/.6h%a.F!=89?,UXs>r^\kg^Vic@ShM1ID^<*&MD\m[-`rfK0>l4!#Ob<;]9,IE.*jDEI)?DL=Y$eTDg(-;BIe(u12..qQd-u1KO4/f5$%E?-<2$a(7j?RarKC;\MXN__ul>Q6,(a>.><#<B^H//^Xh0NaCd!V@7E*C7X`5PY^eC34_MX.-`!80a8/gMN;HN=>-I[,^eO81D@:%o2[)\b1(\HBgDjI(j]NSp7`:!=,pa?o5iW??;_i</UGg^B7%,ZlAA=Mo%'.]Z4cUC`\Bk5-5MY,J5;^DhL&Tp.Y/8,-])4n:6p<M%LH%AZP1XN*d:6'<n(5YOG8@XOSjg<bphu&$*b$D(/3Ru-G\gXrM6p@CG_R7k<<]c%C$.->4-72?CfA3b<@-S;@)k*#`35V\8Ynof%2rqhIFb?,V?e/6oPK'F$9-cKMJS:Mr(4;285oA<d?koDS#_?^[Sfb.,5?N7hB#W2O_f_k&;]I*6>$uS'J]!M,/WhoRh\@8('Zq5S%VV/n0g9E,gj8+Zd0/+u_kb+_rq>IOU=R;qPcp'M`<DVlc%(3$P6eIchC372;aH$<Ymjf6G>CM-4`$?(nQlT$GH"<]&(""8CgUE)G%QL*+%=6P0C?/7[d>Oj\e4`g`Iq(R][_1H<snbho26fCt1!1`]jrWF/&UG_F/bT(lU8nnAqUkg&8iD4%[NjVFNX9c+^TYn5If#R1.%`NGq1ZKQ:Ba[CN*N3>C]T<+O%+@e]NPXRAib9fag]mBVG($CRm__+=;Yh>s9`Zi98L\]SB4opX1F"sLpJ7`"(*o6"W91t.f/s@<_%`2YAXXEhEOSLfMd0+4S'B8/X=<lBdXq(*ar:^P40nRj46ec6G-dN-m.&E_rB</W;<T%JsL.KEM%+BC3[@,A'_"qS3%'[:392pSN`%b<RO@YYFK'ctiLR#35m9[PPK$itNL9it4<s5]PAr.8d2n$loWs)S.RD<bg$sFsI0La"R;$;RHS8-1nQ(4NlJ.5=@I3Dtd\]W(I5P%Mh(DY0I^WI?6Z%EMjqPXjTV%p<2j!::H#[%k:(Lg,[hF>JJWj("rOmeA)%L$K*AAVBZM6%:f$$jj5J@e\4reC/,_)R;.2ab!&&@p%-,O#"^q:+N$eUKqWH><<s';'\>V#tIg<la6Gi#2l\-[)?Wm:i+0cp5u`4us>RX5Z9btBO4*Gb%/.6oA=c9YI0>[:m[IedT47W=TL%i0-0KJre^OML#P_h(_BBVt=Ct//_Ik\7&5S)1>O.:kF69!=g0KjGn=3CNi,W*XW9F=BKghT.J"ebHEBQWAqk'PdY0LS\]chA.7QP%<Cl.FZN46_r:33Y#[\uT#B2M^iJ^Mh.@+CF-P61"@;;%_4\QYKOn-""TB2hck:k-6F$GE4LSB(LL1,'5-kod!f&;c`&X`2<!>8+T%$5=jO)Cl<78W6"-]u2.%QLc9f4<qI'^aNCr,E.A=lDTLPTt;%8Q-eRT4&A=SU_0=l[_F,3#Sp1j&-J&$"CJ\C9,W$uBJM&cDmha9%!sXZF*>H9(nDghu'N$,l,[Rn&Waa^8V2?01O&)a*C5g*D9O']r,/F6NW]d1\Id@WNU$>RAg0sn5UP4%DB$0>4qReim1uXLr(G/rf%G]rmG_n$\kh^XlPYnZ]IJ.YLjQZfJ#o!%N!@J#^H#4G0FS.im[^*)JOi>FdZIFN#9)3[f$C#L*E\FMm(`eX53a9P]+`)qdIG)Uf5%k0V]=<^l@:gU&1sA@tRS$n5B%;9+qBAkjDbefGLX._FZAAP7G9/b[0G?)m!G^S5f%b$$YIDB=TZgti>jQT3DA)<3)qC_h*]qfn(?%m9q5:ns,s`00Zc&DU&u\TYEou.&5ktg6iq4MD!TbJ?5SiWf%]DQ+p&JZ2Fs;@H7OH)`&0=!BJrp'>7D=KOJQ^30o2jG<QoUfU+pb%'!chlb8p^T<C46_UUQcWRe'VY`D#>L@oO2[`ou'L`@NQ:&&P&%Y2.t":0?V7CoLno[G(&CSNf[Y#[:oeR%5DQjslU97(f/]\$d><%(D.CEU<78)HrdkQ>7UNW7lO-25C3",2t3-M1*19g6Qn,Keh(C0"!22O=ZFF[pI<UbT(a&5"J84YSV$SO+Wl_@-mY%,0\';<kK[r*%.W%WRR8SPs;b8*R&r=78fcWce8r6(KXLh2d2_:>JjZM;>4m(;!bo**XilrVX#6"iC>b#N\+Nmp(M$4hLF#lHYV6]g%^(OIiD8A)l%jM__3P@@QmN3B%Jo8[bqKmJ?>RZeHF,kR'MOs$5k&c!;;PJO?R57EuK)qC=@l$Z:6m#(n^@%R)I)LV0&>=qIC!mMr!:/d2hEW!dJ%=+kMos5Ga-!BEMJ-dj;?Rbu@f.N;8[&$H88asT$5"d9!(7W_cm;R=[Yh.:W6n;@U%Xs)iE^sio'_-;((GY>Fnhd%+e`Oh*")qVI4%3&VfkHrX-/<!Hr3f>GjL=W@VW$Yi^t<GEq^[MsV;87:/WI$TiiamW4qXqreEpKUmO?=g8U;!$3_;OTc/?m0Cp;11HQaLO*D1K>$c%+hP7XkF.tU$EK<Y2iFeHi,lsjeiLA!""/iSiE>A(ld%fr%8,I$GKka\.7@RRq[=cGQ*=X00;bclJN(/U;rlGEaUT1h01nX=^)Mnj%l6tV!A1I&eO$bh+CiaF%HJBIHd6Tm*R:8YE7ut/1XM!.5"KUBS*+FM1*a(sc!n6OlPuFe'E7YgrY\Q>_ZC$34O.N0@*%$P.I*N"@%!+QU9;c!m)9$TA(OX&E;r4LdT@F,>1++/fW!PG94N:"#:mNQ^7^U(YEV[Zr6(X6C9]kn,+^RJ6t2<[olQki0:"!@#9451tr&q57@%MbWX6FoZ[O2asf1-RD6"*<6JZ%5:SO'V3@$La9_IU)i'2&RV-dNdV^P@A=q,mS=9b7+$3;Tk59el<sl:/c_mPdB!V!$,Z9FKP$g1%d0QO7(cE9ES:P8KA6Fi0Hp/3$C/aQ0i94CaK0q"Gjt@SZLMR2/;9AgMW.bWBXg!egS";.p$E=?[O!K'0SZB=oi)i,b8kUcE1K7o\%1P^i!;k%eaERk!*aZ]82%On1cOK//j8&u5'*r$h]-o?gjV8anRR+McN2M;ClNf%[J:^S";h$QN]G#X28<eQ2u.39\3DlS(j@A=\3%*d[FIduBH9EsR^6QA\ZZ<$#V'A+Tr(J_j_qPeu_Q]SN=o(Bq+FjNE';">M80b-WpnL<qg`$s6WV4c]V4Kp7<#.NK,I]<jZ,[&EKW%gNjsA]Jh_]^i8%*jBG[G_!#<nHNXW_09\sT[qR;FcH$Cp4qWfC2$o&$Y\4.o8GCs./D%k(ZA#W8;W]5ZC?2%!>^fTuOVVpMn/m]J%$bAr+mBIm56t4)UH.epi9Q^sdEdc4jga:#lZnUEYJ<+5@YM.Z2AokN_)F0%:%cWiJ=S9eU,C;GpgGB)9Lu1DF2//H)7%-@HD@J6q%3F9'h`0A1U9LURD8`^FD%e@GF"G.T&_P1!_[cstBMOZLENfFc(hN&<X%3-6887p^1gCLEBN\n#j(d3ZN9N!S"5aJ(SB,%LGNLl6h%a3EaeO>iVJ@(8)%W2fu;=**,6)L:;C<:BDW.!VKj90I%2W7+Xt^#bic[;L;cB]/*3GWM[5e`'G@!r@_FI,'d]5LJH7Gr^O-+,Tg-%h5ju_oUcigb<R>@bA9[`+9\ghekV.G(nN:tEh2>hjF7,h-)uVtOIeX7d1m`FC>klMQ/3(V?`L^be$3[m'%i7tY2GT]b-PjY>_s;b%o#9HFE)WkLdtNSDL.F1_N0/9F2rcDXg(fL>eqfjtnH0IqTEl>O\([S#*gZW7Th^I@=Ii^Xp9I-hV<igB;>$iabi7\PL3(Sa\VqF@%YPl9bi1Np&%(`[I]BjodCu(PCBOSm]$5V3Zf>i1uC0K?64]M^6*/UCLQ]3mo+5RXnC4p#8q$rbeK^,AsZ_<bK5X&.,e0DGnCHlXA%6]k5KY5fB,d9<Vj"5$)63"l\GE4lZ$6cO_O`)B"&H9m*>nT5sJT?O()6-5#H)g10(%HHB)pGdNR4Bc\CNaP7kml*SqIUeGhYf0IN%-B%Wf:NA^UA]:[3@F:nb@1\YX2+/?sR>bB&iutpF%-UOL+.X;XM;\b^;2q%g+j_+S0$QOr3)cQYOR9qhFIGKGH'W)#2oSe)!$tnC%%6YI^]VaD_:!0t:ok^'(fK6CKC6"%9e[$U(3W)3p=a+?lb(>P5<I/>kq6?i\mjnp@BOhD!>F7A6RajjIJ:u",V<o$X]i[!!'eWqc%8Bt+5^)ZFV=$m^=/:JX0lI[D691R$#@F73JWl;$+/S]NDY]?=G$Zn&3UdFH3S=)q-_NG5C[Hst=F'("lAU>-P3BK6#W-qp:"?l9#%+aRXY&jOK<!>\!!gkI?Zq&f0<X%!j',cnm=7:ecIC1L/$E`f73eU%dl(*18biS]e`nRAooP7AocZPF!`D*l?\kd%JM!65eSB1i.O%!j%Hj!\?rG4bOt*_rs.jRiPsd`ANT8dW^`;MjcI.Z%uspj]_UV@m#<YUM_*,,D4K:3#N3tVu`jehN8<V5r>ZQ8>rEZD"jOfKr'F"%bZ,YL_@ei2n@^_gk*E$0j_8!`.q6%hr/9&`EoHF%+S<Q+"Ygu`J_8BurtiEQqC!d/a8*rHoI(MGIN#8BBmna*ae)MV#+%[lS>`FL%89HI7bI[B[/dRdOMFq8MC\hm.M3&_gY.$<bH]`L^a4Eu%jfg7iFGVUCOK+U5D6@uS@1Q0)E>*R6\M@eMJu:jLeg#l-F$$\'h](sN%cl@S@[E#6RDT<_"B+b.h#s^4#1Z-@:1".2+/L_)7G#^l"4XAkBNR.Ye>sJ`W.#S+tBQuOqicgofptEu`!WY3NHD>(!%M44p+X_Fm%:(8])en"dsB3J8;\uZU!Hbg3^I(Jl962M^L=>_q(Yc;GSD&39sR`N':quU(0'DC@ZBB8/8hGDg6L'jQHDid(19`J+TUE]f+OpOuQ%!@o15k/t1*l^K%X2O#d/:M%cQ4@k?=TeY^`[$Vi2_\Bl[7O.p-pHoeH3GAmh+2r)GZZW=qkCa)LZok3sG),8&5Jj"cXC<03l)jfl%eMDPW*f$;AX#oN.Z[-@sS]m=);\,Cd[,jWNb$4'`k]!h_(-*rpDl`Kdc5:(-J8&GYR6EG-45kdC=uP`72o8(rW)m41@]iOHegWh,%][)],1DSQ>VOcnYkl%Xi`YLKaptkU^9!_XO6jjr6+BP_7S)Sae_S3puQupI*P(K5(W_Nq_6E"U,q4Q9DfMS;0AB)-..Fp@29mZ^o%Qg0Bm,#@_c\[5r\<NjPdn=d`Rr-23KLE6+?\KcIHd9<%_OTshH``p3VL-(Ih9=i2VNZ_Rj?"A"IB1Ja=!ua[?N$Y0fTdoJmE@U'r%@Tk"d9*Q.:_,0=,UB$/W2!\F3DF=a<QNRT@9`$t56ZQnC3Mh(e.nf8h&?F5N?mMH<CqEdD0<s6&W^n^8RoOYN6F:9uVF68SWs0&+%(h,uMaJ/hMF'$mt?OLTCCfJeE"<h`N\UkSXF'(G]6<)9mc?fD-RFP/VXS5Od^rZ!bk"'k20J!IV(eNeNk_Q",5@='V`;T.2+4Vd3%KdmtF7;?FZ_bc6f(a]SeLn_-onr!]B#PaA&2ipU/N$g1!,Z,h4D2,.;/BU%&Nt-*+]"0m"Ue9c,Aosh%&AH)Vp0)bU2,t/S-464I%`+>[=K'Vn>?S<70q?WG,!U/i:/bGG<a2X^.BVW;5P:8&9C7q]eWB-@%=]h79^Bm,foi5,giWkL,>]@4;4!FVR50'*a4n6h'S7"u+%rc*d[LK#dHJ1Da$XB9kV\cdK$MI6Vq(8=Wb.:S+^F_4n_$+)D97/%p<]&#iQKp@KlDT80nPlfmK2*c9f9!mVt"(dF&K_%KYaRf_9%)p"5>@5!>'Zt!:?!uF+XFMQX^U:'^c$KSO8$*#:sJ%8jC<SAc)UYchd--,R8X_0':;;%S'6A)%*mX/T6>&,A2d9Rc'U">BBDR-Eo%EkGG<iM:XslNW%iPhFCF8"reO/RduG52'qWTgtNi8c0q/dM$&B)4&a,>g>qj%P6+Y_L'N>%ttqoD.gp%QGVG$=>D!"GGd2Plo`':%IL4Xp7^HfkPk"i.LD`s<?MFXjP)tSR=Eh636e.!MSJ>;kC1HM7C.Q@-8.)hDqfp=7_fCcJ&=h0Wi/$9U&W_j7Ep-W)ac$EF$jp@B%57uGt,3g*T(odu._&sCVXVg,k`ErO02g>agSD!F5cnj("GG71Jnjq,bPOK^Q;ji;peW^W<Vn:L7J.1#&(KMDWklmO*L!2VL0Mkj=%-oDV73JfW&QKn,*Ga6P(;;<LeL==%/]LJ)*h(CPm_e$1,NoEPY`TT4ufTXlq<=O(<Xo$WC,cR,ql^f=#9"F@rQC;j2EB9U5<fX_l%^8!<b^GH*tq4+,%_b't(ruaW2M\KNSLf$!1YF7fC4B_SW?>e.TF&]sq]X86Kb'?l%M\U5*d:+IGm)=nZ3+Z@e+\98F97`%\(ESkN%pH@]F;CNieCD3E"[FD<4XnGHSFJUio2e>RmTQfpMT)RVg28REC_2>\XCDKaP9?e"O>%e-0n-7G,e`fNd[Ad!<2C4Z\eI??J!Wf#K%e6/`YTSt;,R<Bs8-O;?LM$S::A(A%de?1EEcn$jg_c:*TBckF;OF7&q\($$QO"\\OhJsJPjtA2I<4'G1Ga=d^p9$D.A3DD6?qc[6%M#7ObmF:bmWZbB'kG9R\,+oYAWDdlfY]Ua)oDGX=:'g,^;nUZi<C'5:RQbN5i?V`P(:oJri$H`\Y\Q%uE.tM1^W=PKr!p2u=RA8t%D']P'j<rpdO1dW2Cs#egO;nYXW2b$I:CAjAOO&6P:,5K*nPjIZ<a^o'pEBM]gGgl:$!,N$CDN-_/&gQL<0g3j@d0(4QHCI<+@NSL%BOYB:9+b3Y[*,5S+h-E7%KT[WbPU@i,+ZeG.t3"g(g)Sil,@a!X<]Q0$`$L<8m&'!PWP/?rS>/u9o3&W2l>)a59h:F*B#23C:GN%%h3u:()R'"/jeMIuCW,o.2J!pFME,)'g")ifEU5-54dIFW\Q>H<No6=AO]U0=V1e%7OZbkf'nhn<bU\S!#fmmPhY=?"=eL"RfCsga%Bgq8H"+*R6.HLO(F,/++@u7/P<:[=cScGkuBfg.HBCQ8n+kp9k!c\D*/ju^?eTRrgIDBj5-f<n&-rECWOfOkLTm$*L;lAYBm-^XK%A2]Z$0qA:'B;s<,HphEc6uSmh&26NW%!21>0$b8.AU_!9k9BkWF&G]Z8uOJ03UZ]/_ocisKQ2/5K$&am"JV5C.($YU:N:Ut5[`"N%hO=#824TPInX,g;$G9-bp>Iq%7q";6`*e02V>nNBiYqMfceEC;cD.*`iY<T(@DK@!e]:I`iME&$g<;6']qf)32P%m$bnhK+e<$?g%Ho)eJ.u4R7?nJ5@,3`e2RpE12r\uX'2hHoI4j<2u4=_JBpdb07B<W<t)Wf.&;+-bgaRna1F\@EaIp0e.8uAcgV#2#%4@-eXSe\?,%n-Y&kFFoVj7T&;G'LdACd1kW-O1PI8G9CGr&8Fa^O@i@!KU%'/B!ecZY%Qa;SF[:kG,[5]n[YfM"S/$e-c*Bl^LRO0E3?:>j0rlk%a+u,cXRp1>AKcEdNpi^IOab\M_'Ku`?TcMH3D51Jj4Qu,h6s<gnLtGth=qTMM--"B,F@L\7?o13DsF><C6\.2=R;u8,uMc5J^TY!%[E@\Ia?8>-=0FcR_&*_Vj+W2GQ,=;BO2kSQ'<aGc]CM<B5=CoN3G_@]fE(1fb-._NqoDN&>_nq0(t",(#R&(>D,@OA\775U[3mVJ%$BNMIP1PFUD3Ynm]0eSK.CMXD8M-6^TdXW?k4tgb#bGS0)T@)d8.;+eg`b6u*S#!c\jn=3dY',Z4k<ChF(#skcW(^R@sMO4Q7G:K%O/^iDO)\1WWX/_C-<jEV?@8h"aI[]E&uN'*?DSW#FJL=mGn)ofE@@5Dc9ThY]3V$Oi!/Tr)<F'$`N^=r-=K;tWi)4ecWQQV7TJL\%,uGiK)Xd(4$p<jP=Z[&42#T7aH+.ErWmg4X:R/cF?(lhT4]kV^'tOm@a$$HN<][ktAF4RKK>6`X6ZPo)nX&N!R=sZ@#'h+_,1q.]%c5@PpKM&e5bb5@'Z*/tFj^[PZ^oQg]ePu(ABb?Zl8cVjX<s[BmSuB=4Ncg;1F&oT].kpmQ";Zf%F_Qk9lAKi5b8FU5e'K9n6paT%%:?)ZFd@oeB7pP]9S)RL;QEl1!K>=b?khbO)\2UR1B#';pbO]Cq&LgL9rTE_KK^JPp,7<,8p(X)"Q?5%3P`jMg#q.j_V[>J24'FTP%iTMF7i>ph`BmX-DCK2Eq)`^mM+jSH2(ICLuF;rhTC^&'=T49<:=qD^$pRG*pp6^9<jWZ*->F"7!ni\Pp*OjH$mrf-.&#EDu^]/ah%l!7J<[@Gklo;4h^U.b?*46SGt??u!IGLP8NFu6m8JZ+>.;?tL6He]#66F;)c4,LIB0uX,W\\)PZond?dY!<][WYhRepb>VmOFXV^%i&GGh\!9?n73Y02$7>>C&qKO1k%I1aH;*3DaC(Ks<W0?^\pH9rT)_[U,7j`+r]MXiO$];JR7sNq@LST&7G.-aR"`:r[Ko..%WV9r%#.NkE.@J.e"ejI4(k3qfQM$3<Jn'X8+fh_I%s+6de5$j<kE#QFmR_iOU#M[Kq4G_#s08?Ip;f(lUN/Z#2V?7+`E''Cij$OOPHF24%JuFb=@_;+f#U,<S,0&kR<]_3+9QAWk4n%qKm!'8dZ8n3tZ&Y#Z68R0a3\s2$g",7UL-SK<2f"Jo2_(P;1hhh13Qo<4SMVq:6D>,l%QC,[sG21_j+rf>[PBW&YE@bXtmhb"S>'-0$0ccQqF$"cHNrk+-PBJkYYslRN1/'R7_[OE_5<Me(j4+'(Ab`U[M_tPE[mKcb#Yt.C%j0f4riI38,?ag`!^K'c,dpVZTEgk2r90ZApc>@$!"V_N#U!6S+>5>LRgVs2rV;B0@YI-pB8hIdKiOgH$fLM6VNLf>W_I]+!-DtS/%(D\L8BXk.,;;6+teWi]0h&mE5dR7C.lJZ0!cZ-UAQJ@[#$!Q@*7"26b&TJbtLMH*@(3?hApSAa!#@nChoAN8\<i<lQW:h\K15_3m%"E@lZ)$\,_2EtH`T*RlC^eVsu\8:66j$(nR#P^pQi*IuJYL09Y=AgeecUWC-h^:*!EuUF[k[@1:,mlBbEMXHfTV7u\_W@4[ecYj:%BDqCFFQ39U8,I4F[%kLr$_r\0=]n@+1W"s82PW!]BHrtjLr[ceDTA0s?tb0"J#:At=A/a>QZW%mTT/M9Q9?+Y*M'*kT8hqNqsW>8%m!=mM9mS^c0qA'7%fLX2\_5ZkXf,-OEB,"dfrlNIU`L8Oh;%Ar"Bs:,Cda#F/I6+bY^Z!JRN6fjP*o%=]ec2.fQ?H,^51IGdD5,:%VO>QL#+CW-M&VcjZr(aN@rj-f9e3Z*AToX0^0'&^2HEg*F.h`jW!ZGrM#$`GAO?YPT!O()!>%pu2G41a#es5u5F/@T"-SXQBo]..%aJP2q[;SJ,DuifKZI)mY>*tAr?VP[$2]nOVf?DU=O;S;&qh8MjbP/a'fEB!Lp7ef(Io8p&PHhCh><]mA`%i.ak0(_Ud@##r9H_V$%MQmPHNIEh2nhA@jT[Q(teNSqm@>ZCMq^,cn,+l__'8XnZ5blAVYD]^&0-#.7]d42YOPq8f_rdR]cR+4fW%(^IfI1QuPspHN$%$gB%:i6d:EgS+,fUilfP@$nt547h4"i82nJK5>TJUQ$)0F6=/BSlKf^o!boqp<$nOnm]7rVF$rn/)"K:M46kI18H[,bEcSlZL/$qBB:=%Xe*N=^1PnuX/[=NJ<p]k6pePSibUEu,pF*P*=5['Wsudt7G3Y>HsPr&QOoFfdm\A8$1Kf(&sVgRm5DWd%e)@,cVJ5/OhJW+LFL:`%H[WKSC4X&f57VNGfP<C`@-m:C?H]o[n#D&c;_7WLL<r)dGeCT=YV%Bgc+R_YOQj&?n#':Pc+Q='\L7)3RKs)i)YG#dCUo+)A%jp/%fe_RQF]B'XcOSpf"h]SP.F@!Y,He:drK4U*SB[/l0.WI<i)sJ-Z`_V0=Yt6CB0#d,PHM1AASNSXf6aGc2DE`2gGP3O+kP1[RZ_YR%N]aa<>`Xe_Qp]K01=Lbh!'0i'_7(I`A:Dq.LZ<Ek[N=1Fd6LpROM;K4=/9=SpC=EM2#Icb20FrUP`fe+g]VbWL0DpERKh5e/AG(A%dMg4M`Mf:AJHd[?&5J8).F+Dqh4sNkE7Xso%ApK*.#/cpi^fGZ2fpEUeidc8Jn5D/)XGE[b5+8e8_2,c/q$`!rN\hGQ1HZM)N21D%Yo+>ea<diga;A\PCZJm\)!a6?![:OD.jm+JGgb.?lj6-0<Ea:apu3i3$u=A5E:"JJCHtdPH.=0B@tnW,i<EDJM"2sS:3t!;@^j-S%O5W4Z9s;PdLIg*K=6%o":CSX.]D.Y0E]'O52rM7PnN+21d7*a:>E+l*;S&`+pCgtT6`Z?.A$#96<We6(2_P0]32L&R@i2"O]ReTu%Q8]hAAV0\=C0I%oKgA0&(Tb2<Sj$9,\5l??JZ=/.(TEi<OhJE'l4JI2"&qFXOQ>P'O6BUZSE^]_,_;p9mY5paW`em9'-lI<r@)Sn%7Q!)#rq/TWj,A67Jkuo^"KU#S:d)C!OZ/jM2LUDD;o>8R_g#o)6Bp-XFD=-6M"*?m)PTfXSc_^s!0O:M/iGRbZl6Q9VXD>Gef[oO%K4_"K##eGTngH$2>)2O=7:N6#9X?[C)G0^n8_kUQ+%YZ4FRknlh*P<Y5\`+u<U$6'eEf_@iBcJ%/':\GFq_\\Xnn2L?&rGa2i5+#%Tdb7J]nsbQT'CD7]PYpSh?u]1Ed:+#9qe^m>T%Kp^hh0hn\q/mc?k94i<lmugYaqD17IWWn.M\14<#r)H:AdEpsY9;G$k#Yf;?:S%l,O+0KMQ**n+A(%oHU6jMk5Csi>Xlg^T)ZkV_JFNB5h=X4.ENJ8$Ar5Y2&EhSDFZ@Nup#rq@OM/78=r&<PF:<a%=&h:36C)ihl8/%g?!Z&YL\4OCmnS9HEj?p4jl=TQSn.i?)"3o9#tAfF;f&DF;fcfI2n[]Ho+3DA\A;>j)FcN\$BM6N9Ss`,,Wg)K^"q*T)k=>=7PEG%UDRC#7P)2/Q:bsH'QiSpZ,kA.l-_OX*GYmd>*snJ?bA3ZBQd8P_Fm+H1q*,;V>nc8>G($=97p3J[X$aj@_ql-bi8q7g>Id_9@k:e%hf*;2ZC.]u[e-8s3dq39)C*XI5JGOnn-iFHDR/oPTBoT7^`c/BpuhRfA!!PG(%o7mbOCo.0m'Z:B;26a'M&UrA8)`N!eU3!V/`Pn%jbf*_!ijM[YgV&iJtu#6+oO2"MBK_8_j2!*(K26(Om-0[)RU`k1KHl.=2PrI)^nG[kd21*qJTB>,u5E`b!Bp81lg+@gaEHkOe\OD%hb0+o*65WndVoYnHXdVf_Xd2uCLn5'Ts(Nrp]=$b0f[TX7'N7B0[dU&V12F>M)f;9Kh+-=,pbns>;4u^,G\c/6OA?$KF#oX00gFg%Df&+438t!!1^-%R*?g:R*_gbrIEIlsh*[YFk\(Z)E;:/8B[DD\LUb1J=CXa#9H*)(BOnnNdr86\?_a=Bj&g^AbimqEe_tRZ#Vmaq%@RdCOc^HLCRQ<Hpm0,;7$:2hq04Zn'<5ntP)3)m/&.XC/0ZK(E>f::obJen\b?[mFUC.H+a8-!0j8C/li7`1N08P2,r-Oo/r4KQ4%,s>uEUEP7h/hqn(&gOfVLs^l>Yc'C7d?ITc\/<.t6@G4g^PU@FMBQeF1`t&4j!@/n]#),7NJs`<A[J#LBI["!NXB;R2^nrI^[*r$%lPV;bA2KROcfg4EL'gH#_Aa@e?+XL[7Re3"I9BrcA2N.7O`,/K1kj0_Op3Z[(.&Rq)(db08_J$s^nUg#M2[2c8=@@\7T1\Yf^k)]%VRh^0ej)^2@0Ybm7RkkBfDJ*-99qJC@PeNrZ6_4D(=iqD+es$KJiX,l)FA;[]E9$G3KeEd(G_H(FlPPmXYjTiap8n'NOZn\VDcrp%#b3W()o1Yn,]lae1tq;ql/TsF4sS4;%?0F=lbu<Q-j4kQ[-4jV\Jc7.J/]`J!K4s/;"XDaMafEt7+o\>7ONEN2$4RfhQBIj!YgWM%W4F+?'>9lSIYioYp8'7_S<R^ZkuR[O6_\!#UXP08m+./Y:.-o_Ft-BJ+dt\_WZ-O$bpM>l)r?6]??(CXe5/p*EK@%D7&0$ip@[GR%&:Ig:RXAeWeooo&TL3o$(;2`ed',B/1m8B._^Hc]1c0Q15=/Z\)7iY7:lJm\':PSe"r^Z$M)un.)Hn,jk'j,mG"1?*dBNfi!B#F<%qoskMeHO<36dpX!0>WC?+e[9*L8L6D8\p/D&+gkfBR&Q2BV#+^M[bYr1W=U\L1Y.P$G)u4"BE_E?u@q\b:0B!%QH9p'SPo^3&GQ8%W[oe_FA_T*q2oW0p=j0Z52aehD0Sa08N8Q-9+i`a3&E4G!sK[5(3NZji6YGt8u6&Z1j]Q=f2PA.!FE]d).DNuV+r<sh0<UN7m9f.%TeRRe^%[MAVH9NnLW2]r.b;C&_pX2.S9S^Lj`D=M9`q/SJVU*kc)30V1h1O,$8ii-SNSM+'"S<V-4XoP+I\35$:KIW>mUBd#%*mf%iE#/LKP4Nal'`1.A#XoWKP24Pc/C!;ZUG3i$UKU",/DE9/VVr*)<seL<q4\$Y&:;9Vg5EU6o5]2gI;.!Lo*jM4F&0GWT;WC@72q(%q>`-;1p%Ht"=%)Jq.^[1pB&Q,K8U<n@D!)JeMR2d@hLp:dA_Bj6:B9QAH1dW7,sS):`,"%75KB:6o1R2g0,_q):%.S(Q<#232Z3d%_2'^^3tjEE*?Efd,FT40*VbZmc-KD4:CBWK]g*mQA&X?$ok-ZL('>24"@nW?2C\bS,+<&Nia0caLh>RH>onr\`bS$D71c3:Lj$<F%+e%Lk<7qBtR]QUe&MbMuSpW-gRh/k'0G&nN=^F;amoKM"2SePRK\Sfecq"3nD&7H\6Lr)?d#n5fhuH>r]D9g\;As@81la62GlXRI%OY$G87)LK7Zh_s)-nT*tZn+mq?%?Vd,$RtL*u]u-joYYqND*Zoq[sFa4=&+7Je*:,oo=TO`XiqXYbXXi()^6oB64t#2Y9DF\3mQY%L5,4Q]9tG_$ps=u$k4ZY<WjpYHa_D!cIu7])5X48ea1Rhh+[%shUdU;?H!5O+?cL'2Q)o]#Yh&al*$5_Z%qu1`'L<[VEqsd_k=L%%o7T4.k+i?e$O+4u_rA4,'D<bEctU!Ud'$:dkV]J+%1G(l&d5i&'^.qo#6Ys=B;U?6!=a[Mf3JYqlkURR#*3q@G6.cX+2@5&s*7%k%Xh[.'ihF/<`]o)Z,!+gSIjY$D!BS5!Op)ilk>d17]ZADQ*R!:F!J7"8K6U'Cb7NeTqn/LkkF27[g^kp.cS2RUoO^9_q]X(/7KAZ1%)M*9Bn^5(lk<u<RnJP.]VM,-I$r1KAYQINlA!<#]H0cjnW+jR"K/eQDm<KK/IEd(-5aH-_5X"FbA[lf4WWrpY1Xb+Ea(<Qfnga;?%o?=qpVn\JZWKgO?SnC;HDo=G-WP<srggF0u)"3EuS%[SHmN]qO^n#*\FbB(/*@8hQ1GY^+G$^:t$Arnb"#ndK^dOIXRd,hdYM9EH%*PE)(VXpApUZY[uaS$`;6cq>]C(?mmnWpf%4D,M.D^'2H4!Z(1c?TXZ3bZg;F's#@@*TlqZQJ@aE^#Fm\!Q07V)%XK#!(l(2ok_O%)WM7%9Cs$4jjn;rp>$;C':bk+3+FP>Y<EfKL"^]/ZV-$/XBND-e;``4Ou+tuNocD^bh9iLdO#$p!oXR2@N@`gS@K(noU"Nq)-#'P%0V$PKh5.\Ro4(M4(ZOR9IkHdeOi03MP^%BShop]O*PCJb,(\4aM[k1l/,H^uf]k"iU?hNtDs"B:TnN6dHmOLJd1S)KWu8\Ic"n%2%=.iAK4?X0c"uuY>&,PB`s%*7:N!kehFT\.JV8OMWcAECGq?!-(##qpb$fT<K(%jkDE5ltl0,WXV*[>$RS)B5U=+OckSDVk5&=iDf%DbZmC@$Vg?m6`>/<hoY7AB])J)&Zd996"'si!b6;"$pm<nYeK4>Qe\EV:93FE5lZ@BN$%DiS$k"Fu,Xq%lP9MHp'is+i4>L'MBmV%A2mps1S!.3Q_FFe35ZqcfZe@^mX^7j?oSs3[9Z)%?K)OGEd5,4c?Nj$`\>;u\ia!-Rc04gX)d9jiJd%Y'"nA*N)D7ddTp7/gu.?'%i!aa2nE&p)_i<g*&c?7R-X<;!r+6.X3*Z^'R/n@K#s;D<10aqX<_Lj*f"TXRnlRH+%Xp3`Z:_Wjpgs^[UD^a;cCRO'^r/1(*K9BP%hMcIniKXjjhFjp*A2gj-L1bt/S'_[7+D?t.+e</?IXmnh<;t_/ju#:a#.AeGnT%Hq=+!+H[2B@A@mi,*,0ONO5W47ba*I\32Qm\q%#m6[KE`obhbs6q:8Ft8ud5H_HF3p@)X'j&a@Em9;a"LIL-s_e$"fci+\)&j<R96YhEp2R@Zd[;HS22f+LZ'a#P\,*2?V2YX>&He5%E0OC%lt6S+lQU<`r=L7t&^B\5hXt#-!/3f]^SLoeK=XM_o]@qSHUfc1i0aTX?q`-8bWX*ED`BO`;lbTj%l1oh$3SOH%)WBoVa\MM%qlhn@^s$Wf<SP].#!\L?U)V:7$='\F9P#9_>6U6/lQVW3hFqMu\Gup_1Sd[]*+c:A+`7oAnNo!@RNRt]Ls2X+YkHdF's0EUR7f79%*6`9AF[PYcTe,.RIH-]7"oPd$0ou9VpZ?"<\ge<!0,X:_rmHD;4C\!k'Jn%4RF.BnE6Kd_0F8@JVP83i3lcEQM]9PBk?Z8\;j_Q>%Jj^Hm%$B!kkDR0(@Z_E7jtib+Se91Z3d#f^R%Yg,+ftdhBDTZ$^FX&.(j>1te]c/)jl9T2ZBo!Uhb*Mr'-1<s"F<(k&P6;`aG\Q/%)n`gbFAsr<q#k(]YfeBqi>6VSM&*c`1F)J,*!eDXf0>M;hpc4@72*-=Y)n9O`LX]_DN;h5?&&$Vi'40`A467,O<>a:T\RoUlYqS2%_]j2$5aP,`U"^B*=Y$+c?Ka09c'4b'FBK^g/'D6_4o@PP3s3(<1b\%!J1glYK8cJ[h[d;Gghc86\U9D;$]/+XeNE/-K")6PTbtV9%=sKhQQnf$*1(5X,2JsDE0gTs2Q<>'Z?e4cS?udBS'i;QqbBfd(dU^I8C^0;P\\UR8^(P&pBphTrl6:hebQSk_pd&(qR+!@WM+_HZ%;rDABQ?d*-P.0;HVU9QOm5YX;<W@:\<:mMk`1sp9jPh_sSjW0Ojt-,0([J-G=\d/b=iQIGRfm@A?R4n8a]X@"eQ'"tEL($545\sI%_a5ejJsPYOo+BfOAU8&jRk[278qY:AKN[FAHt50JR4$!FEaY2+p*9sg1.snmk['Wf)S<U8Lo(B7Ah.;U3U!^bji/k#_5nF;2m"Kc%9"#D>%#`7BDTjl&^m['<=Y;7YCXVn@,VXDGFQ(4jF&>UoFE!PNP%>(n@$[)-D>bE[bd[sN*J%AU&kUn'N*.JHX]tMp7bhcmV$"%t%2VRk:I'baZ?oM\cC(a"VN*3$O)61m\*d8=`q8+[-A*Nl/bVJ6%lJ*)@ASe+\G%6hp<h(n_1Y$aj/jI0a3f_&3OCckI=BUjBNFAN/%:mSA(eB;o3Q5O$VlS0g2n1j$<"D&IU"3&)ob-JNHHbGYTCB*o4R^,TpV=Z]X=\?iI?coYk=+lEtZHPI3Ap$t:)'TUDp7^!LGdS3L%AM,53&&0O9P#%\J;O2V);7&s<1'1Rp?X/\()#]AE/2PMH'/O0e(']G0a>0i+r>Dobc#bTI=luuIgI``%RB%:3=b:YHNmVg#/AHoY%Z@#da=iLt#aqF2SL5V;3^EC^%.a#BHmAcLR_,u-q(LfCa6!38q::YZaQLfP'+tPPC9Ys%+Q<EcReNa\3R66GZ)6&sup"1)1=-)\k%=%a_g1C"bH7e)G%l@'Z63Y#fU!jKmc\Dk1&b7Z)hne.6/jOc+oR?=NJ'4@6\cDO.DK&XESOUhIpk1:CerMuD^\)S'NAQWQN3^=t?%dH+,O!L=TB,&n_*bHtq('4@44#n8N(12fB5eq$q8WgeUJ5V+,kTM!KKYtVNi]/,O`$^KCE[m1Um1"N>;fhGSGY+nJX"HEP&I?\"r%@@8j6<pDVQ)-/N/'<t4=+&XeYBq[f^Ah<Ou<946mR?8/J=.cur(\W52QKcaspQBK7bhSbB/2NDB<qL![TdQrC=lp-:Aq(uI]P$R_%IoDYAeVb3-AQYam$Hb-5T`jYX/CVa3'pN8Ap==U?bENU=QcE+s7VO.6WIqJbjUR'2Ub";`6\kB4/2M%cMYj%tZ[eAL`1SKqSR@A^%0?Q%O:?=7&:h'Wm1CZ9Pq)+U/L#+fKjVY6"40SYP\o?TpI`@:C_j[:hk*@*G=2knk>E;m.jlpYm?Z>+@k%_2eVZXqq<o-;'I$']'%,D-:nG+JJ&<o3Alh-f?h8DLnFR(,^fhC^JWJh!O/N63M(Q2-/n)G"G<7Mr,=M95k19qX8K>9)&m<*W`/HLmA0gL`";l,"-a-Xb*@%,G"PQ;Qd0m8X;+?Co8!rASUKN&l0>_l-rhS#c3K?)!dFP"Ac+I09@pr(C5a)NcO'?&u46VdIU(0L2`"nid`FU+5HV6:^0,JHi]Jd%#Ue'uj;(I8"/!d?P7sT\:IZ7+fdXh&;%YM+=Ct[=RFZAQP@5\q0?D6eKRNqs7SX<<PV6o08n"H4/uMdH)O,76)haq!&[F''EY"IG%0U!C)46o<^6gqiBnP)\H!f(*+!0\QlR<IX?.@Si5IGp@P'-oupP-GrNirMfmJJjog=inRE[6u=%kd_S,jPa8,Mj0/9GEGuM.2a$>%VY\M.7fI\thfC^;.dPJ@K[oNHM(':`kc-f](=.jE/Gj2'[d^OQ;m;FGN4mjSji/Mii1^XSl,[fPaC#N<1A#]=Bt;m;\CTnJ#XVE<%:`0V=1Je8>!<^P)(g.S`rC:mjW>TZDLRHI;E5`V-Gt(Gg?m97ZHQ\HKTbq-)A2[9CYma$LMj;OSDD$J<_BJZh6O!u;KO1Mo",8ql%$[N6t1-mEqZ)Ajr7+8Ib+cfI#hB6>G)f`m[+HsLUontQGparqN\1u(\`>D04L6nd_OA82!GC?jj8d7&V(sE?m!Z=rVIV1r3DUEY+%"sCBkhIlgB.PsQA2#`k!1GauRI[i*dJ0268;kI!00G)`[UQ>6)=W5;*"`-3A[f_#J]^M>:N1)NP)nIGq<DQ8^*`jV_N,64s$TUrs%b[]^FLUU/7^F9r]%6UdlWrD'"_a'$lE5sgSA)=TQcSWu5_A@CN9nj)-n_eqt)S\Z\ZaE+:0c+;J@$,5dNq#kGj,+Ll4Ab;9oXCn5%_rfr+ABZd&998ni8NAt.L6`nf3UZ=rSW)U*'$tR8nRo^$(;'rn>WaSCiRg3?0>?u=1<N'[>E[s%K$5e!-J6pA]3#jO-;oj<eV"l[%0B<1P*-(Of['=^[0A1S=Wrdp5CUCVMiYkTm=hIjH$PS_=bTq_]'ORdnP9*SdLrHQkUId;^>>YfT8>%\0_N)/:j;I!+p-M/S$-,63%Bp*)`lnnsj\:tM*/7[80Hc-AX1$[SlW\*Ha@8XpD1-*?&3&=2&_AHM**>IPM+@18r``uNK9_F,W90ol;$Sb*Ros7D_0?'<!c6k.d%H_OOt[UTaI/A8Z#N">@NrqG=!]>s-I@NfTGESkXn)%bh9PpO=me<&*b#\*uKR]2MCWe%dTRO8*T,]IiE67NN,Kpi/=A7,\C)YE#d%S]SLr`?V_n7Md<*9"el!Mijd!#5eN=O(!EsA*6[Hd_df%)#]47Ynu'P>p?g1)\K?'^!Pb;'L;G&(;n4nM*MiKkhcuj@Xq^s6+Z9X%GYS]Q0oE4M]^o2!#H$O!=Rk6cM&`VVV"4eB(ha8fQT(mg4n`R+#b`qnEPX)!_i6)T@oA2NBCM]-6c@0umgU_#pf;qc)g=$,</BQ.%c\kU>`WQthY'g)h-XM?=\adTL,Dut@3q4-6=9kB6L2EOMl]jrCmpHg4:aZF&GR`giD_a&W;h6dFlb*Dt+'`9&2Mp9"/Fad)V?9Ib%6bBS@N*hoi..Ie1PF9ADmD&cp*3I+s+>Gj7b"eEr$r&&^NQ)PtIE?h\dte[)'ej)@(RYahMg5+drB_*k<2l5r)PqLi@N$M$(oj@o%#pQ5Y1Jr+I_/uE'`#.L_li>lVicDRtKZ?F/o-uDHQmHtL)aOlp(IMFn+@c36Po9i<8$hkArpUDXC>al.QW6U!AsFKY`%QMjXQ`+`%j+P^*_8E0BZMVT]`ok?N\\J]I."qumn9(+/%dus0#'+rM23iRJ(^@^)_bdt&BPcNZaC0-q*9#F2QJT.1)=667,&>G*GJJs43T'e)%22h[dj/0^"Fl;^t+Rt`t_e%:5BGcT*.%M+_nPR^X0uHP%%JQkq/^JO34!DKt$Hn#US;%t;r#/9HSq\11h\Jl=@[_-8L&o7@51^/T%'Jou>Oe,0h;;N*o)!!([[@8b,'p!m17LN]X<6I4&(osXak0"LZROdmFr5uUi"CG-e@8TK\Kn1*[j$a<YTNf0!@0i<XPRO3=f4HXP%@p(V0V/:_BK^"J]n^<)uP+=7"QttMX^KJEU'd'3-H)k@M6,-:6h9*qpOtZl6ESgUW+qKtZiL_-]?iH'\eGoP&_S<tjs,0,?ZTnC)%s5^q/s5osPj1k1?nFs`Us5osR+92+#Hqs,0q4-?7s"*b+rV-?XkNLM^r99jRTD4bTJ,-#Bf73S1s0ju5J,(bsnK7euDu]gorE0*M%T:R/)jR^-9ocO5++$T`!KbJoar3r<uptn<5s7iAhq!W\0:]L%Xj54;"s7&m77Mb:\D1"NO7'i+QqX%d!kV%U5j>Hu6PPI!N+nPHo%:C$\Gjug^Lo(;qY5J^o@g>mgbWTl^PW.ElR5n==@b\&*hn`TEaT<EUi_MHOQqR8\[%HdD+hK/.I/&GOg_dMNfpLJXo0UHcAB?40d%Onls$Qr!Ib*?N5H([n!nohYSqs'[@Vp\>%bO66.]@!4#"k)DN8S.2),IhH7CN1Xh1kL"L3o2o,+q$0.-mcJ@**"H6pVEl*CH@,q[%j2g9^*i*7e#+sGZ0DYY]U-%nUSRM.F9>Bo46*f&8X>Y"m3N(urY;XZ(pkF8\P]q>ORWMd'5^c6TNGtJ;9toQtjfJ/^5Ib;hrLVW%%7&CI`?N3esi"nNpKR//ejZc_Kepas9,$QSheFSB6`Ub;5_?Yn1B3N"[)8??ZD`i]NS`8P\q)V9EO).3VP$cEnq_^RV`jpL:?sY@m%op-U3UQ,ZIkTBeQS/<_9ols=YpplI#KfP*j&%2f03u^DVL5h73ekjc;0<ojc@@k1n8&6SkTn!*[huE_(3hpV#*NP=^q2F"dq:%V,%1qMT,.DYu@H:1^?lQ>W<N>V%ZX18()%_1sck28Mu'oZ@VLh5qe("a5(]r^_ej.JIl`S>.eN_fNJdUA00"j;h.`@sc_bTC/AYDeFF%&hhA*>uq7%1M3#tdB03&HMZ<cU+_E-g?h83G0EF?Qc`DiJcF]TGq<KekBL.Ta0kMa5RS.,p>1*K@'!r9fjXfa&R8j0]+]CE<U0*p%(M*LC@pk,6=>`>M&f>Ni@aB%EGaq].41:-0i8AVQi?c-TcfZR_%KT']?61^WAK@gu[Q%G7aZN?]IKo"HMuib;_o<qW#b^rT-kuG.%bYV`kgbg2_\*rs!C1/(3cY/m/iT/1p&[7;oCU\;r#Q6geS_44YD<gcp+fT28Q+?dOk6a)*nS0/Y1O/tM>A'$!D=c=]huGXDh(*uV%?3e!d+AV=s3?T"egS]cclf5HhSBF:!Hh_lFhStU15(4QSW;3!hH%u9MTC[7,LE>A6hRh+Fg*=jO%K-e.im"B@Ps6tR&]Wk_(b6`1%<b\]b+0on*O7A_8__^e/"kh^l0nI-(he`:>5sFi@iEF6?!V!C;gP.p2I!*^&eY/Q^VOsTH5g:\;-==+'mn_m?^fW@jd1N]oHsuKj%3;gnJoO5aL(Cu2t(n1b1,IZ0pA,?pLHeE&NVC)lMe$$MFm&(6jm17DZ7"6t@SC`62pDaf%R<'@F!j]cFet9Ui:X!mPqmc[[:"P;X%Hq@#7S5F_CF'3tg%%YN8SF1T9/DU]b@6H?+5LT]ec*bO!IOPk\*-'I\p[@ih&>o`ofSkr-2`jE8_*1$E!`XjNC@e%9LY8_IJ6ks%%&K<S[rVj>+6,3``;SQH9Aom_Q6g?$<7h0G3^1838O$$m[K=RS9Vj?)g*(Ta=/2bFU%@R2MN/'T7CN0PA5(ej*r!tG(Y-!Qrr;PJi%@=I(TWq!6c:">(LK$+06=58L^<R!0\!&I>-f,<>oF?/[4"$i5^@k2hTT2&'Ii.cPd4SDe=:]+gGH&<CWoF#MPbocS(kX!V[_./=2%r(A$&L(D5Rcn]c?#fthBZ1S?7E;P4VF*+QpT]%@S]fY!6\imL:1/uo]@ZedD/fX2ghuGdgr&$]X`>'%t(<1&YOF"5t]RoksTX1Vc%nZ8>>^d^.PAh:rN[5mAtI+nC*c6jD-4N&<_f/#$IW["%kcRmb,$1kc(-!0`j0L'tkO2QhCZ!!haJ,J8FisI6hq#(r%:#tq]23q4R%?B4^Cca'gk`KB]$?=\pQA?I-e5WQ%ZOPa,fipeg&q9'kPf_Zsk)<D[f'?JMg2^a\OGj58$hqn(m\Gu-kKE(UoTP&k3W);6NbAT;j%Th1FFf_n1WhXc%M?GP4U3q5df;80lMm+o-r54lCjD-8`7aKb-3gV6_MY.=S$)@AXta>gt#e8I4T>[XPU*ldW[9QQ8&`I;E[D+bk!%08kf750*8>[C5E"4jCj##.JX&=9@p^_uTF4O,'2I8&_rcV>#NTUl@1eT!:fais-8'+L,*W["_X#]k)VA4a&I(2>k.?g2i:/^SPK]%h1O#]^MSo0b`\Db#?Y.9p5F=N(dY!ra-cdLm>1>.gj(-OTUkV`r+biYENYfII=O?VcIOe#D]GP7@:T8AjBg$^B(M;9Bp/"-.DD`A%EqdoYM'ipWb)ulm6fdkeZ`]XP;2b2C:Tgb]bff;I[EorbXkG?sq%Lcog?)XE`c:;Xl]e\7rpUPH]U/Nj@ZbYf+PMZ$"m5-aI!fK*%PjFbh9-.Kb(g3iqe,`#Kr$[HoVoA34T2s^\2=OI9HnMOk4MYTdP>h(?hR4WGV5LO[#BuEH]O#m."+8mY)"KC"le\B%6ek-A[kOrs%gU?6G#)2Y4l=oe0+Z%FfU\F1.B8n^?=5k;?\`K>E%oA1%,$mjufrceYrE.rcI-+?[@iXEPo$Mh;bh!$_>PB:a>_8HhID;HJ\qEp^%*4K7XrN)G3X(`+d+\.@k]J#$aIP=.9ZW=a!IQ`dcM0%2Ub@7^J$$NtfL!&1md.[1WrPf&n5:CI[>Jr=fg\$<s/Y0<,_tKAQP&J0D%46Vm[^Dq1QrdBKG0]!)q)jBGg_HWTLZVbKo&+E'Q]GB>b>pid'$R98lSGGj*$,uM/:\JkAJ$lhP(m%P@B[.g>\-XIAM`a8HOC7S`%!\OD!VjZZXUs+dc/Q!Qt6rdB[>19K]UHmm.ro!BS/g%Qt(L9E_jZ)[;:9bjmQKam3X`17dbr\Cl6<l3Z9kCE.UgI0p*(VfAGYErq%)(P7*_@/`.N&:iUa+u\/mBujWf#\#I'=!pL%juC_S:E?KKmBK7Gi1`_bPB2MBWpCe.($f8P^$r862ZE+M0WX+*pjd4?WKA7UN$m'%q4%[1S<NK"\`$\?Tom@Nq3E0Jq5_d/.-bsEVPJ\(44`E38rjME1Q<N^XTQKXnX1\<m%.Rq,>?`BAe>:mA+[S)R>a0FfcO]n^HSu3%SU$`]i>thG^>gZd'AG^s:'XY&&Ep&1mebcs^GO#gp[6di8FE[iQ8/?pd]%gQEmkL#auH4<NnYT+[3Wo!2n7lJ:QD(MBM]cn(SdV_%HboacCs3l9+2:;V[@HcTHFSE+>TPO2"q;Xsh8qjQQ,a=]_i%)(7iOIHkUdpE/Dg9Q_BihtI1G\,8]HUpS@2mGIOK]&&?DOQ1nn_Z%G7;mH4Dl0Zg`nHQ7<eb/[tY5-A(nZ1+./O`A;%M3M2cVmi=p!2H6?^(?EZK/:EjD"N#j_F_cS-<Z_i,pLR?k%!,/0ZjC!YI3mNTf%8J6),Z0d;K/RE\6q0G:LQYVR$*jj;L0l,J:+GVE$l3[Jc`qI>Df4.dtrj`)eaW0^)F44,]m/JDpp5-$Z"M>Ibh)uI]7]C1Vq2ss<%cp'!dUD`)Q8nD("Dc]:cf^:aN1HoSa/umZ_72ufLj3?L#9?(:]IPuJ%hU_)<_u]_WRl.j;=C>%NE.Y-21^CVJa*pC/59M6kE<U^c%`mXc[KQq!V[COg8euVtPL\WAVr?Om?II9/7,G>*:Cb)BEchA"pmg5L[XEl^L^_f?[&$$2tp+L>A@ci`X$D6u=2fr7CSWhiO(aDb+%&&sZM8\5eV!G8!3D(^)I4[IP!Iu`an,499c<c>N.DL;dQp>'YsA&eTf0Cl"QO\SG%CQ.LSK#%(jGfQ8!"A@+ej4rXU^\g[c2Rg_]%k3Nk1;9!8$,1O2W7.Gnu&Z\?B0FmSt&5F;8-&&TGJ-/*1XgT-hMI$;@Hh6:Sb+%%R@LNJIA;h&p34?<:*Cnfq*"9)"J#l\kVbd[P%+(49hq-H;]iu%>fNc*"mZ"`:A+4mQF/Op5qI(/)8:Q*W.<b83gC;"[*F+tSGAqt$d+6pDL*[:J#`hkON4c7m1j,Q6K8)=UMchC^^%nQV%p2E\#R7kHh$T3:4J!W!Neof53=XGUIVV&J<2K_GJkBK6qe4Y&L>E<^DcW3_;fg5N6Bbpt-Ia0.D\VgIQJH>FP"-HPj,UT,2&%c:C);jMY%]4)t=nKlM>pkK6-0FhP8RD4T#?m+=:<TsD<PJ@U$RgfihiHh2\U4;Sm5n'tGlAK:c79n`<^\qfg8k@4RED2PotHX2YM%+j=T^h0Ni&T>?I@HQ%5@=)H2E_!<Ie:g.C?5hg1AF<Qa1cPSE$pL<mt-mZr\V^]Un[J>-sTf?J.2-IP(>-)*$YF%,moa_+1O+gJX%/MqLhLi&1R''>ac]%s6mAZJ(e6.IrH1fq]seo['[#C)RE522r4b1AS[0geR>Nd(MFMV)&fdVl=lX6g\e[jU@PB:LgTIS]/PhXdcC%/Ol=AeS?o/oFpKS[I-J5A@CZX@?Y)')9HO"T-07.lVGtoJ);l&>*1g?(1(.RbgSr'1982<0]"U1f2MKYcpT"bm8JToK&FP!m-BK1%PWJk':MuZl+GLVQeCWGC,J?2>8,(amK5oHJ(UELaN:k,8RG`l\5U?;2`E-R(ot)/q]!1f-7t+kW!0A)>[CuXkc7/7(g3:,jO*n?]%;AFB3Lpt-[H&)-`;nFaGdf+BGJ2BA#?C4P3s(ZVu44?!:5*$t32Q)RQjnE$R%-)RqfuHB@DVJVt`sCG'2SUjTM$II<,>30lgR]*Y%%c&o<>R_,](H1-UKsp7=RF$c@o.\^aP5&J8GtMm7X,Wh-\l&SbYM8u%j(E?+QejV_d4+NP`ob&NRK0cMP+\X'a4U2t"<m#Mf8(NL%l2*DTa09,E#?*/YNdZXl'ZjH.@<che'#p4lK8`UQ4@9qJoEC47iHY-eXMG?M&"O&8cPaKD,,PKaBHpPGl=jLkCa`^Q1WIP)Nr\a:%N4"oh<tK9(<.I>?L2M%FMf"o(9Ie#JKlqN-&Vm56F:NRp0IKm'!,&1q=W;P^B\Yjg5X5Xs9M68HZN=?All@=3dbM/ZJ?@#`Q@j@S%A3@qeHc("I3V%it'tBEo"8UN`#V(Xkq8C?5CC35K%KFu@AP(:V&dE31F8kH"e"VU`Y-7&;a&1O*cHf9]j1L0C5(-H(&f"54WrnSc%;Ikk"`nFp^;aYOc1/_:J^2$ha7r3u?0U/Y%j-MbI5)NaiBL0d+/2)b,Q6XCo`J$r2LbeZD3@cT6A/sj,1<Ye(^jHM0cs%d)`],f1%5#([acC$.-K^9EmB4XfgE8o/e:bs]3bTnseX&D3N+e3iuZ(a8?k+PB&-#Q<m.9&Gn5-)$dX%D+_'i%a^rqT4O3[:uDfLe./k>pkp%!+4<X2s7VhrT1"em-4,mqZ&bq^VuDoDulEJRliqt&Vd'23tCb=P^4`ga),$Ok!tbGIuIVrK5h^.Ud5Shg_pmdrG(q=0pIGoM)_g1%j$&*.[BY#$Y\67]qrYl-ArZu+qYV_%R`^phIQO]3eYDarN)-%]3'H?3]8(X#@LsQQB@_A9&ZZ!JM]?-s4+i!2nKM<6(@1E#0!q'3%G$6kr<KTB\="]@)G/aPHUKi1gg[TTW>Kp6^Ssng9F(i7b2'u,[HSrsP]ko)pM_sc&p%C16)CBIfhKHVY,q\2o,:RWL;%>9`#'KIH%`a*7Z18LI'JMMG0h>X"8c:-dkMKrs(_I[Z8Y;=>4gJ9=Je>6f2W(.V_jqU6pBJ7Dso?8$.I7W`ucB\\`4Z2_8Kjre:F.f+=bd9fC%rB7rc9]<>Z,H)+j8oTk"XdE"=:Kj.rn6?"gd^3%A&%ipg9nmQb9UXK*[*&<\LFS2!G8@I-d!;1*iXNq5o<2ZYoV*O#dTn9hq5/mG%XnEMPkq.EK/cD5CF42,.`dUp)qjp&p!4"h1ZDk*GG]BetP*17.j7`i"J5hu9VTLA8<(Y)e,,,QsV7>MZ#9hYLod3d#-,$-4j.N"T%0qR^fmg4AJjE0+^OQ4Ub[I1X.QrshqrN/H@lJLSmpkbH9G@n/$$1rYc$s3t>r=Rb?&ad7(A;p$R,m_1e^I'P`Apr<'%5U#JEF*3E%fRY9.:GtQc7H#*9k3GUBP5@HR`ukK?4]r%XiU^gINutK2QPqM(kCiSPM4'2]_Pi6'22CHoh_L&f6m^=-,+48X=B+`JG/njKUeJGW%UW%8Njo2H6H7J[7.Z;aQqgDe6bt(]+FTSqTL=6^Zr#_/;pnR4rro:]CD,nI)6'!n=D_W-<bR-L>?OSW2`l54j=N4/\A%(0$S0s6G%;FjE?D-#%l9rdHUA9<&GSYL$h\c`=:N.qp[SB;lOir,:SUmY^]*&c7-!._QXRbsP?QUQ=]eG&grGkbp"F;2p2<CVeB`%X3G<2HBe%b.)U:FbPpKIF`G7TCL>u&J"!#0ZMP2b`mA5oduK/R1u-RApCUb/MHi)@q>S,&>&=k<nnT;%6TDXWC2&=aQCE[^sGg"\(.'2qEpSD%Z'0;\D=feQFaeXCCCiN3EFKNEU<=/#'u_)@UN3BS9@I0B98%-<Y>NbkgJR7W>8.=p=f,3JF.5sAb*84*f,:1tj%S^e^(PSDR92%/%p4a<skq&I*'<=b>bA^*3hl_2am"+C8*".M5mlV1W60UW/p$W3GkB6P!8o\/3M)0fr>[-iFB1a\Z[X.Kk^3MlEDk[l"qS6IOlA?kJ%<OBf"B&$T<G0k9I)2P?s[<\$ba%*5XhI19?KA9h+IsV]&ZAO?a2JbK1Yd1rRr)Bb#\17GM*2(6-+alT!cZ+L"kS60feXB"Ac61:1%=k*)Ec0^AXP1&&DDN8MYhDVe^&c05%gN)[`_l)9mV_ljmJC1?YM'A[V#7,h=Wb's'[%*9(``_EMr^Lh1J'\)\OF<(/`5>;>oae(n%CbDtVH<_)*D*&L!O`BP]bKbn?#$tpjf!+OelTF&i6PSFW-nP(qIGJ80N%na#C)+a9m9@0`8*QXpf0(j;&S4MR,o,I=%A^alnK))/%(_@`APS%]1Hc8KY_cU-UEqPE#!H3:)16!"ibU7.aUV%(lGZK8e8ghJX@`p\7'^k/^L\:sWrI15[^NZ_<PI5`iR/Nc_>5`R#8@H`8%)3H/;3==X]TnkDW><cIrb;e<>`;B3r$bW(6;2a%uY`bs-[sf:9Z=Bco3S<!$kq&5<,K(lK(.esDI*:;0?dc6"SVY^A<kUR*n<Rr4%Y@5h*CPOJ?n`7eDA"%a"[tnna437:fBt5QX%;h01BK^>KT,DPGlro80>q[L5Yb<0XaZGmg.b`UeX<bS=.ju(BJUm'b0e<)>6>/7n%QB/)adAM5lqdYKCmN%R8o?D96'T<RuLjs$XqAl9_=BNRW5o^7,1ZCNnO3l35@Y^?FN4RPq_BHXc&+UG=YZ&kj,9q!nbcEO@1)6dA%))[%V?\si+"c]2bRd?[]US^HVMnPLQDO,3[*8lc=IWkuDf-DLu6'A+#le<RjLtk]qJ0:S-0R;R;EtL:dpH\@5mf>a!4&T,]A'((j%olkm+%hYe-Oip;$i^T4Gp+TOf;oW$<6h:Rq"$_@\FZjfaeh,/jEXsC_*mC<HAK__8ESO[A)uK+`%M3Z5)_us)Su9`)-DWCd3!7pd%`(p4bU13h`4KK6-hU0_/QhSOdq8Dj_X=%<=OZ@-O3(jZ[/Fh8V/L^\$%Z1@Iq+b9Qd]!hVH,g'Y\$GMp"G6k`Vm?Am;@XRS`ATP9%q>dAg>j8`Y!DYc5jV/!L`:4OHAc^q*n]nf."`.s#lHhZgX3In?a68Z+*M_bYii6L17]cVCHXGL``iUb=5JPP)s.Gt7D)TR)E]?^^%V"'nu=m[bWR_#d][M<RtZm<olj7hS^$'HDkMkk@ZfTN!^M$ClV!e;BnJtOPaD8"`#=ci.T=>*j\*7&#IE:'aq,:m@0M!&]QqJWgh%6UVb4%@<=u0s5d^,YGVu![%.q@;DI(WIq^SB"'lVmV@+$&LP^-6Zb/?`$Eud\JL^?&LLWL3AXM4!M43&9r*r26U58UFfZM"+_WeO%2_-G$bHMe@%G+I`je-ZYC7pW.'cjbP8HKScN,Xs=c65SMQrD@_<cM[\8t7%ji!dGjCc[ptb$o$*=,O6a;DWIWd4C5'_8@0rD'A-N%#`<sBI)Cp2_Ncbh.gS6^4L@Ea5dQR:P?3IYa`Ua'C;>]=R4oMh!2_,.;n&Lbj\;N$GDn5TdAq#1Zb1kfMP'e@\R%baO?>tl<9aP[%21"PqrM+o,qrTBSS,u/$.NUA*$<@]CBX=.0-XVR$X#Zr/Z7Lh]7=;Gb#(]cTJ9s3..R[N=]upW3WES_u+Y)9G1L/0s%:f[AKlST*%:Z/Ndgo3',..TWr="C3lN*M,BK$gW;eKe:K=[I5;"%7n>.!K3*4Yp=bI2AJu\cIneV1KU'e;F)Q6b<ubO"j4(KV[Sh#]-/3!%b)t%[La/[lBu=h^sRnt$.<Z"k02%R*@;^0`pF&!du7gu84\'b\3cI,?$?\dJ^=i/!FLq?ajX.D)5;[_V_lF/,rdU4N9<X@Ci$Bd!M]^4%FOl;a1CL?W>JUUu2)9`n#+>m.A&q$/=s*VV;Dd@LfOTZpl@*%C`*HV`oS7C*%l75s7BVX#7^8PGC3(ET/8YRr'N/>/)NCBa:'D6T%#'nOlY/'7SJ_nBH+<s@n_=1CLGe7d,Y/m3^eu@\r`oWkTpPpYTkm]7je/qu',iVo,L8"fCggC:6-UIAn-3,q49FjO0s&^\N@S'&9%H5rK_<%lLXQlnjceMm8`L^AasGfj6^]/LZ2ILotuDdcr[k'/I@cNH3(-326<"G;MA'2Dqq5t\BOS`#gC/8Gl271:]^81WM\Wk`gV%YXDI8KnqbDfJ<!3.d7loYDju_SAMONl0+@3:od/2-2g=@LqC7HjKVS>^5b_EauuSOaE'TbJq<9Qj!lUd%]]rHM9V<3'5!6^jq&+`%??*K,f-ocBDBHr9,_qG(,@ntU!X1sGA6G+I$C(KJ\u]gn9r.B#8Hn]!oL$c,'*\"7R`Y+-:=WIFVRGVjAVC-2`'[($>QHS9N%=W`%<a`UkSiYRX.kn\\ht+&WJT4H]+\#2De\9PC&Xa+kf-1%*l`lBmF7b!`E!EBDcOY'()1tEt,,84\D7`9g_ogN_<s>C^(%t*@J1K'*%,d(,ea>Y-Z`bNrSND-!lJB.+F86]qSY6Z+G;t\".*TB!..i.3j2OcufD79^)C)0^TM[J^5:%gc?q'q8e-X(!\'scJ5P/o)#$M)"H%F>5L%4(KOZFKW\Zgi`R@BJqrc84eKe1Pm?`85VY-/HrMK,<VQ<V/*=+4$ftaZeA1[RH"CFJisnOARi'.EBAgjB:(m@V8e2lO3PKD%W7Rie`4Uo24e3Lir%JIk1FPkL9iXGP(+NFE<Emt+n^r59OM0P1J4CsX(GjUaq]JmC^'[P4Z:Aj4_0IDg/TElZ$Y9oUTQMs4Uh,s[%WtTmoLeMKB6#gCh"Y04A!HB>7YRi$9Uunho%SVToY2X9+24.8U7qc@!2DbpR^-F4KZ1PW#OL8U.N(E(XPtrAZ4@GG]"9h0:YUIh_%R.#m:`ZpN$F+Uh1e*4*pc>t)j.l@N-*15c2>b+9uJ]5W6MXc@$T_(\/#A)c316;]]eO=.V`\NuRGDq'9&J*@4>Ula1Sst@sUr]eD%:UB:94L?Gf.mAJD2M\pDE31l)N90M<Xa!`o/)dNY!-Jc#WP-8ick+HZ==o%''!1EaK(-<5l=e,-4Ij0g_:AnN6m&HTAuCmRVATAR%G>-aFWa9//C:HE99N2W`eX1A89;#E(I@o1"W:@7YXAT&ZL:o8kLIY$s"'6ZX/$SVDm[1&;;<@INI)F2Xf"fr%3Y<X-NMXS[!X7)F%UUC(h9_nhBKc69qdjZ<qF=oFb%m=tDefNQ,8m6%HE27nrL25_o0T1pE83B#Z9WY[@O.Z`<mE[ntb/1,]lkig'Y2E9iD`j)$^8VHU%c<d[I-$7fG%:\^%OD!4*90rh@?j1#U1;24t`T@T'YotAhDor.5i:jK:RE71eU]M2O2$(B`!^Q/c_tO;g_@:ssdSjPeOX2Z=0L^TV%C^"3E-HNL.Xh`Fh\Yt_=;22O#H6L[gE>!"l6mdWG(5RekD"c9W[jWNSLg(`IW;=J4e@$8!dlBeRpbpQ$-!uhe8O\BuE9`:C(nAL7%oB1'YQ8->af,5?O2p8Kjr_,QZ7rOIY_>m^#7F@j[Uns/^&nef(CB59me<3K_#5:pQcA;tk;>#N4@.H+Z+Mb9&h,D&5r'^[F"8!<1%cmF<TfRE%#5S9RSMM*=C$<QabWe/TSF-(U$0$+MNT&GZZlh2QEDH5FLWe/;poONElD%3qVZmaKc.0+&J;9YY`edb1*b,d0AF0!>]%DD;,0>LqlVLs2/4=*NM0"m@SeOd6!Q+UcdUWFWNl)O1cjkJ#nKR?5g.__G;=<E,[qH=m2:1[JlkL9A39l\4C]TlCpK/QVrK2?5)T%WQDrI2u>BhbE$;AST'km6NP^X&'?qlYZAB.AMbJ82MRl*^&])(%1A`*"+WjU=NjZP6BmJ97O9-CjdQH84WAAcG[bM-8[*1h`h$hc%7_Z^?O84u%,7()7J/-_$P]BW&5T6*0S16-^p=6K1C1M[!_-6)b[5-5b\2rk)9,][IR[cXK//n?4f[d`qNLQ>N*)JWeJVp=;db.K=%fU&Z!Ql>0-78o+>R0!_BME*]t89'tkSdXB*@(RcTJ78];84f%AE&0>gE<S2m9t__ANW'l+=VQ0eVu3:7*fA5)7\(P2'\dR]0BtGh%j[4W!=k6'8.)u=(k*FfS;a:bZef,(O$>b"s!/G0,g9ufW.&eG'!5sd#F=qG.Sf1T_nkIf][^H;ne@2LnP[IGn9eo%Ip5dZ;Qq\Uc%oY:efKnNBj3f6"2KV?oCAL$JZ7;TEU0aA6=C4(GsJ4icDpEFIW/3lm:_XfJ;,VqI%<87gG\2h)Jf09,d/jqa6-^+4Z)dcL]9PQM-%M#d:,:$rc8]EFTFch0?`m9fpKjsC<H679+rR:@et-Wi8bJS#rM.HGBjKLtM>'j1J\c5#QQAN,f20=6Bi8iPPU8W>Z#Y6C#_01P2`%lP=%&$VZorINCPdNF&QL@^p1&j=E4[;BF+?[)T16E.bQ(Tm\.&A@`I3.sZen6qme,njVmL;(s6"@rkJq31M:VUGkoeNG9Rl(Gcnt%J][dq%)]*U!LFBg845[AWW7+B$PTcG@&jc+>.+Dbp.`"qc922eCeu7p1en%Z3u8`i*l57M4usT"bS(,7*'L>Nog"]rgPB+t.T0Mg%]X=[g!Z4Le"qFBcXad8P6n3-_3tNh6<o-:2@FOQp?0+U4m9Z-pcif='$u6S5+2)[(0."HsjHZO9l56=&LsZh%UU%d(#JH@9qS3sV%ZW0BClH_e<?BHc$ot%:K%NTn!Q&X"eV8/o$PSY\lhbcM%*b!2*X]6d-:?J!3pEO8n_IS[a@)Plij95OBR:N=DSWp[0I!$!$EB">s%FC#Ps;G4YjQrhA_!V5`98HK.Z-\=^L/4O4k\&cP,AibV`e6k)-.EbtfIPH+-$!L)KQq\=GkpBPHY-N$[qM+:$@g*:bV$h6k&9BkR%0`Gnu%aEWm:Lt&Hi&nm:Ya@lm9%l\)(q?_.%l81ga;%j/c%E"ee:L'?T"R!qc/e"8T#d(1^BV\)<O=Z-jXu)..#:@"j<.-1+^KF5%B_"/O/APGW3FcVYb9NuRj2iYhW"[;G^n`&B$-#\IVS5eC-U0PF`T='g/Nq>:?*5t;ZI(U?Qul0'b;*GlL9'9Z3o.+1Us>.d)qMFp%MR?9:n5q[NSP5F)Z3R$t'c*dM#tA/(-HdLYZ]qH<bc8-#YX')1$u.%OKhV>6"g1M<-Gq4r`rKXp:,Xl92R?8ZU!^gr.'4hY9]RGF%O%^&+d'jbbB'r98UB9/urd%3TQD)BqVie6FWWHYbm\/LOQJ[HU#JF_:=N3&4'+'Y_J=B;NZ8TsI`6Aq<Q&<V<PD3$0$7i?9,9pqQ%?mb&1W,5X+bUk-'8rS<9f[G<)2na?S=8A3h4>Jp!!k\dI^c%I;b]Ko/'$U0LP>91mido4Ga3@T7[qJ2WhfM%Fq&]tL$`()%eQ48d%I97rQ"^kgT\\O":!+Tf2fONYsn04E+='jOfPd6p'$KsNO@#!j/[ARr6=u/Oml11[eLn#h'mBnf21l%BFSOAbV':0B42AAu*%GHur%QM0gXY83)&/1,Y9PaGVV$T'<:M)hCLWY84?>NVk8o0]T%1B\[:;iDicH$P&Lkn_>'H.?+B&nnp8qS96:)Mam-XM1:,5UWde`]U"%%o"\@11?Y-Fb[G9`@6g>H3[]JBRa1+oQ9`q\"$BYg/"l^X9UII\`_Oe:!0D9^on')e4(iTB&T!&G,H]-[T^gU5E!6R?;is/]@^A"i%BU?,C%&8SeA>#&3+#Q*JhAB-[Y;'TU@gA$u>%qB\+Z55sPKC:$aI:q0+^F/7`q\lr(iI1MkleKr*m[@'LmjMGKnhGSLF[2L(5s_6%"#5j4_=<WimDcU!A>NG^2W/ruA*R=g-Ip<,i]=Nm'lTM9'6qJ8Mp6@p_0`/W'/ELu#+@sDbfMkr[k'jC5;_8ebV/hV7T%_E]_!e>%0EEhTj$q:$-6&i_g[nd=cO,3b5Wcjt"pKi#<.j,e0diT5JWO9'm#,9R%q_nA,Jlnt8$JE]R#WbbhjYkm0$n,p+DqAIIVmi?OOC\p%n1#\GBFJ:/!NfCp2BeNnX_&1QL[rGq"h'7(Zr9L![$jsZ?Au_0\SQ;$cK4Ub[5Bp#,K'[u6"j#@KIUe>"3jttgs(Q!6VI_QF]_$C%R](s;Kq9!en(_HKB3D%)C@,k5QlT%N)q&<jV&3_5.,sAZA3r<X(cWh.MJp-Vm+/VUs3p+9V3%ARn,N%(Pm2P?Pt+MA$=Z,p3XV!h%J;K]d&h`K,l6g0Eag[>?*D'8TUno;\XdYJCR-G-eW%5*_Mc-0!Q9\tsNqjS[-Td'n^S%5[HV\OV]]k3nc7=l9dgqWK_:JuX!>l_4%8Y;n/l3B4\o4?*MeIri0NR;Q[D[K4E.W`p@Y#]nM<8^tBQIoE<!b4O<e6;!d8<16SUn#@Q:mgRT[/"H6$@40JP'R_uor/pO`LGUQ%,BGkOA;j9S(1,R.7Ue0ENpa-r)23;1EAoVc^/(]#A(Y:kAq4&E4k!nM2P'KGNVNZcAkoPh)0&4(@Q[^Q5p94c)qVMgm.#R;&&.#!%Tu=I>!h8a.f.jnc"?*p:a6WEVY^T9ik,!r6Q=[2EQt%$T)mgn)U#8NTRXe$OR3I2/&1dIL8mqs$DDO/lIH,6^,FFkC'@:3s243&.%5TR-ZbF8A;h;NapfH=7hV/"6_bVd8!AM,mIO4dHiOibs:nJ77=8l0g<:1++3_[0"kCp"ClA%"S5>;$`fmG^aHc0]dWj-3[mn]ih8%oZ`orJ-<a5DH@La&s%8SO!R/3$EM.R.lJi[[J.G<_2Mm*+6NNQ+@rhu)JHYp_&Nm4.^C[BpO_o^_H>oMd*1]`XdL6'Np8Y%0_0<_%>D)=F\+3',7Y]Q287`(sG&\gYkgp2en\+fmhHmtMBr(1"Q^?M9TR55fdZO[TS*o)K$dVT+%IqrKSMq(fROqC]_Qru?\\56FmcjGO%DBj_))pS5Pg$R:8?cTi^WEf>0h<Ket9;5Y(k5K=]oWM>6/M++!HF6G'qGFTLkTq6o:FjVL3Wo6hrYU#G8`8D^Tp%$6Y:T-u$9O%-%17r?aTdo]2fbb]g.+P<)AKfI2/p;"[a)I8"&!$pY#D(thHkbE8O%Fc(efAoPU46t7IjY`j5VggS:34dS4K_ZB$QiU[!f\,%1PUCW%Zfb[Cp\a>'oR->ZhJ2B;W4#2CNhG'm49R'RX$g$e7C!AW^&;@il-toR_cP_h63,Sa$0.C4JmQkI[Rs(L/9g'Jk]D"Qbs?d-.Ukor%Qc4-;Xe^VH9,5211!ti1kmZ=ml\!pS11P=I?G)L9B)ffsm+;*U<\O8*'U,PMbf^\R,<JA:SW)h0`'lH7SKnJWT?#mgJdKll9I*.&%,jEh`h;2[7fTO]4]pbKh;or<pT[8DeJ#>BpeWU6Og<!3u?=G$g`c6iV@D1DZl1UU!1/m.YF?h=L'AHjM8.I+"F+\1E0[1'(\\WCX%#*]'S)GCCLRa=9'caqC#gglkC9]'DTP@rGTR7rhC.W^O4ioi,+R-#15ggZ^AMoi^8(/pVU9YJEP6tb,Q.+S(V2([=AcUhp8W7L0]%q*Fab-EDUo6";/8goNe;asaQ5kmOERIVUo8/C0E;Tb_EXp!3P7rLc(8pRAS9g1\o.UZ+=[@Pg]u[Dlb`[Luk!Z(*X'@m0&t*;#H2%(fm&u=^4Q7:&X^4/h&PC':3s-QaDsP5&AbqS,](%4%Z=Q'BR!=G\+AVYh$FWrh+G'@G*:dHrquI\fl*thJIC^\%`oB2X4P<jD1fL%UJhu@n1arIT+=HNs2Pj_(Yno0YnR(En"<]WG3ZJ5m$&t_93T%`e&4HadIH,93;DrR(n&$1kGQis-DaOGejdA!/`9(,fbnUmEhn()%LKh'ZQ`=o9?HeL#E`IMFV_^uDeeNXF<p-ajR<fh41uA.ERFJWNF)]W("snFkAn#eIB;VZ!fWF;o7BJSum[9c:rOmC?VTr^80#:6%%Qbc<@]$<oiSR"S6-S(\,UHF3IfDXt#qC'4j>pltmQHbG$Gm]>oe>j`gPMT^L\=4X!V"C+"V6L!u3\ZUBq:5_5bi;9l,G*sg8)Q&j%aV:1E:LG(.Rbh/7okq7Hek;2+:>VSQMLdOBAuesAB5/c0rQ4K>)6o:L4%*]GkYQ^T?1_#tSUA_o=)0XJ,ut^2GBp3$[s)lBD06@:%9Af!]r3)8K\cV&HAloJ,37oo$6ZXt=8unN=5fruH?J_ZJ4(V/59rm'[fT?"!11t5P4S%d--f-L"qPSf9QC%a&3dn3k8a+8>K/7T^%HLgtnlUg=)S+0Fl@*I[\ma]F.bOqW6Vj"K2P#bI6AT$YF\8ZnC2;+7Bl=&ehR*'+u]hpohUZ*ccbPHqbI5:Zr-,\h!:4E$VB^/ZU%NFr3d<N@M7Ubd7!4.2e=U0SF4:#9o\DTcLp:Lj5i:l/=/XWkiei4kQ4:QkQ7EK'Hi#ur"h9d?i9]sLsuUO,eW:&J^i<$`#Rc;a(]%agUO-$`t&*@9S@c$2e/L\;5cX+X%*8<i]29;<nicf4oJlg>i67U!M;^G"Vrd3[HG.+0tR9p3"l:QP'IS>-FGI:^*cD(H:QD:a*H;%d.PLRb<`>d/hnGYW=/0D09O8p`'MlkNTQo0\\s0*,qkjL-;T@cM9IfVcm:[)4!j)eY7KC*1#X6--(M7W5+3)kPqsn+pR1CH`.=bC%?bFcAREtTclDYD6G#dmleG3:Gfe106h^Jn^7ajdX7C*p;;4iV0>c-IV!rZ'd!LSX.>ai")IKdS2b"RA#S\A/[%&--"[2FjS\:@5Z%VJjaUrK8lGK[@f4#=;\X1n!2cM#%hlKUCkTIBl:#jadsh(hi29M0U5^V:l\d+:t9k/=9HM1a2_S8d.PGi3fPN<qAS4L!(![W*b*@%Lbb0&>(ou`r(m8Z5-J7Jfnn`;6ab>^G=bc'`<9LY_M72t5C^=QJX^fE):Kq@4j=kn<Zg^Ga;c7J(MfpEbP88=!g>-tYd];+nOb.W%Qj]k_!\0QFW4@GI"p$TL&a'5\LD!FQ4TY=D'rV8T4r7!n,bF/pdp,!MLo2=nI@?(lBbO9`m:e2E;W>gSk1I;urRYc"_W4RdD=_g,%2R)="Us'5RJ&iK_H.;F'ntXKl.t-"TpF:Q2@$U$;X"pq[:=0FkN0%U(Rf=_:(TlEC]o,$n2D*/,9A83aLXg#_<<]@`($\d)(Op`G%nc+LA/cK&g0.O:M"PE&tP(R@Zo_!KI%+e'K)f1a!]'g?Hp`o5TOBlDVB]ciojr#ec=XKA(4YTZOEC$@fU^kW?>KfciMeURC^:+,d%d1MFN/rQ:s#jj-^!EgjLr%Pt@(U!*'R%#>LHf,[CmX@?iI%TuZ$`J)eHeMu"cfI4\M`-cFc,!7=)3gKt1Glqk/p/s)]rs]@X&DTj%WRX6\'B6M)6QKM<5F(I/W-BGolg-BC\]J,![4gfgh4MuqO!9P;FY`8ug?c?*:FC@a?6bl1\si(ic?CfmHH5Sc':qo+ZX/>+9?EC%%B1]e%Er7rTV7c:0c#5k7mo%GT.He=-"[eaI;I5*K1#Jgtmo%GT.He=-QThMjc%CXWM&c=i58DIh5A]VTbmL^;j\jO($=CG;3-hJ?%p'uc<>B2RbdMG*;Y=YeFrA&@dXleTi5eLI(6^Gg8UWSmp6CuZC@D1D--;pb[m*C*!iI`U1cfXYkl#\;PagQ6B99RSXOQjkZZdWS/%G#pjd]<,VJdRtK/h-R3>dR?@o1X5klF$ESm/mK\ee,7)'l1$QpdWt!#VRa%t[$*V@]T#nfDmMSHN4PA!AKraNi=$Do*_"Ki&*5oc%:=2`+EbmS/@_WBDriuSN2O'*6X_#g0Z#pArp`ugHC#7VBpI)(sASeOI(RMB#;gM^1D9;\l(HsJ<_E;6(nf;7Bbc)lSfF.0sc$^BE%CsRa36MW7@,=B$rk.Zbampb^sR/8Mu^5MF7G;8ht\/h.;/q,q?`FVa8fafd)#1q%Y2Mc"mpN![%j3RX;h(.Sj3R(s/rW(aO8H.^H%o$UAddlYBMc,#<AF/5RTL1^/paUV\;AG*;N`@oX3q,.(]2e47ZrJ*@i5@;Sd:cY!@p$<$]Q79L(:[M=D:Fe5.bKd`c5K$_`3uc&u%jmCQ%eFSn['AK+VPe!TS196K0G)g<sm[#$fdYQ#%BBI7'Vqf<UjjJWJ%gGhD33=q2DE_4c_V(hTf13r%\*O'#6J&gS#Q805XO9`[%jX.dmcfV9jWVF$"b`AHEIfgK^4oJ-NKMMsr^=UZJ%$4k7#>La07!rom+qoE>2Tirql!bItI:FSCE0QTEYqb>m?;%fN(?lIjP=\_?%J%H-^X]41NW6L[&2-WklO-trLo'P[_:Vba!n,mt<U=o2BPj%u!'/3uQC$MVdg_2BroUC1/Ar6_4:VbJ*!j8p/$$O[g<[Rb4.U#+C%]ioh\CH^uA98&q<Y9oqClb;;>e0g`j;m.n*cSPFZ_G:R.%%;hF-tf2g<^X.JAueVBK2gffG99S?,O5cmcc$=h>\5[-fo$AtX%lEh%Z<uoF>J9+H0^7([fQ`hDdl?HmU<L=q\PqYd7)faLSknEPUu(0j/-aoC8kjM%7J9$NgFb5(AZ6%Z^m3()1/I$f4ipsO-n=DHbN2X7%-KR%WHl%jcm]a/bC^KaZP1sfEoO4OaGUZ_$QdF'Vh0""3@lSPu@BgDm"lb?\N+!btFI@U5&d4ZO.&%>;TACD/X!d7n3lcQS]eP.2%MUIIYcX@g"mm4^G?KfL./MlI@p:e9XqN<\S\]$D7QnCc4cY]Pibquntju1]DAt".;BsKX='lBhK'6Q.@R\nVMR[b+#L9.8oK:*ZQ%(IsOsd53eNk!mhl),:#9(enS]0K5FQpV?XlRSBXT5.u^"gMXK?fW19>J$5Ts1g(-TT3/iR*GX_T$Rg3uGM;LZRaDfCoA"]a'DGFN%ir2h(1AbPElkomXg)o&^MNtaioCdX6<^0oi-rBZ6<c8J^hCdi>l4:Up\qjQ*]D,d`;V-@mr<t><N2`En>JOQ$1deF'bO:o5Hq^[*%mj]sK,q&JpY2Oes;f;PK8?#b):TEbeJl=lGAm:TRHZ.D/]iIU<8eo)8UQ:V(^L?T(<_l>J-=-JbL\'W+bdm=C(WJOhb*JYdQIE-J%^"\Zn9:%?VZQEHITLrRNH3G>'KMA%_o;gt+E$TI]?Yn/Qn"SE-_qjl&C1>NIeab#l!oYGmS,](%4%U;]S,Zq)f+74Yq#r&D`Pl%,%=6]#GfiF!nHK7$LO`QLnY-FKcA!nhukL#&*]oL=0`c>(lf2j5*oh&pDVn;Er$3fB`bN,i!RY.AY;C7%d9MG$**hV\fi-:[_m*G)M%'&H[K555c7FF4t=<2/]R'!JfNB@GQ,;.1bgfDSA+qIEsSnYdXLf?&Clqk;WIdj[fYok\qD1:9bX$->$+93I+Sc^1r\kkYgpPg,4)%Faa_MFO8u.//C$lrU8?h)']%0a\X`I_nlgrDr9`(fQjcfZYO_ckb=kuMTY/r`U0+mC2sN0W><>]`2EPg0b#oaK28bD9W\RI'i4j6%oZKKH%T*-S+j[CJ,oTU^DXZi"M):2Js,&*b\6A'[^5jmi8b6F]'*g'_el8M)F2634V[ds#"j\2q/U,[f*PoK?+^3bW25YWY$QRJH%QJF'Rk-_i:1A16c(,r]oM<d9:8tgB?`tc+4rD\u/l=\1sWjG$EG6^]XX4b)dcB?A5\C3df6#FBTaJ[a37k9cdgN&["9"KUPKeG+X%cEL5s2+(:#$?/m#XE^#2b"E9-]QBj[7'<[p>.^jI"_glMdHfUpXj]K_OUQYaGl"Fb%o.K,@&b4PC+r^VOZet554uA3/:%h;"P%7f%oc89kFtAML:91@,`0lJ*q]:`hlGet*eORR4g[$c@bp*5J!82_MmCX!1aJ9,8$G;ZE2EU>bKkDdE%f'l&CO<hN>.D#pBN2ETT=[5t%"q+aK<W)mbbJI*RlW'N0Gh!oHKah-1IcQ86/tbf<08t;K,7$FR7H-fO"Z5;*GI7Sn8+>rIG^(cgHk`5,(#i5b<o/>q.Lg(Me\Y3$%&lSE$J5sH7MF@W;=5!YO@?nd&?O:4<eEf[k70"4/nsDiI#[^FA944DCLoKSHM.gIK+Ur&6+S*Clp4B:gj=sWM8Cd<Z<<]@"c=6kN%<A+],!7Igg!m24="Ym"+FiS`_@+bS]K5*dVWdtcV23@SsGCZ[p;N2pdB?GO#l3@HBX@`eLLo=8E"U6(\6[YcNAagF5=qr%ae@<.V%FI[?KZi\]ki!4/-!hHS4LT0Eg32hR\(hC2b?nVfG9Nb\5PXHr'"L2=qb_n6t&q<sbL3V+%%3e)AVD)[S&4D[dO[C`<XUE^uh*s*m%63ZKPiE/P,q\n\J/$P[s^9>'L^g9^-%tmrNa$X,cFGTfSY[DYf5][(\7rZ'?L2f)D*oMuFU,)7B!H!<(V2Aq=QjN%6hpfh_XO/Z:%$9^M95i5KC#"14$$"Dg'T2Z[A]W1JeMchE?M#dE(i0lonc^4q!.#^F5N1T6.bed?4cjL"$,=s"4#Ir)1.D?Is'G-#caMgR>,?%VY%N<G0-?KGcdWWQ]kH%$H=apNe7&uLBu$GQ4]QGERFB1=:F@4UuL?jb%TGR])`#QtHu")u&E@WLIa.KVV%]soQWQ;YR9ZAsjG7PRT]%0M%m+d%SU=Qts!.07pBT!7ND*'j:]j+@6(j/)^[tQkr*Q#p?FkJZ)n'Dnn(uhZ0R\i$17-dpV0ldN27n!g?+T"iZ<2X?hs8XVSA2%$O7'C(Sn!I/-M5Rf.6=HU=^8;>qec"W'a6lR#paOUJPG+#SnG?Ql&da%2NalqoIp)BM4/Xd9s$Y#K&Yg*!qWj!1Bg#.N&DU\>D7E%Y_/^dWCk%+b.1;<Jl<[@^r^a3DI5%JmKn#NOO=dYpUJct`8]!I#j!T$F^BnN\j,E#IB?eW:+YgiAV!`61-ZDr7:F.O&r?r&ENt$j%[5]hS8nopmk9`A`eJ[h_ROV=%citQ`RZ/]:=&gouG6"qQo`hj=;=du#gIdgsJC!;mYh;jAio6QV;YCl84^+nj-rm$-q,eRG#2RR2%pTm\K>i"G[:af?`RM/3T'7O,Un1'3V&le@;/6>BeQYO(\)F3XO#['KNHBtj%M#ln\k)i%[-R<9rBC^V03Ng*F[>;6@oAhAO)t?&(%fJ*!&Sa)^GLj9o>YLNu3<NB+o4o;aLW#ffF#M!%draA690I\Qg/GB9&ALUVdgHGlLjV,2%M=lr*E]K6!E&pYITb%Hmp`RLn+;?'N%H&Vtb8YCCLln\uTC<*%j`!kX1Pr,mGMbiV]Js$O+%D[pRW\Ja#[9B<TF/5l-OK**nK&*TCmXWU=W#YMGNFjBs"1p2]DCGc2,Yj<b%g7c=G&tiF0l\]_V6MA%"I)@aYK^;mCO8<Ijp`%$^iZ"QHg=jE'f4%niAXM5_O;WO0NudE"+>NnX7<ab3e=?oqSI&F3(U*p]3%2a&%.<`ir31ST(-t:FPl[$i=5oOYp'JVk=5o^<a8+?VN^^&kKZ,A-77B.ub#;#I9BEah8$GKXnr^I=Lo"eI1&AJj6c:8WC>o*n>>o&@k%?IEKs.dOKKA)q+h*Ndj7P"I$!2QGg]`lo-kYqdku=Zi&UR^FG`()(,k1$1):,QeTmL\i4F"OEhX[k4;n<HLahk;mbu*`*]rO*!t(%AiM[4BC;oT[M*t@aT4`k_2cmNV(c:rjXr_hRF6[Z4pX6nkA">gT)qRRHhb.3\:t57]7fUi'iHkP;Dm]OY&Wi?7MX;PJAUu1q*:"P%D#kg.)'3l)gqF%n<")]MQ58t_jdR<`.]N8QCXUOBpsL^KGV7nS<eI`ZP!Y).#RV/!K6lQID3/QkP?&p33[ul"8`36-i%s@#niB"J%OFq6MD?:FU76dSQ&5o70+%uF01rk^)=X)r0dHi*9V&h`f:XN4a=TC47e%k//,`]+](_L"!Zo]%$SekO+OYf/,lV..e4=rVT"):uE%=R*_$>VG__j[<";CZi:2*fR9OpCNA9T_S;I;_5b<bGEMB7P1-ZQ"OE#,!]o1/GNss`)i\.G3sBthp.3S4`GUM4?MP@;\O6.%7UlV%)a28MoH:\#aIsU_e\gJ5@G<uAQo"D#7h7D3m5Y&rEJem(W@ah7Xnd:1`(Rk<Vuu-G==a<bb7INFYh0ha(V?FemXX't=_u=GQ@R#i%@=Tmb^i7^%=d]9pmJm?%J6q;s.J5BL9B?0,[gXo\^L5ooi<9mLkI]M@?1+L@6i+?KoANHj*F5%e;j&5mk70+C^2RnC2lXuie7D-7%qf%"sR2VYYQb3oo0/^K1#K6cRg]7W)!"D$d\VG7cc1LL-Ap=JX00MEU@<f`L9eU[7;`u6bP2*scn>7#5U[p;2-oX+:^K+=JE,<Ub%E]D.0C2Cg/Nr*d5]U9gIR"cDN^%Cg21;aLTi<@Nr$o=(%_te7`H>q.l;PVE2]_(En+(U-S2qWr;1"?AHArqAdS;H-n#A<lX8EZ$V%SNh^Jri!(>c4!t'$likY_f6dDO#'_Po/#lfM3f-P?Y4P64$6Sq7V5W=;@hs/RGX!IYDpqAS1n8L=K7%AI3[BZ+WPka_KI*4n^"NK%lKIK#<aD[[R&!Bk/?nO617DETC%ah.PBJd^XIdL>q\<U?JV@`H'XU;?c)X0har4S2kS6juKuD,%6B,Zlq1&g><;G?obdW<n_09[i%^@V+[q@]3pSp:#8X"*$!N&_Msh31>&9>MC.oIG7'*N.PH,'G=`PWj%^mg8iqp3[U*\'n^t(5(Ws;,6ISHG4fdCP_'^OPD]o,n[*L%kbB\2Z)`&)VlHCYNR;"OAA,?p(mDd8"Xp2C+@_39Yl."`fb7/60uQLj_PtC&C+PEhE(q*CJ8;B(Lda95SC"@F[FKSOfRD?kR'VO9%gJAYS:90]9J4V'KWPu2VMR"^ir=$nodHhURK`d@8JVkd./VtQpCa(Qc9`u\!,O*0jC(RUS9+K0W#n'LL2U.<6[,bW6+YbQZ?j)g;%`5)CGnumR41)(&MBM>R9@X_34PA-IGU0*I]8DYX"h=ZRU(PH3S+Ku3AE^H3iWbSZ7.Q\m1WjH.t&$EQ"6Fs((<%H/<\q='U^"[<.%4=VdA&o1Xd^:sI-J]@WU6+>Icj>sRS6;0>LqoR^[UNfRV@L''Khm6%X;Q$+""G/'*n`d$dE!!'WKTY.^/`>FX66Vt6(cjN#nl$np%b;'KsRXCmG"gbdRp?)TJ3VedQdhBQ0"rGChr)=[sK+$jh=pV[5Tid!/"D4)#gBhnO.'LCGQaCUSNa*^PACgY*=tZ1_+;ZA([8p7l%MefM\>e%'QHMjqX1SLo_!o(I$jsg:AJGj4*9FpWX=*_^c!\`p?q;#Db:!AiA(NM1QJfT2,c`L7<pY2H#%7tF,:FU[^H1SchKjf\&%^HC.PdXTMJ35AS$e]qjp6];3tUU=b/nT4b6**.br/f/,%m<spbpT$,_/pKG]Nl<XU;4H=>8k+?%8k-#h*%Q=5BL>JXCZ<s@NBKVG%^$CpuM*qlOTQocF%f4&BKQoQWQj-E`HZ$VAK=!KfK-Yj[A5`cQ.Rkml^7LpF_=XO#'d>8r`8Cs"_Mk-R2.Q\qU`'Q9?`k0=>tS\T%6nDq9/;%P^.[H>rLb+ALA[M5*?VEm4j,Sbjb.t\<A7QhCQGjXOPT3$+U//a3+_Id4h5GWNP.%Zh8jL=nQ\<1K+HjG%dia[N5)[qq%O!#L+JQl^^)aM'=kd>N@<4uB>.+-qSEAB[Qr*UN77k/l]HMG!rb#dVaX!Sl0m^i>'ej#J8N(s>N,L#UBd`@gPl`K<k8J<]p9S#-k%I1RI2oXh`pO.gqSVEOj"./oHD@"a>,DW??`*j9=,H#R@koM@6s"7b]jiEhm&dNf;Q+"Dl0i]eS(N^f?9O=I1-Mk#X^Mgmm'HVl]6%;&e#&$^jB"Km/UWhuB5BTE"l)OoP>4]H@+Ks8MIrhN-mqr;HQls%ENENdj9-I\#jJ&.:h8!MKK+lljM"!Ab@'X&s[/b#DX!)ZKKG%?Rm6pPq:-PC(cMfe3p9_Q#!D9MKi3JhJ3Hq-%P,ABe@^KpI[(JA?;6*\7[Y2]luE#QJ!3feAU`dk8:&-X=<!F42cAKMb4mdOS4n1%^G9FZ$CYUkRlBVFWX6(Lh&+;>la?&h=i!SkU@=mR)bn(d'[Ll$,@@7H3mcClW0E\d7X\7DjjhK^ga\VJHU>,nTq>)j'ILjZX-^[-%qITnPEUO;ck2P58Pg"0]/ljcn*7:d`e.Y>,2BMH*]$]f<b3ErmXXMTDr3(0*3p-or^>D_4T9I9dYR'u&+kNA#e6VH`4-c2QqKSFa%=Rf)7[O71'K4E3%*6u7O+0_C$$YIQ[IEJ>)![RmA<2>#/19Ph2;de!"dD":i,1f??=8O+lT,=73E*Z[L*oVYPhUZ(,K-4(r33U1m%>7O>M$Z"9h1!`0)Qq@gP_1CKc6O]!P<RQ:n0NG"kJ:ce+%$&keDis$9j8rnber0'%hP@"IW5V?7N],p_&(1,SjL!dhJ[)-2'I>:n%,QWh%+(e>9ibIPR@oG!P"S\$<N=e-R).t\`!Zd5%Ye`jGCoD9@Z<ZC2b%3DB">6H0K6=2uBX)ENJ<naVQotlZ-i#%GBHdiTFE>9Q%DF1FN6("Mg(W-W%F:5+"QfVa;1J_-LlMut"B?6A?>-^.rQY\+T6)A;<_7Af/MJBU".B;'p3]1$83)-qKLMAi^Sq^uiSI)fL`d+Sp%@"V3XV4O$I)QijNG9B=3&77Om2($\ie$Dca_N8EPjoQR/=`B770%f+1[cLoQoI<9g4+\1&lsQA&/6\RP>bFHn*+hu6\$=5J-$f&D%U+FO:/HnUk$=Fj[oYTS+@X'Fo2iq9AQ>Wp`&7t&0q&"/Mi;t%2=`B790%f+1[cLoQoZF#"1BNn\c<tJu%U*[Q.A3MA*j_c<gK8A3%e.,B.kNV,\%GeNjIPVAGJAlNL1N`4RFL_e4[bf%IEFsJ00G`"DiDMp63!\d_/d4/SZu%g:\(sYRcAj&:3BLKD$B#b!0c0%M/r/31%:i<@OVmc7t;MGVA>d-LBXn'QV:l\Rf<*"`o+MI[mjWJ]"T:m6l5WKU"JI^cm3(5hDCliAcEmS^9Q(jch6],o-\5!bS0hu42d%O\S%\#5o>*D\]"8?#+3%->oFNDKV\ODu*.!94[7;%DYgR%p0!&/V3$;TQi;7p4!F5_j@qS>)M]2TW7B3G>nXE[^+2_4dA\>Z6?7(t2S*%BIHr4gXAuZ9\SYb-AP8*(&D'3%UsC%Lo-+hDZl0MLo!g+"D1=f"D:Cg[gFt2gpRVbG:R7I758>mM>ae1#LLihn9`[s!'+%nY=ti&%0Q##OE8$aR<Iort2<FsO^Xe<_HQ(%PPOqIWCSWBAJ1W[]@H4$:)F5gp=d(:/3OGqo_AP/RV47^d8;H+3m9Hm3Vf'[H]]iIcG%M;"%g6hu>W^,(DD5DcKG'WGGJp(t3'/a?@UhOJX%df4#j3l5?6>>/Ih39+SZ*<!jN%*mIAUuJu$ogtm'\K'W\!=hBmT#!^3.q_%E4Dkc%&2C/]>bFHp*,\P>\ZnnoPg,>fS-;"<1^8tuG[h/Y.>O3fRW?EhEbdAkR+mo1VFZL#%-_$$_'_.,_S#;<L3>P4%./#LW>Z=*WO?')%6b==]:ID`crY''kUhJqA/O$;!j'^^^6ttAKoou>E0sk3>)3`:@SHYm(LYrU.>d2$l2O;4mmT5j#Ae8\1R/soW(t?'4V1=kTH0h,W%G*BQef()A\c@R(j))K=0SM>t!['Ks9MKm_)EiUm+RG4)4]#6D_2"=IOK2?A8KmN)fL3bh<%/"S\W@AH>WQ&296bOIg:IDgP^(b(*%UoA"C%RQ/Sj.bCt7;;$),:ZDN@rStY(t6]GbQ:_m6Z@d+0%_9\)bZkG4-lQ]%O4>(*-/%dC/Pa,NO_<0H9(npL3aLq.ZO\l;U5Lc%KKA7U7D31LV5\)9WAO:,dH+9PQtJ&E/20LU"D=[rJdk&OYnZK.@k$]r@AKi7L[7uKOlJ9a"rcbAi:f(X)s^KQ*R%"+=<%9\U<gP2%mS"PB601I&BW'')N]T%.A@T-#VuE2'G8>o!XC5a&1^=!W5PoiZQiE9K%tDk(RK$drq0q*XqW53c;^T$?=g;p,?#UT#)1(qGK"EEK%.ri<kE#0g1=8MA+gdSo]`qB,b/fE<L<"pP(/pMC$i"M'eb(ZJGMf0(j_$[Ik-oq&OK2C(lq(NLN`jZ2IN5.5Kh2uJ/"sHF(2EK\)%U.aRV7I_]"(T33G;&//%9N5rV&7pG.jPil(02<I#JqM@fRc')[7%9.NoOo_N>[ppRS0<PR<KIS461?ggO^J@'5a)&';hgInOE85`%pu2_@,U;e@Sh($W,5E%QN"Jo%jJ#$Rr9\JJ=@4]=,lcl2Yp)0k>dOdN3((@"#Y^:*9Ml'drl$==5ZC6o@3>jTp-91j+VtKKIrX1M%&2i['E"Kt-)$3,o@!XqD$=Z-g02<DHTdn.(GprGj,!E/b>c^Hp`MoUqE7h^G%t&AOLlW.X*`&5V+HHAX;hf:j$M&`f#ljTp%TPk^%0Lu,]WP^`8fXZMBHuXn&NY/cB8".:CNVn]5`bDB3j<HMnrp?s/=@4]E,QHcQnJXCR>f6i\3((p0#[EF]2+:pjfb`NWLljE-XID(W%esno@,A"SKIb#M:e,^G$_o?](VCe9U$Ha3:lg`\36(CC;`A^1gAF,^8C!I?.OZ$Hb`&UK/7G=KX''F(.(F-.id\=hrk=hQ`Bq$G:%RkoasUlC]lD9`blOg]"FUcD@U`<]_8ZtcnB3E*"Ig9/P\k"P:XB`f\PS$U%,Ub/&UER#7W0`p)U/Xm/gc5$hN[V`=g3E&12g5*i_%k:An2C$R*=S?iAgN50U.lR#8p1IXB9m$eE+c5,r32Is,C3Et!#g;:sok=h!K,Of!e_T@u(9]6Bt)^e:M1PIZ]NL:c3c4nik[W6EL%3E'V/#^huGEmj#/A%Y.JcH2749JHohK-j*[1W:rA/Y*;qc5=/I!oKcp1GTs/H_6Xb`pH`r2HeVKDEGsHR[#mcr>fh%$A0f;J-CW:%a@OPI*Dg4%$'a%F84nV.Z7OWUOM4`Pj;*La^l/WV5JUgWl2j"D=?mbA]<m7LAL]QZ!#HM7f6?I0EFLY7*T=p<i%BF:QU`LNJ>:I,%%O/'Z)D6cE.Qe[o&`$!eQ:I(KO9uKjl\aZPdK%T0&\,90>Ng5;$>C+^<7jV82SB0"l?c!>BSB9m_3K>\]ouGrbM`)g=Pl,N\sk1>%+2rN]@KiehpFDcN/^1$MLXhIod1(<E&qS?]91]#Uek'%ll`G%h;4"%AcR5SRmJWu_XOKF?Gj&QqWd7K0%Gcf\>R]jGK=dj5NcKR<%\U;CZ#kBk_P;#t@)hVjnW_)#TV_5$D(riNr[Su!<!*ot]WiTE/[<a_KLb$aS>;Y/A>8,Q?ln'RN20C6AHJ:WfC)!_,YiSZ`Am!%E%*Fl*:omk+.So78b3*h_o`XJiOdr4mZT2XN]ehsEgn(#*@Z%G.O)dMXaWKK:_]W"Icj/G1r"T-2SXWi%[WC!GZd&:lr,agST?85:K%c!'Wr*mNSk)Q&_ll@D!?H,WqACQ)gZ)EW1/6>V^-E(H9@BfM"Fa;+pi=U*#'R*3e!km\9OH#P4%Tfbgdq6heJi<gs#elo4+W\/];%6(E5<n8aJ^Dq9f\&`#+O6UKVJE#q#EL%S%pr;s5J"HbjKjNI1D6m.FX\<Og^FD7`Vjsh,9WD\gHFTG7C>h*?5]7pn6#(<KCY1Q$0%Fd!th[r$1S#=f1-$Z$X24f78Hb'60\s"&G08bp$+]L!J7iD8?"&nb"Q466PqUR6.!?D!1eYPkh0A[jaE6_2%T1q0oKJ><a[C(I$m%r><)+OKL,,(fs(OY<++3]dj;60G]0t>3e\kYS/,?-0uAE2L.YO2MJWPlYb^)mWKQS6E;pi*5<;5<4[AX^e<NIm+f&@BWe1Ul;JM4%V_Em0N)oV]WOhIZie98bkZm`hQ[ZF\JSVXPc0Gs*\hl*B^k_/E;jY'"*;`'^il7O?91pWXDKj@#^#_>?[s<X/Vi,DT-3m+^:$*#m%J1O0qZni9BT$$W,H_der@4jrT-m(LOo^,`&8*Y!<+>?K,09skr93j'?s))]'G=>TVVj+5=2VJ>uariKml3nh6Pfhq8F)gMDS"qD9%8Pb:-/[ElH8+<X,&G;"E&d0qL=OBLm_3BAk\[e*,ptN4(hki#P:X-ZJ6G`<<:LH9%f@0?KSaao=bYD%tLY),R4>[#.hMl&h1)[WI%dsVp@O:1^*^(j\_Mqn6>CSSX=+nnYkVS&R++^-t5_>kYmDoROd@sKAN;]\mj]Q-[j"THq1:=F;8JP6"L1X6JO48l;T,?a<2b2RMS%E=o1.."?1Gf7q8<+&i;F&ZGH=X![Ie/fo6\o\mW2p#iqJ;l(Mm=$>49BNn"-q*NVCnjKi,C%mCe%FlIFgj*5X4MhqVT\CnD7)Y`m%iBY5:+B%qF*#QVF":!B^ghmU3KiQ8^VAmr;Th0q=Snt3&+dq7u?i18X87?81'Z%"G"nSe=;psO0*AUqYraahV#H!8$7AGFF6P!<0%id7C;IH_h_16fJ\kgn(K+S>m?&S;mC*(pS7>_nf@o#H=_#Y?S+\Vf-:,]Ep`FDpYgh;SH$%VifBlnP7Ta!5$<Vii.M!9>'Q#JDj%%qPg*tl'#^B1X\+$IPtLi+`>^&A0-D70QW[Dk!!e#gDOr5!Bk[B2-5VIDK;Z*Pa@?X:4jk]kh:ZV=anN/;T,K\8/O7k?/.L;m[:pQ%;j:tM$4P.X<*f\sUX8C)+j>C^?jJ2X'4;.t9l(82a`h?4_eE*NF$EZ@Qj-O#cXI7c=JY`/M[4<p/al:jMAQbt9ic&(?Ne3+[U"Ed%<BO?2*Y>gBeEGN1Bi?1Rp^q<g`12L$.j8B.\<ZPuB.()ZBt`R(/l1D;i`sHG0XW(Uc@Ea?7.C\F&B2@=Ll%3rk[og2$`kjsCc1]R%O=gpGY#Mr'D64:EpHVd;JAq)0-P^I"6.P_;^Y&6F"'#kJDk41W>Y_C]*7RWONitBgoiA@W+e?9=iKB-f&V<Td&fB/f!,R"fLdV^i%G=-eY_VeNrXKJggbORgAe8U5A_jGhf'J`CqBHc@:1NcF*.+T1j=*Ybj##.eZVKs_$6=Dn4Sd#B#+XWHiK#Q^led:B:%('LX@Q,^T%,^G&X7jTC[\+p'.(ZPO_"Ml>qL-f&HGsYC_cE[]gi/eQ$Bu2ud+!M7-b:\^<!YcG6%UV\e_:GAh#s19,*%.Eof<JH!&-RbfkD(FZ%2AsL>S&-qMHVo"=Maqb.)E?Y9AegpD9fscnmjOFG8R]%q1FVL2P$5&<<,``-GF*J^kmi*?\A]r6^L$#UneGQR2l45F[fK#SE]j&<%0XOsZ"%Lg=c[l..%;6AhT1I1\82$)*jrRH&A;agk7$M@&VN(fU6*,8:7;WG`n5+or#df\F5j2*6E-Fs-`DfA'^]Q\ia1:&DopCg"%_'?[tjD=n3P\:f\=@KsA5*VGiZ;q;gh=hZ:&+t(^@]#!)<<5*W659'7ibP3k%O57r%_8^i8Oh^E#IhmJs,P.^kPE1cjmh!A;3NWY%b1/C.?"W&T,:ZuU]P6H6F$kZA(GNOKE@/-7@/:l'j,7hgI>ip+0gEDIG4ru*,M<Bri+JJ[,EN@W__cTiaXHDc\7[7<-HZ[Dgr%dU%!"<[jE.h&jfAt$)pU;P-&UEOFKNAHN*oRfTFfIr,QouaYCLQRf"6me@TtPWdj$J0baGgRhndoZ]eDVmNOT9f,R@p6GAY?l^G)[]K%bE@tGQ/ipF?V.:s'[[j(_JTrmETOIpRInW+1#-=-l&Z&e.N%ZOF=@R!,_WiRof_N,TiU-^Y\&#GV,)5i6'Vd0Xl'J`$T+jD@R&#"%NBi?Mg8c;E(PYat66@Er@NJ@0B9U>]1E7c)Oa\@GPWBS*>Ydu["o9G'=E'/>Hn!dE$3PrqbnPab4eBK*NX"eW>Bi;eo+IdD4PVk3%aspo+"'-Ble4Y']Nj*[5NV1Mm;5Bak6DE,NS=X++jmV/]U(iE3'jW)^2oV!>;(,5mJD*O]N!b-'7&nc!!035AdHStCGm.92_RX'u%:]\Ogi^UTj\@,-V6'R8$=l;r;_64uW)>\(jlArfZ-`OCj`t7@H<p#7bePSWK$"9Vs'dL`+O&1?u-r"i8$=OfK?'a__`=P/qlKi'f%-V10[E!-F)<!=D2eT?o9j'p9-\cNG5OZ>oM0\I/]NlWRp:L(\E$cZ:=OLR'57"?M1a0H4'M)+/;Zc7;Ga,CO#KNJ`(`3A6!+VB1b%Bh@uj][e^4$M`e35dWeEcNV8j_?HH\CmdSsrMV4[XB!he]`NucL%s)sC=9%g<o]nFo_Cu&F8UJJFNJOD73FE34d18F:euA4,uf]8%:cV"!,pu(*6%\FIHiYJU4dJ0Lg8Bg9:n8fBX/)O,Ci9@1Q-34GKH_!`"bVXT^BU@QD3"SH_"=:e^>%@,M%#R<]rEHE.d>:n#i\eg%<;Vf8W+<UOZK<2tXbhgp4$_mu(K46A+2IpkCPFqn+rZ?,%QZilpekN:9f^]4<:i"D?*[HcDQD9H,7)!]HCWdT&jekd[3.If!=M/@%;8,`/?ML5fGBu[!Hfh<$9:-#M:u$^X75cl)V1O@sJ;K\qoKNh@+8drhhBae0m/R<:0qqqD=<TG:SrM@0$Ntk?Tk6;<nd'tB$:W.i%n`R/Q0Lr;I!s:q.@V4mRL18EkFn*<(jV2Y!7>);=R)rCg5fJU*'OG6R0tI]h[h/(Y(2W84hJY,i#hP!>cl_`q#AP_)F#4<Qbtj7D%@d>Fs@a04\P^oXRdXuY7;ARWLi"-9)M"-r=l=)VPY?m?U9#Y@L^/+r@*tBst<ojo#YX!5i!5T/%:+M%&.$-bfg"$?Uk+bt^CkZU3%]Ag9#60Jde!tZ&^6*X2.1Mom@(?Vu?J5-ntKm"lt1"S;![4#uk!Tsj'+ASU3FCp\Ma24>V3C)&7Va<1+gTlG=f\2\XJQktKP+/:c%KbigXCk,7sD2!-]feM+)_[._j2_+Gn0%<%g;M84>\L7,56LN5=<$uj)qeNUrd\+%@%o>A_:a1^>mGZU9!1:3!#WE-`3>k]UC6?::%h!p[<WeOprKg)'f^k=E9IA\83[JnU_k5n$"KRn]j#8QQAh$IIl6P^H48g8!ZFaP@[*O=KJ"iDQsm:>HOn7UBgo\MX;UE=J0+W`Hu%*EFT76Zhce"<?r'iH7Q]H\lf$-r4VPmV$^L*N[g'0KPr,03&=;I4nUj>,dC!bViWR+.\bWL\ASU`l[gRRL;W*X2E:$Dis/Vm$n@0%'[>'E,f9g(cMZ7$18FnkdH[W!VFesm!l[TVQ6L16MUtI#S0tF&nGiWW88BOfS=n(E9''?f*XR4i]a>DDiXrhRe[NTC+-.+7A-CP4%J"W6BUREO?VFdq)>27+'0X4?E4lS"""1c:j^Br]`/0k^*J'D:"g2?KM@'u?Np("\,@6_*DaZ]W)?oCM@5btM%;*WE^Z]'/DR[29r%btMP!o\F9PdKmhq!Jbs:$5kN4M\9u6,?9hu!c2(+bQD*ge0d6VIaXQ6(>+(d9T92LJ!";BA4kdLp0nE^[Xaa7oh>\$A-)Hss6M3L%lob`1M9EYD+qQ4NVuCK.fh,kPhL!i@aFHb-NMWHTS$CguZ1.)_hF-YRMq1`&q0`3P;BIHgPO4XChQVK/H!9O`%[15\H*78Ff@Y9^%ol@asC,L^,5<3K0FidoD[,hXqS.)E_=5@;_Z(*Io]s>"a/c>_?`dX%&bUY'H$Ltr5X#?>II^_D?+6?hP.f)[1[:#io*C5^\e>MV&%[9gONCK6ZM09T)Dfil*rW@Dusr25X%c9rO))M*8P=7?L:PQ.W^mGdDjlg$Jebq^k,nZU]MpRU%"Z<\T]CfVB:ZCtD"pUqIsAt/d^%m"/<4IVS(gE\G_%4c7llF=bJ9ZEq^heB#Mg$N:E<Z<Yd3m%mhHeGYHY)q!9._:M`9?W_d*l$hm<#9g4QXgYt;qmF*B44c"+cU@ed%jBGq*ir!kL7@)Q;m1Wm:X_%r]iSTqgCj%;.J:]94E`j3h<V4\aTN48us3Y#PhlOFsoX`)bfMAIDh0Rr,AORp5C*^gK*P>#0>p2$D%n5:"M6`ZGpFmH/cjc/>oZ;Oi(>]]1]`F>YfS#rbC<0gn@H@pgcXEQac@<4,3*+M0cnVp&n\.KZ]_<ZQUq)R\%DofNm,h=LbSg,Ib%YMc)].ne`_C8dD2onu0GX7&PBB^1.MAPqZ@W19+03Il]1FIM'N7-;JH"Epk/fJ*J@<lAIo#!EG^CJrX@?7^:qKEW/XR4.cccsohW%KlUorN5<V>/*Sn)*@]2&qbtfLgNEDlaM';YDuQ6ULX6;%6@PDf81$OZ>Qn"0>=sRlA[Jc"m<+Rus102VrT'Dp>HKc:WjAc00jIDJ%4*<.HmIG.9d$cA586&ap'Q4cggO.Wq`Ue-_3_L[h>L>-snP6s(\I.oFc6$/+4Vi?-\8+7M4h7HL%reE@OOPWSpLUJ8CAi+TR*$s$%o$um=JPb,l/g4GUYT<e6jVABr-M#5a9f6hY\D!Z$Sr8IJ=B&PB;L:FQ4e_uSTr7ckCRA(m,nM!i,L1McL1&L=6eH5u+UqqpJRnKt%6;A[gS@(O:Rh8'8Moa/!JEJj8aOqlY"egKo!UOhoVGS68Yl8tjnRB%)+I5GVG'Sm;DFmi^[8)FH4pi6>`j$*Y!TY@8gqe8,,0^fq%?m,ZTM.:dC(rNP>BRp&O)9+u["d/tf5*bqV'c)V\Q3/['BIe$/m#0;2,Sh4"s3359U6%ZS],7c>&0^IZ$`n"HQ'aLLSmg.<rUUp(%GrT@fCA+l^6^.R\*"j+0!!OrXX%`&@5\:l.TbORLP=_Q>T^Vc^c8dQ9@U.f!$(jfKo707a&=@_O6>uL$;<ro@8P(&E!H]tAQI_1/%%q^I\PgATskjJ=F"D\/UPh&7c\6]A+Q]b:</"aZaRYN[coC#<B\Y8dcpgi!;H<jrt4_u/\[D`)t.5\i_ZekLp(l\l&aLVK/Ej?OH%)X/(e#]R"3Jl<"@:PV0VmAWk/mr'I!JgL9>jmbABh$G#pdC/9*Rp*"0%c<\`k2YfD=Z(YtX]^?`FUhVIELZN!Wl@$s/m$B"Uf@M/%g[,c#:X8b@chBZ<&j1QRiWcA]-;eU4NNI^>!#kC:(3gTd!)1p[:,$QBq^8N"=7pfdUnL[=5':BUTgsMDbBZ>NX,g#+E^@mpKdi!$%%ZS@X*-'1iq1F$Ia^^TD@=s$&>n>U1UWLZR0KL;MStCO[IW3Y0"r.DZapBru%UP-ZA?!nu\N/VV0Gc(&So`_?rnt@3S!4!s4+e2k%p9?lpeSLR_m^^R@@:V8ZB:5mbX%k<0EXK])GJO\YAh(Ki;f<%MKMaGc+PV\]j0a<O?3M]k4E'SSR^KOZ7(AdLotrf[c^4Dfp%^/c%Spq8,o!5#ZcA.E23]Ahn!+(5s@U5VHMZ;>V(XEg8'LmsIKK*KeP(.cm(<ERI^*j_CT!4K9(LPEPEFHl-E^SE9WS1U7irB^baJ$Hc%Ruf;ZRg4_@;#n9Gd+Y]]pu$t$SS%bpAOMV`)cGBOi;DqZR%aTo9qiFj`XSGEbC_aCSVB:N1\'hWMcqVK$kh7f(]1%UHgSLn[dq=Y%3U1hg?-'l!?I\R[\b>`q3CqZ3nqX.I0nj_h)Bfi5*(A-R-7JHM_-5r#da2!@!J/I!Z?3m=*uW1OAcG;)XmR!24Fh7aZ)Q&$pRmiu%*F4U;aCcc6-'U2#$Y"hpV:WK5Y](;]5jmr(K##///R''$NHASI`%&b`&d-a@[RmLge(UMB*br:!R/E%JdXr6QE@>Ha%B5<4nUf->%JN?(B2k(+Clk$SB/??Dk=4TRFbMp[u?(W@q4Rm-Yc4Ts'Qh</U;CHaj@sKaSL<=%Q0/&>J?TP"DY*Q('Y+U8`QU[]Q()W3gU*u4i%%AHZ&gj1_e1domZVu^MARAs&5*o%LQP-#8/AUt7On[p!+h2F=hh,Eskm\^^YDGqYLO2+1XGF<(oUr8T#/Wm5seqA^U!"ZT5SB7+K%@*:Nk4*h%t[EoY/kTFtlm4OI)6D"pgqnkr=q77mn-k\?28$\7F-ItQcF\LeT+f1r)N(>+Na_bS)fM$u/7!Kh&KJ)De,E`[kN)"L8%@[MrYAn$X;@ZNs8WOWL\%M<a`=WWWd@=/Ri)FO6#X=s4bMG)I_i_Zq5#HT+fi_^ZK*i'?ES3dqp<IJ*b+sNbmd)S]kY_^>_<B10r%adt7B?kmk(6cp_L:mFIE<@#3<"9&D@^DM`r*fToVGn#i^:R$]mk!=#TW!qI[5%&o@o2JIr*oN";XFM:n>]i=$DAXh`';V<>SRQ,0%%J.j&#Vd&_OP0f&CbLsbnp/<QEu,ZI<8B<\G!W98!DHP26^1cP9=$!\nJ/)kY:.BC'SW&Kgi+2,`c-"Sar&E64$jd+,`3/fZ'[(W%G&q"KmkI'#<M58ohZeJpaaNY.M$:U\92+0J5h,,CnbK1p;HsTU;(fa3-mY^U;[.lU4QLgcC=HKAR3'9MGY=,i3L-.k,FLG,\eQ_r%V,Zm1qc5b0mp/A#.B`DQ;@8"@c]F6;bdm(m(jR['nh?Oq2...Ek_L=FCH=urB2aWGQhWP0K_U,`jIej)8N%\4SG/6F&4<I0:HANq%`'i0!4;'NfLgqYd80i=cl%>aO<Uc`E8q(/ohHTWOrh7]3LqhTK.rGXP)Q;Ti3#1d@TYrAI:]UC&b5d`JTEJ=V$FskZpA.b2Dm=ul%C6]9k4T\_7!.SU*!h7!4OlUqC.3Xt)3U&r&9Q@6QLZF@9;F`_K"dK/,#Gs5ckHORjk0)Eq)UZV?i<4nr_C`!oAseZiZ'=!TWBrnr%gndV:FBGPnUlhW5jKZ;*bk'qEAV%XG,jU&_(h@2IVJ1WYNX&9HV%IfLcIdXd1s.<cTGoYiW/NB.)O*aJ%*UL?gdDtSe=d?XEIe*2%aD$5mP7\j/9>Z`]U]`W7RI%<uFtC+tn-l>#`!Z-C<+D5M!2_K5927m[g41rts.So'C*?Yt.&AX-La4m]4:KhF]lpn9O'Hpgn7-EC%]^1b6`3ihdR1FSsA;I6RJu1OZ4.<'<RU!Y&EnrXBKqOQcC_V"Be-ac.HBg`&>S[As'3@[e+X(@*6#@#I:l%QQqI-=U@450O5Y]+W%aCuNJ\Ll3"Z*+;.Q)?S4A??KJ9M/SJR?VbaC=BXA8j.?>mCZ@H?.@H0F8U0tLJYjRJ)74J2&d2md=q3oW;*M9aTdOf2VNbXgJik6%.sTEX23L_rQ/"tL>Dl\uWZ(7nE'=MFJLW'4)0\V7o8tYO>2)LuW?<V6E^dO-ZbhB^;HHsS0p0pgQj7@:)"]4Sn3]iU?l'/DBNFrX%h4Fu<)<_DI":n#u*H2e:[=\j8?ETc,WK_bW6N3pD1$h^0LT31q;\!p<cq$\NA#7Jd$-[\iiB_d-\_7TA(G4PBmk2cP-cdqT1h(=r%V7[!M&p*f&(NR3tA%/a.FN%2d7VTSm5B-a'+^jCcr@h,I:Fm,`XfFdd#k_X?\BC1A@lR+7>J`FbnrjFP.StGNTX?Nc6L7VDLTW@2%$_^N;652%]'a\F.#UilMr5"f0;BteJjpTM%X#nC8nL#5*Oj@O&F+>sdB0o)u")Yb[?a;n8SbJr)!rP]n4nVOi.]%87eIN`-/,hrN%;`kFH5[\gcRO4'/*4tK9^l6-(NS5`?[hkc;5dJ/S>4f*>ihB1JNQ;](+d+?pBJ^nf)CAMfJVntlf>/l!POk<dWVW7n('ENoY!V@'%Tj/LlCJLfX-k(ma:5CnH.N]e.E0GpS_,j4F0ZZ*$#:eC]7)VtXTt+\T)?R4;q&g*Q8qt0^NnUFO'#g/rLoTg\RdiA2A*Gga@^_d)%Ja7,n:LY'W#25%;2k`pj$RTZfQ6\BQ"E%&\s+h`,GH'bhQfbTd(#6TRD55]GBlq+Wk81O$db7oDFo."Fpfs/d%?di*dV<1+X_+V^%?!e1VY"uX;hFed3!Mj4\ge=..m+39cUrfE=NQP;hF13N&Dg349-GPodj(M\3H>SJ3[?Jm$oFGg^=iP)seP3m12p]'pV"!J<jk@K:%<_'f/WXT0Gk5K=MH-hjYHbJ.P<,iE@4/IVadq\N<:-($J^4ecU-7.HT?T\5"ca@)/`JG:KMghg[Io)C6G^i+AfO*/(j!n1#f$%X%%e*SD,&C]pqO-<$Nb[AOsQTMAKAu?e58kP%:0ZQpDGU<YMH$jMoF!CW%0gWfgU=At-O<Uq<j%lK9/5>ckT1_t&.!iuT%DrkFh4WN:%>Y4Yfq!`IA"ri#qk(tNfQ6!a;]F]LZU97aT=kZ+81<$<a,u9.WjM.7*.LR1-Y+m`7/Ok`m9=#f%aX9tg(VEubbQDe3J;t7jVJ>+H%YiOmUaWsP$25'oNYa4"tahcn\Y:0mD1.067F1Hpn8@<q?$(8sX`_m-Bqc[SW?`.ADQZ?uA47(L]2$agW(QgZ2`n9;fRh)s=]ln7W%"EEsUctk"<$`@\+QG3"ER!\.ZCJa=;-3Kt+J5`6SQhF/q?2g=]\'2NWOu[7F-]LX^lS!Qi+Dr&RjZ^4s:)GY/p05GkC0Lt!;Cq7%%^@Zu9VqjqJHe;!fICW35H"<o6QTMQ^de*JpXL4LL;X9Dn3orD!pLMWe2ud+-s5as/A;A"I>OnC!91^(?b#n,@]"KjDFA#F*4R7*]%Sn_s'nl)2,:"0G$bQX,8@P>>PHBuYik\99[s5;(3GG1Q9C5pr?G1M,\BC*[b%D?+KB$r\n;rW&pdE^=tb'L+6;VCHSV&]A<fRHQ?%HrW_n!sHToGBWWFb\D0dB+fl:Z`(Rd#jQ]FqfKHU<i[;ap2gpl,7$%Vb*&t*8``g]G*l60qp&hW//?d=5#_dP?.tA(8S)O2)d(#n%QaG58#Rs5?^b9(X,Oou[$2nuoRArO^@qW<$!+A.+MVT/l2"deGD[jZ8na>Y"@R>97^?1NE.:Ws-)D(;nju[j_"AY`B#*mf2k.cTj%F:5d!FrK0irJBX-f'4,n3,b;`9h2t?oIrguH`-QTE!gjrC^o21m.eHb<Y[h^0.21tYNuN0Ukl3$2<="Ef0@ee>^tk+l78$(j3)j=%or-$-6@Hgp;l=C]qBfa+ht0p1iM/-G/Y_RNn>+U9$gHSsZ'HAd9"H7E#`[:2"*_uQmeu6m1i:!oqQ-&d':[F?&X<1:jn:7V-T8rY%nN6ai^LLD-NuV/sTIchJ+t_hhIcW7->tW;<[?Kuqh'DhF>\hP"],P\)g&B@g:O=B+.(mJX?i336>?J-Y+'ZkJ#'NaVoq^3sCnD-M%Xs^>P^VhMjBV+PXng?BcYhNsm\(_eM>(oUFB%1QM'B<b1;O(qV:!su:C"b%?_p_"2mnDq@qRmn6+fR67PKJ'NF#]E<7JC>;U33d9%:Qn7hfWMkZqVB_!+"D@Jo6`EW?=f4?`1m7*QU(6d]=&AjPJoYA.o2B.;<:f[5=g*(.<h4X?SF/+`Ui'HA2otGNI.4+.$jdp'C^TQ%A;kX7,.LBYN)^)X0m4N@p/:]'.bi).,YqP%<=[4q]>Hq8fh!ZAH)u@Grff>;G*:Fog-D<*1nF7[D=lrE,4j0GKSe=_7(Qsc!kY\a%$a"0TOgs[V4bm"WX,j]DXVMOBYZ)^GTKum]-%Rkb>%c3`#\;HU>"p.Y#0FWjktgO"c:N4&Q-lKrO&tdqA4ZSaFQOj2W<;)Hc99e_%gAH/&P^?>JXd(/k27ZTV`Yo=sC3g'CaK93Qb4f_/3)`AL4V(q*YVa'0'WO:aJ1XW$mj3uZ9_W>3HfB,srD*((m4uD(d-C&N>-F*Q%@B2Ve?GM<eBm'V1^sXU<7O-1/okl9QhmU2#!'h^1!0*1S2,gM.k`l/T-?+Z4AT]urR[KNZi^,>lKiU5%FR-u!6Rnb)T8YAU'QY.R%^(2U0F[Ds)iOEo+3tVnQDmkEQLDJC-ab*p%dm'f<_mKDC[+T8Odb$u`I7K'L.lD/e<pJ+6U8$aX:']&[.p:Dr4J#f\C_(rD!U#E&%/kMQC:+Y[P?t*9f!>;VmR?AsPen^i&[=67`E9JZ<IID5TJM>j$AtqAb\Rs&6iH^$IF\s]*((6[;KA@&aP2DQhM^^8>/S7b[;_R?r%qahf5!VJ(`#lQ7XGpkYlnF<fJe0$QRZ8iFj^NQJT4$kH,c9/m)1GrT]X6"9TJu:fd#.Y)X#<n=Gc)l5iQ:PTY`QkHP;I<.9CBBZ<%c7E27k;!J,`Q$Kcc9TnE3b).LRA'hA)SpWG>cg1('pOfVe#Q5@qn'PqaiT3fZ?<]UXjqarZ)u3D)1>t!;)P4_kBM"P[KN)7:%mI$%P:q5Fh`VT.78-mi_B("gL5NpQoMJK`Eg1YqIAQ)X3gE4;f'k_J-8RiAR0"=OQ!,9dWLS:/'dIh$dR,dO/bJ.;WG91kLQrN-d4.K7%Jq/#X"$3.@4G8)Gc&V]q[]>n1<>!KEmlP"B'sV)$HA(,&'QUodWE!+Zq:ShO)?acM.1-u!+0PFAJ\JdZoUCUV>F0)+[3g-2.!jZ3%Ye=cE/&TXeU^3q\W_X3[Ll1N3k"3Bm5*C#kXD'JNb[@8t_C9*EA4"%'%\M<ua8N;l:qBHUdR#1Hgk?P2Cd%&'F=3F1m5<WnDm-iu%aB`d@YnZ/&X>6nG$BC'*0X<PZ^qO[l8uhC+![YVFbAr2a4DQ>i"-P8oTtNr*0h%N99lq9Xj3XqASo454D*e.Sh;3-cV@aFG3Cbq&%dbWu[PaBCR1osdQ]=@%iO88?\=6O5dn;bugPG[A/*R-EeiEiY\K`4$bY'j#@>+Q3gL.0,n;W;?].*E/9N31Aj#;J233+g"RKr*H4%\9ZI:,3irX"tVS?8$Mo9>DhuZ&or.a8$-rX3[2(3AK96OeOD9mUJ7OK/T8%`?rY;N%\Jar,8nce9s_q%NgSR#led$U7-V2*,ce/0%U$EQW<FYDrj"EESE>--!B/X0ebNqkqifZVhN?.')E$(IQgDRX*"t@Iacqp1ua(^#ia,u/>`##R^3EcYdFPCqSaV&+8:4qAt@=,af%CUU<@/3Bm`_FF08JpV)<4#b"5"=s8M)oaWG@sV#;Hrds*QX*?6?`YG9?;Tr-ARDQ]SuBSafiZF2'k9_oI,L%I<;M,71u+o`"p_(W%]lb=Sr`DGiPC3!02c4i;.2e%TEXCXh"Q/[83@!B2hlim!`:^0M#-:e,M#s][Fe_6;6ZfGe7d0-_qP-Omh[kNU"*+AoqS,8pp&3,s%Dt!\6;L<WR1&LY>db=ZVKD*^[_p2&=[sko2mC2b#XkNe$Gl;S;q"aX^f+7:4oma`irRYs`n+VS0E,1Y$N>@B>s6P%0NK5$6\%H)9%YP_\>EW==dPQ(O['=ti\G^j<%V]HV"4BO[mpi?92*C&4[Dr/0/hl'S*43TRih=s@E(N+%@h@BR50\H0q@Engnl.0U]]A6hBZnj\Q%Gq\r<\@(;qnojD1laO>2M]2oXj8Hj;IL5%enBK/NJ$&.A=5SsSe1GnA_u2[;>9E:jmT8.%2f:2W\#ql-*%WX5A8V8iR!n#Q_qT.4%FhdV;p;,J1@/VMOPGHRqc`\:1ZMj%eS_npDX6L:&m]ZY=pifg;qXr=WUW0($es<%k^T?iSrS17uGZSYh(Dc%lf5B.ulhokPocns)%jj*-8qt9+*ZWmIb]YFI#l`KhjGiRYMa$1ZJeEaMPpsm$fH*D^m=si*H/aP?Eq<)qmn&LEqf&H/5/bO#\2-etoq=PEns8)\Za%'rS%0j&_miVmSir`f9^h5;dH@Jd7?bqNDj+0a:%r=QScI%-KAlPko^DZne2hidI\o,>*-lcV.O?h3jW[A@*L=t>!J<[7BLHh%+3UH:]T%h7OKo^7`ZEpVG2M_Y*?S2t+Cn]Y@28J,URk^"6C$"1f<(p_cWn5'S$Zli<XFXW:aZQ8EBkBl&.W_p;+;Q>:\nh>6BuT06j6J/<^Y%>%EbL7;r2jO*pd#k.RlYqU_:IRnm#RoimpcW64<GoT<P;GM^SkpGQs;NSb98l?_=D]sH/^q!;oj8^h*Fht&_.>7lS?*h*XeYT4k<%m_49>M(`<8VmVLIM/"2*J+nR[K9,]Uh2RIS2\).GI+k[PIf!\.fRNkjcGPXTH`ObKotfpO?g:EgG:=3T?O]6tn[&"fn`T&HIsrIX%'Ig1ZZ0C/d[^)i3m6*jhrR'F\f\((3I#;ZSf5KOCH0)0&&Ce@s\@G+I^01'b4l3d-lQ*\4Da/[I];/9AS%V&un&DK!CYedS/1T*N%GO^]<;M9b(()BthhAoqWg1ZU+mkMR/rcm?Y<B^).rU0WLh8+SAG97?MGuSB(l/3Qgs/u)0^ikDOqc%F8B(7^*'dm5;IQb6UIMBHk%F*$6NF(6HZoko&sMn:L:,75Fq);>[&pDt!iD0M<Ffn,XgUq6*[@ouZN?P,-Kq:'l!qY]fiVd&HlO!B]Jfl(]/2qiaPiE8Eu#A^I"%mTWn>0\F,:kM!i0TC6CgYcoO%OZ_NGE4hQoVI&*[$,aE.gMa_"hIas]`NNKu#:KQ)O5l][rj*#&<Z^qG#OBW`1B;."o_o$-rpun?%G#U!6m9eUW-GR,%m.L#5h8b"/`^UL=&orqf[u9!"*Xq`\mF@bW*cESgmp=aH'cd/F0Nd.Zg-*+KB(o/>CGU;4DIN(\9lKVVK8u/?%>MWq6ldt(g4$iIH]NIJuoIDgB-V1;8"S8hcJ(kauna:=rY?E;4gi>&`%u'fUbn"/%h5IJ?q.$>/Yipm^I(slT2uN@EqY$gmP$0VY%r46mPqV0o,2;m$9f&$(lNoVmIbj?Zb9(Dl(>>9NjJ"0\VS?Hje7J&lio@@gXY/'&?[pig]qrQtR])e+6=*JQ<n#SI;0,lUPT:j9n%`fhb\QaZ<uo'>iuN90Ou7hsp0H@Kq:p"6;HXkqh.)+MA"Dts(a,[SRlm(E%`>\e8858n=o'@Ku_^E3Dp2\s0bh%R$HI2>?_f7^N<%hrp4\rS`rUL[4`o8+Gnkr'Gjb?Xj0NVZ+)KZ6dZlr_!+b\=ndF@;(@bCqAGT6>erlQ1d\U$E*LXMoWkt%G_uR-0Ukt7CFDP,)7U_%KZECo3sqi8PG=;C^t2^'kq;-<h7b+R"0KW_YJ'tlq>0X>q&N>rp$^n$pT#nr<T1^],8Ta\FASY"q<)\BYa3%*budks)FN4W&0aIG%3>OsfqU5O7QKY8"rr*tu.>873c9<_,OdlM*VtqOV@VD/N9,Wo6&ZB%r.fIqH'Wm='N(IjUk>0k#W%>"1GnsR$M(F@!M$ZS*1M/%?%LfDJ8cBqD9OHU',WP6dIR4?XuEPIdVI=Ep#.+BU_Q#nbE:p$OmWc/2#W]gb`'MT=%GPDRnJBOa'/<YVUr@(QKNaF'ShqaKd/-`#e%0nd$nW+gLdr_72WH!8KcVZGKEp#%k0Oop;EW0)rtrM4f2;@)cQ9Wrg5C1m4i_;Q'$<^&Oc//YG"Dk;'ZmLsWRYkVVr_4FIrppIob%9nk;;mqhA#G&Q/CnQu-8F7[YgLU`R#rSjahN`M7LP2('cMpa:UlAJbrD`Xa5M1re:A1dRNW.*@UO0ke$Ps;ae<n[!rO/3kY*mdVq%+=o'5h8`j3\TI/Qhg"_h-f8cPD(f%?e_,5]\heT\hRpD4HnG<*[<4]?4@,b%eTGYTW<OEWhu0qYI!tAckV-2PC8VUf/5X^1dN`n!%NGt`nqUK?UfAfpOO*`hb.B6d@5Q("aouYsT6;Q/qHbF\%T`7.=C"7,`=;/mO?WCSt<6*`'j"1M_0$nclb/3Z@LZHRs_9;i'Eq@7s%_31:[es3tok^VHM2hjej648^S0k<9YL8HNgGH9'!2Enk2>Ans!Q<+RMMhaX6]g2crmemfRY8U^1glg3KZl6R*qI$?:S?+6Q8sVnb%_tX?%D&b06s'7MOP26"*-u.(X><f^pa80iJhVHqT<bX[mClr5Dp=1a1#R^t!dbr)3M13i#q\bn/gPY/OF#k<ZAQ8SR:[tud!&#D%%KOnTbs0VLgF>Q0VSudhN2/[=1ZZe(ZGjn4J+O'@MlHok9dqlEFJ%GV\`^irh[Y`9.o5`mLp!!_JZG3e5Y;\Ai%$[&-\TMaP<eBZ+%422htRTJJ!h]Hb6]X?E1r^.L^G,2*ekLM<0n"[,$rHR_kMu-s7J$bh^"+U*dip+^"4)_PcXuGj(AbPPq??eTfJ)P6/ffu`"En9D=%s#_'==[2cKVqX0!4kSLVcMC?P'WaK$4+;KSW:hkSm$t`uSsI.CNp5AlljMhZn8:2=/Pe&LGm;q#ds=*/`E1F[H++3_Qu3k@mRd*5%c/7F.5%+Q*iVf#hJ,Dg(O%2F2l[HRZo:YVNd,f/+hLGK&/864UE;/(J-GXX,nqE08^E<-(P0!/d+]Ll\J(I(']D^!f'=*+;jn3Ol%a%8aGlTZm)_\XCrG@/u$&.RE4H!>dSB;.<qQ]-%33\V<bj479*?kgWm;fW[eY?P/OfumW]iqW?8d9uY!NI=%ER5fPaNkk!E'V)gY%rC(L5CP2XYDr1BO_i9&'-*2Klg21KrY&3VJ8ULlVg^>/62la&"9D<?hqflqCW86Ar>Ffp()ALE)FRlEcgfT$7EZaiI>I&X@r;@/a%Z`cIb@,nDUTPs:>=Q\jOqtWC[MPV#JBE$WV+o>32qGi%:k)J<7=g9O8!@n>gr;8"TJ,AW2k/tNXrPSNAhefo(.>b0CpNV0r;6JPq%DZ(/0P]]''[k?oN'6a5F0'N&mb!pFBHs<Ta_9^m8cN'^Z:NiB0a#5$RBl3<rL$n\B2YXl0LQ-rBNIur(c!0#%_c;/8p&/M$7I,7h%?.,=d_o6+/:uhS/rT.[1<d2%A__d==nt!O:m=&t&*j35%[J]!,oC(m.;#K\i5o3&);9RACA\g+U2hZeRfB]QPQ)!GWU\*E@[NP/"%:\R*P?;KnqT[e!=g-7U!P)!snBp^$Jd)U<Zq6[MOXW(Wn]H[7-O/T1tXKU"4B1m$B[W`khjnR0[hX0KUgg<'u8Ub?a*7.-=%&90F%)^>a4,.AMNrD355IkGS_nXmR5XXCsTlL%-$XL4f&?f%-X='7B9rdt''."\D%l$5OA,UA%/<!5Td&OQhVA24HR0B^7KmAJO8mX*h_%2EO3Q5Fm^*$(\f.mck]l<LkSY?23a9e]ZkMYfR=nEL:68`;%8PlTbD!LM#Z&V0``UrcO_hcKm4!qWci6X-Zo6Y,/>NcSq0)>CQA?%TH0mV?h0I`lbBUX>/,:U>562[*8C8Gc[7"T_u-`brq=rflHS3e&"4-d2K9pop.bDSRno?AYIljd3988pP@[UH?@>#N't$6\m.nX2%M!ikFT7(bR$)maDor".*ffcE^l^O.Ek<?GkqW,l2qso/Br-&&557c?0K06l>2\)uT^%V9tKsR,\rPJTGo\dQrNt)cFf=-LhhJ$;r%7M^34$28rKp)X:GH"M2El*71C=)\$gHu.o]K/iW7okj$\V<\YXEkV4AL-MhXa[]Ynn!sMGYQe%jZ]!QS*Xq>e='hu(Y?tYMnt4a1%6rn2CRr^B'Z#T1(V[']7Kh!6bGk7un_Pa=.d\c.I]$'okDg9Fj>Mk;5EIDJImaBW+8Aj3OFirl:In!+b?g@8!QYlQ^]@G4Kh*"m:%k)k'MHK\GfI.qI=fiGd?N`jGmSJNpYrTb7uri8_;kDtsLFAdnXKehF:^>&I)ja"PQ\aoCa=(gii5PD7]/o>KU9R#\4HBI#R..?_N%bEmZ^q<".sQW-t+5MX#`HJLbL^Nt1ihT(%3Il]6Qs1tQ(e`tS4Y,/J:ETPd*k1O8BBCkP(Z8Rd4JX9,4^:Eq,Z>e")#O'<a2g6@G%?8Vs`AC%`WY($$="Y1qdO1;&J3B@'L3JLn-d;AjFk<Do*1-`jppXn$HZ\P;oD%XKe4b%6_WP8;t]/-K<GJCi+H?M4QF89P1`DqET%QS:R\9b!8XV@")KGY@l3RH5ajn)i.N(FPj"HjV3k])cR7D_gRg5CUVt]Nts.YPi_Er;P0c?mPI0@[[0&^MjG=i*Lg'hP]/DF3T.,%r5$T]fM?EMK?=&9da$&)59F*)o1gdW^0>u+$%Hp.s2l_ip<'M=h7rL7NO(Pb(SR2IDaop$m]8U<h7rdm<>!5!TdQb=hl]YeIsGTn%[Jrf7G#gj-lp;=B.%D#Nip%kCNF-SQonP+%QYug_rmJ%ZibQ%"jb8bn#5g1o)iO+>B?sZ*IrhBF2jq&L_f'2WMp8*q:NrG3[HQ&Z%0<T/?>lG^W8los!rmag+<5.iN5PZgFq9'ko^UnUfc&_;&5`'h<\$fW1MqGVL-#^;]<r_sgCjj&&nGVH!pLM7WI<Oetm-X4%7B&A8%euq<o\U!^uGn84!o_A::+1FGJ[e7VMOaujV2UXe'rpFFPkuXXirK3S/cJ>`YKg9q_6oOStkC8?2II"KtOi]feh#$a,eT5YP2m.in%f>Q)L97(35F3<)0+rk]FIIl0bJ)7lMEpMBh#:m:0T3k#(oTmLVQ8[@'W#Ar+3-X\`roDgP6lS@n]\]'Q_)=/on'!T7h1_[I5(=ah%Edc,kg%"Gg#NjU@2m+,\&+*Rh6!8\Vq7GOV^01EpGII_oo0Y51QSBq;[;g'%rc-5+*R:,*^P["*q>AD,F1Z)5_)DU+XZkF.>WVMA%=2/*e+hP#ZH+s4R(\\LPqVp_Qps6C^-j3sq.=D!V::3<7F(qW/fKT@P5SUe6CHl1^s6Sp0=2)6DpofsB/&-Qrh(\-lIfpA2cZb(k%r,sMpIes#RdpA#LWu+nsDlu8aG^ON(lDGR3%L;#,%uPCpDA_.Dd<tWHb9G9EE9"qkjhYleT0?BRC#qcGpZ`%Y)AlQ==bDr>51R+&%3qm+B/45NB07U\+fBUf?X1O_5h1)bPfJT&E?aefq=^PK^^%2!"9C)D2^V4^dQfki\&+3"a\M#?0r[MI-g/>I@q&$i-)e</XZ+Id3%#CkOA[(>g?M.+LJ7-"(7il^Q[d^LDb++/8!op8`42?i3`*FB))]Dq$0ZRKi\\RE,7%j,/:T<2E455+@6b)6k@CqkI=VQFlC]-!C-%mG.L^rTCB1?B7fmXRW\oYM?[;iUJe1pQO@#3bQ!*,("fd,qJ\]^HTEGo(;+)HZIj>F7[DH-bFki7h3T&4Y&a5:@f-J,n0_2lC#$R%_p,ARp%_cnoJ_8*j"#9@W;GQO!U/c?qXO![96*p[]Wc_5Seo$7LO0h<DL_<6N5%V*n(RF'YNJOm$*._-jNC']4\QV0><V`(MsZem%4-..LlY*0q]!;*I"lA2C2r75OIp`'7Qd<frpAk<io_SERO+/h?ht.GZ^Ms(neL).S?9[p3_gNS2h`2mh&)ZQ2jVKRO5=O)6*.$`*%#.s->d`u4sQ[nN!Ic^+#7q]ihl6uhFI!b8>\'se1A4HSAqX:noTADQ>H?3jUMo7mWl''63m4Zc'nWPmB5.SE,oYNDW#_$f$\'_==%cXGk+5[V-DaOC)I?iBQiMf4n&/E\BiFZpHHqpNHkV4FHBe`k9A?2XMp0<]j#pr@/qqpkk]o(^16-hdQ<c)[3-c%KHZI4".GeJ7o<%6`TACeT3\;lqZM1PE4#>LFM&.occQ/puiN<rM,;&0"p%h[e<:@n^F)BlV1o3?F.hY55OqN3A4`e^Ac`Aq;gNn`I%Mrq/\&E_:HZ$%mf3(S#!AerXoH09)3RnRipE;7Mr-=+AUe]R-$p,u^)]pt]t_83i:T+^EC0)e)bok/kGQEf$G)`)\aso5V]AP05(&.GkY#:lO6"CL%U790%P/q6f$t!kdhV:>_m'#k@htua<E7[!bI9P(fbEh(0C]!cK3b^-?o;'E,#M.aLI/@OIi778X7P>^fIq3t7DnN]cH)DTPVI&!4%h,rF$U:>O[lCG?]K78_b<mm",=LWLO)37=B6C,d>ri9A%kN&^k-3hc;Zp1)+NGMl#KpMcR*l-+^KLt$]7?a$A_T]]5_T]9ahmX;R%qaXO'B$YcW,Vk>M3]TVPW0\PT-N;_]K[)q`^H[l+HCEOjaD!d011B_[l_J_eh*UA]'3FJg[+S*KF&'2Fm=%P@lYiS9b0cjN(2KD/%CPNG=liYB<em<16M0L`[[QM:mqi<IDmD"+Xqc(:M:<"QVm;2is^4EK@Rm.QhBL=AQpO>U2g<k\'3@$ZGa9qB'b1qf8S2,<`k`_UP%3nRU<meIFbH7!BRpVk_La]##.m6#k^GreRNR0gmroIXV>*M#B0:Cc:[c2L2YWZBAgbO8[5C#eHSLTd:dls0C1kNT%lN=SYVS+5S<%K?Zt\BAM)@KmC:_fkoI:#tY2g])-;ZkLml;p8MD-pK/HEUGK<I`\;D`cL1,g[:s\_>irDK[TsS"2esLHhPcH_Y4%qSno3uefooO!%D6c/IA=P@DTVpttGrqS-2gtIkGLX05C-4/&-&h<GimW+0.snJH:M][Xj7;Rlk<AluocoCfr^eK?Q/682R4K`Bm)ZPDHd,\E8hlr$%4_(qlN1q(Dg#pgbs858K4"B"_^*bEqhH+lB&plaJ$cbJTF)S?A<-`cHN-2!4*MC^!S419<5uDs.NE!G@H04J,B9SlL'KnE\ULiT+%k9@fNmd0loSM_pE&$r4"c0*:He/+=Z1tUm&*G*+4T!c>I[^jfSFlL'Co=o9pI<Ta=esalehqjtq]/&R-E6?s_^/+H:F)C[4F_LC/%]K;t;`\pF-c/Z*s[?%%fo*CYgPSm8X_47Jki!6FqL@au-1bVT=p'mS[0Z0;'>#1Nl^,I]NT2VCg]pbFkcY7`p7sDg!d"`h>lKM.1%iY7j%8[@C'jFbi-SMYO95u+-$9OHfoPG_mVjLKX/1\RGZ+&&8Cc=_)WB6Wh?cLsBgL2$O'T(^Vl.g:-@?TrS15rNd#pI0plg,XB"%p;W#uK:rkSHR>jj;t*PL-Sf7[rk15W3jXQ2l-2""IXe['E_Wq7H-,TDZuLV\f55fB@:Np+mI73F3SFG=4#oal[ER>dWg1oU1RFL_%B'A]iju&Pc:$\E??dj:(2IQMX&Rof'M>Z;>6e:UN-LU6'cf$@DYWld@3T8Y\pM2?9@D>h%q_&<Hm@:>pi/q6ff0$uZgHShWE7XV>%gZroO8`qqF_>[]7QW)ME[s-tH3-3YB-GfQ089$]*J+(Cb`EUr\PH?9>F;+O86Yf?%[ulP,C\;6KCo4aSMKg3pGd+pTDN;h%R^dG.%Ear;DIUjQSp$&f2D)P.[K6L]$cc5,'NP4Kol[ut?R/QsEcoq/CO5%!SOULX;W+.N>OY#-RH`6UbY)DK`N`O>80k0e#dtRC`Mitr$%[MN%nnR-f;kZ0HD00<,mr9&"er-3!GCk'.]'=k"nM0U:hrGdQ2nC[[\^=l(sdmNkp%tClm(74*sTDpD`[BqGKI?1hk_)O?9Nlg"l%rmiebD<c#Fp:'e!#.BRWqSUWp$`:%ch"RB;j0nmTV[WNJd@/$m(OpjL(8'QRpD.L!MejTF[EsB4ZbY\_Du/AY(XH`tij#fICTf?t%Q46#[gO=.@#n=mOlLk/"[G?hcQZ'$D5MOuGRsGX+h<<G`>N'MHNne*Rp#XB?4+#^$HRO,Xq=:m.Yo`_/;t$gp5MEl"\^e&Nq$He'%LWM4A)>:9g5;Muap+%iX+5X*8\^]hke=l3LoPlnIqVG@>9bl$+]T.FZ)XRIt<G184qGA?AE;o;h_gKN]ghEB8hL>>F:U#?;/,]<X%/1J8^pq*/e)TNXgX%"0k=*N9if!b9bs7R9oPFl`p4Rr-eClUspo`dNN=OSNCmh=>O[_cc7fM]tj#)o4I4hB8bO_A,uVAA4FfA=JC%_3BZaO;DC`P@-eMClJWdFd$9fIgOGXH'1P3R$j0Q_IAL5P,esG<9hE4<+X/1b)2lTW@=(NonD\mb*3kMr?T<r(Q/S5Dg88Zd[;(c%aA&2LGr2nB:lN&fYgCd*Q5c/gE2fh#,TiD3Pn,VR,A#l8_3I%(';G4<bd%:)0.%J_/f/o$OXmG-MokfeWhJ^Zlt)I5(QuFf[2,+_%J1L2"9Fd\0ALPV71"aH8$UO3I@_m,d(TFVUN;Q\.>SqI=jQ#7S"Y\c'NQ#"j<+l-'QWG[]0OuT-8[Zsf&@O/kCdXbX+Q@]mbiRqf%P7TK%M-,OH(GQU;2C(aVWR:O\)4S27?3,&1ge+,-DR'^P-pVJp),QZbV/VN/p_YQ7r#gJLr3!OLj;iriE[_Y<9^EBd85j%Cp*GGA%pCK3u:(mSDo-Cp4AOM!`.A<V1bd%nQ'!Tq9.1PfB_39W5,hPH3Lb<1iSXm9*.L;_93>se56:aHC3Cd4q;O*)*hf<Hs0$-,W6aB(A%1up%@>7su(e0$S$T8jZ%'?\89RgL/]g%HWY+G3PJ2p$Mh#iBYWA/nHlPIEU!AtB)b<[iCDT+IuL6hFC"7,B321'h_$?*NE8$i#1%%Ir%@0r;C`Wi[bA+,h^O8]gc=YCr2(,6O"_[cV53Bb9gZ'r#Nm>E__gO$SQhZ6+L(5mUeI,\Rl8m2Hc^Sbd53t:>e[l91+dc%$JG9%K<VnWa\K.*eJZVqqh?;aphh7s@*J]W.cA9T=\SV,J0dURi[@/rD:toHYjWI!LO%?Sl.k>?k@JU$DDLXc3U>EX:VH6]b[5U5]a\(:%U&%+T/=bH1*\$&!"p[^Vbae/Q08*p,/#\RsM-0NubdJk$EL+:q>keHUFr1n$+SO!Q&Db9f3JA[3-JKqmSB,LtVm*L0EoOAl)H:Z6%q<0@g?CX3P1%?a:KO[tTC'UsW=iKnl%3)ZGcC9c/T=g)p2r8k%ek;Wa7>%#CU*2Ra6)Iep"rC/Y-_q$b/QoM'$OPM,29nP3Q85[[%js(MC:=qgp"iXRTEl+2KS\8;KSTD(Q)%ljRE4G#j$^V*f(\%O_>B=ZJ^ktfW+p/1n;AN%Lj^erX3/WKm(mp%oL.eg10'fA@mF>?u%l.p1PP^a(Wj']s=K8`trr`sG<^ZKUF&*O_u<15r"R"D.Enu?(G'F5gcd'<N1a[!B&=DZsZU+;%5]'*ms<0OT@(pq\@AfOp:#fd55%$e7V!KW,ZJ!cMXV`,8cfb%`2)Q^CG#-nhXa6oGBFNl"J#@gWD`?5@%Eh1iNJbDB8qFY)J=&2QKcZ/mMp:B[%=&;X/TEAonMYp@^B%E][Js#Y>f_.:&_p,V<5<A[b87YE=#D9h<i!\qtF0NeN(TOd)hH#dqSVY*VOtn=lI^9\qJEh?t&)rTKMi;XfDYH;3Q#KeA66+,E@/%fgRAW,"[]XY8+Jo.RqD#3Cl`P;SL]c.PB$1P/ro5,Pb`D'UM(F)8+XdU7C"+mZg5RapZ=I/:d8<UhErK2(M_*MDu*q]rL:!\uoKF%(Qt];Z6I`fU?oTBNO$Oo:Z9,p<tM44['pFRJrE;',m_>EC+>rb%[>;FDmJr\1.gj:H6,9"$C;-s5[;K\_="DgTGD:6geK]$'!Oo-%jFIS?fdGIW8f;$u!6>@U\Xhpo,1ts'1/C(knaOIBinT.qMHCE9.Y*`%%-\$mk(IHjClTM\hpXBeP>j*dCe(WC6YBc#)1%2$W;Zp&%+ZXiC<G-!NLEaRVa*a"\PW+cmJJ'-H;Abhg9?B:O?B,)q<nO\(R&Nn'a+JE.K]?QdKuFFrb-oDgM)ln#B[V=h3Q!1hTkG8(]nGqH%XCFfN'lPM"Kf^X&?(i]U9i9bj`Z(M@-)E_Rq$a&8X;`5iFq&9"MG?s5<;U^4$>YH0&sXE;gTX'uGu4S^,V%HV0U&/^_Q"7YLaouk%%*?U*@n;?->$Sn#O@)5]0I;s?#fFG?=UbHj),-hCLgqgdNH!1S(b8t?iGRT*'l'oL?RSt)b)9#$.X7XhOll3cGuGTD<t[-p#Zb:_%%N'pE$m[MM3Qp1[%"a^350<&r&-0QL-</*"I-^X.GJKOE>lr#8\WN4p.URt]^rCKAMI!FiMB-LaE+gVVNA\#=8U*_t>h^AS60XhK%+Uqt^g^Rn$3,oS>j?<-8#ID8R"&.WrY],g1<@Xn5Za,YE4lLVAM>iU@HRXQ?fn<FJTQn#<BKd+l@QB=Y&>gPbg74$J@BO!<@Nc,1%,VVcU+d_7'KIiiFK9W\FogpuEH);`$Knr[`6M+IehW5*'<4P6C]F%^'+C70I:,01G2#3l8Cdg'_S?\=I:4Mh0:hft'ai!SrBYPPt%%Q%.S+DNDa0hD-B3Gi21#Ra6KGmdE$m(TQiKcr+m*+A\HfpGA4$)no_]#U0h]bNS%%`0=]S$R&m'O4d%PBTii/-WU)CGGfC:Fl[-%".gW$PfR5pe>OonhF)0uXK$5)CW:sU+A^Z%OgmDLe-S8B,8;NFQ>E`['3I)a7Zj15.*(#WPOK2I4B;]^4A.(u,S2dS)%pQ?89rlt%;kZI5$EVg=0Q^/-N-G1,=[USj0c2'V?.;lr:ern>#6P^@0:jln!%k#3&mNa>(@_YY062bC5-tdo?g-)Rb<u%uV2AZr2BCrak_/ND%@bNjk8g:C2;a;'Y^<rkA6=E%o,(Y_e$I43m.'V[,b">TQlmt".K6%8=!qp?%.ptn-=X8&!_S@i.muU?+ckW%&1CikMO[1[<Yn2/M%6!nYHXIq&ApL;qd.G90H&!Y#Ln3qtp-cjmEL]s_Q(04*AFs81PFf6)FBA%-1k`le4JCDVc(.D0G7_Ds1qF_tf#Ii$P`>L;Bn@qRW%cm'GPqZb.XiH:mT,Y*`B"TITK-40JF:rl!mPS_kEBqic7PMadGnM"JnXVMGai1Pe4.B<uePCh5@-nH-kW#Q3%ocbAb((NqbU;DB<%<h_Vdi@rGAdgk=OdE:Pn"k]Ro*Z]&*=V9W;fr>P:oEQ7e;bGmu_>E8E)@R*Z,[M]ldDZ;Z;=""g6GJ48Aqd]<.O!P_Q+]6r#>gM8%s-(hsMQ*&*7A\8kjJ5i?79Cep6Z/5knEiP:M*l5J=?X\>?:usPS7i0RS7CTi84%X1,flPcO_iPV'&H&8-CeD05uF+AfFTS?;55]:%=bbj4&oDJp9N&\O4/uL7<0O8M4"q"4Ip"YV)j8>X=aoijiJe-NXgb%S,W/4!&ohsi/"C3\@"QAFIH$os6b^c(>c63:S:AjF*kM<a%?Fk8rA*qOWX64CZ)k?d3@kXs]qRqljNNK)tHQ1<!*\:+9&#S"^Vn[]Ji8sOlcMj<HNC1?hUl<*_ic(]jN.$V:Z;&tf+]j`<"4o,j%C'GZk_Vbn5%6DIQ:]s#b]m?(8M)m"XQpT@Ve8/r7W_@s9,?C'cn4Pg4!]>tr;"01-,@&=:qI!Rj!gX&X7c]VaaFYu(WHRng<7&C4%YImF]B+o489hsk#7HB!HCp^39$?<Sp),'N$D#A_9h]7qfN/'[UJT^VM`#Kc)$R:GT6BdK5DQ%1,cp@a>KB&B"7i]^'=iQTE=+[5V%ct3C!/jab+@hGK>)JBSaBrF#.X-p:o5pr/aGZMepM<$pS&/Ju1&-Aq783ccs@PE?`rZ`r7SY1Ts#F?6m+q!pP]\87SQ`,PK7'C&8%[DJnM\,?lf@rjJ#/NOlA!D`AO+ClZQ%qWU^V`%=+claH8Wm<_:j>""TiN,Vqe-PQTM>.`);(5Do$=6,GLsSnU^5PgBW[YrdSKb*\%m(=c(R3r1GXqchJl;D,oH5)#\Oubn7mmkfi(XDf;&+JeS[,a+j)EFMFT_'Yd"H=BUH\B4Eah-:^"rKOGV:.@mO)BP;FR"7XStl[2%D=VYUMX5uae5=(CbE%pbN=!g@HE!8J,$*pV*?;a&;$q+j<\A]C$t1K=?qXc"MSZ+*bF1bi0'l\UZEer&'hns"<'"b^bS7dKaLq_K%$sY"`rfZr.)2%5M/]frtO,6UXF_R#"@Lg+d06@Q=`cj3SpOaHpPZH/_>]0#nWj/R,)+`1))tF7hn2Pu%=[uOnYStHL10bo?@NBks%UNt2fTPb%q8?OCG*X<JGE*&/,O6`$5%kd6noSq3D-X*%mp6cs9)]@nI0_u3'[0ULBY,kqiC?sR"709:o<9lrAKJc@"SGpAJG%q]U%PoCbe%[&5E0LBO!oKMh&,g'[#LDks/?PMer!kHb2#YV)<HcCr^k$j55+\s[F,l;Lp<IQ609TOo:HB%5UKb'$sMeK&e=U#NTVg^Ls%1YIhh3\S.&3N9VA,O15#M?4Jl5>&.Ui8P;:4#B9Wo,O*S\>_<!6j45-Vn#-qDd&PG(lgs0dXoflV/t^o_RUVn_gtg\BnKp6-6>U7%erb;a%5,XfKUkhN"[LcWiK#ar@"(us=,LcJ\m1[O+[^lfVk%!bD,O?oB3nQo+7dKK"!`#o6%pb5S@XgllB=8phTiDmZ04'\'F#@H%3*#D_@VM9tfX,T-V_F^o)9Q0$"is,k4Rcq9*lcQ6$7,mb]r@!,Yp)@[g#/.Z09$6A\h^_&!uSW.Hbb>O@/.l;$UIs=Qbopu'?V&L%a2q^,H'PX9,(1<dJCh'AqLjPEBRU/aXp%9Z<n]k)0K)62HLQ?u5cL?0_/V-?Lika*FMnA3/rgRX708Gg?7KL+I-&D>i9qGYE!*VP%Mc\"'@V'r'_*WbeE+a`QCn,N*)Zh93,0r#r2&F0O@s;Q>s3p:1rWJ;Q5B=sfZD(?abfXBN4S`2B(s!GFCh$"iCG#ICXB;P7`!WB(%Y/(2Em0S.">',Os'MPYTRK>I+kQZhDWW,/_O"Ehm:E45STViPV6pB.74WQm*Vel%50$UqHXonj7i1LTf.%acVQ\@osEP<TN7u!Lg%Y:e2FGC7Y'Fi6Ar2WXf&eX>qrn-0ZlVrY=;Jg<(/jieHF*SFGM#7(ini>D>&D@#c_Y[pPoSIjlo3ps9!3^(_6G=$\h$9Nm+.4iFm%QlUk-6cg%E`E$`LKHJ$]g=/o367s<X59WoAVk/4%[MH[6K\_4*Ln5jS(#B]E0_ABP&L$cL++,2t[D4JQrCt=[&33+YT"9`u4OFqh%&JctZ-qZ%M+6]'.N\Q\s7tk2uFX8$8nDgIB7TG*r,hsUQIKPU4l9kWH'Y5DVGComMfGC+bj'/o:=!3<W;t2A*"[6`p[c)?p#,PkV%d"4('6`)"d`\HGI'IbY$bLsl!>/F_/i/2eAQL!'LQTpLcOOHG`q]T@W8Tc4\_?iWu,`RIC\9YZti?0Uh>MPoV='0KBLK!P35YAG<%+G"mtN\NjUBNXS*iTs,..B<P^.V<X-,+^*Q$h"hf"WM&]F,Oc9n!P87XF+s'o:`QWcl0P&/E<`O@;nP9cf:]aGnHDoFBH]UL&9XY%c61E]HdqEhkT&ne-#XRIY)K^1Tb8+NP<s@"U)f,P:+\WJL>_9<rgg=!M->;YpVip>hWa8oKTJecMZr#C7i<Tc5@LOF\7J^Dbm@6\%;A<Oo6=,Z$!Q5V>P3l^$1acrG@1e]D<X2JE.YCfS>q*[GB3_l74p5a`ViI`)C*Wh2U2Rt;CetgJfh;!c_%l3S.>1)cXe$!1VdDJu%oa"O?cD^o//jPQ33+$tSi)fQTM2oWZ%u%OPCpXDOCE2rm(i9K,D0.56-qa_?PSgX7U)miJGIb()b#!`eJfGu;1Nqm_jS]BUQm<;M%H*8$lNO%@d`>4;&-%?[:$::9Kp^\Jd$U"h8<C?(T!e?(T`52nCSuPQ5"(WR.nn8'TMoT^?Mu^ta!5rQ&-/l)Q!uqqoP0g?d65&ig%pdQ7L)`5/TC4mQ2_!HUM:lHZNE/3?D"+YA="LDR>_VloXWmN[<U(/Z^GQo:?)WK0;1FR(53hhIC$a#$E0Nb!5ccATKi!c"`mF">5%"9JbLZ(/"tHFh/V+.`e1<8g`j+?[-_*%h(=%A/0,'Q&0cB*8hkc#Q:3jigc8JA;Jt]K@2Y%M:-eB.tuM`gXPrT#4WUa?a9U_&qe2%Jq-!8B&P*l__Xm!\@c*JQ9;h9TYkT/:E-4W"e]m)-'#5-iAm^P%"PeGm>(ukVh-K(5#$81?S7-IDtsgo"HhY>A)LQnS;t[;l"POW%0HL@<&RB'4U`hD%)rag\"^QBq,Ms>W+U7]n"?NoS#R7$'"WY"YXUs$@&Be,2f0MV90a!N%4!YlE95FVG"+gk!k(!\u+mb5cS/QRu%,$a;B[/k]u`-b\n;3r]m@C/C;YRYSfiP8;q!CX0""Eg_=T0.aM"pU%nPl1d22I('UU9&obP8BG'd[Wmo8;#!nL"mjWUVTe>e6j+0%@GG(UP'rWbps7Bj7q7]I<X=?)e-"0o2BqK$E'"BU(Vq8KmYt):XK\'#+P0%MgS)m/`Sh@O_+4_H$X.E?:gs6W]U3MM,\n<1-%$s0%LB@<;(`/kZTA"F^)q(Y4B8NdUBXh[Y'?USI3+Cm\V-t5Jc&c3I>p'_/&@%V4];9L,*Qg@cYZ@KLo/FQPaRj9M)F,i6:^`(8@]TVp%Lj@@NBKF=OK3-Xgb.oMWnt\T4)r30a*=I<piVb4<<mI-&-'0O,3X#ODW2KmV,R_s\SC;E@.5VUl1+:r.B17XaCF)\dKUW$[?K_M#%V0`2*@CR$8@3j6NfMeHd=*S(\m*"DDW3D&i+?K^'HdVRVCOg2la2_D<G6>.lKE,]T\VTK'B*++2U^dc:GXc\P&#A8M\@F;a.I)st%3#I=.6Q[^CDl/SlZoEcR?jJDSN=`>SP-E0L<41?BcE:W;;Gf3@^=OE!H-;*Z>pF;d$_%]]$GJ0^+rG?pc/Yop]1IS41r..^?JZs%%h:"%X699'9`SU9,`)&b;HE1\p.\6W@K*VSg%f688J5LVYgsOMXgt;@7Q9r$i7DN%>6KrG+K,Kl-Z^1G6[QMt2FsG#I#ci(WM*Z(A%+VFi(#Jj16Ylb`VIu:lQ$pfAT^`QF+$6CTp-&dcp,n$ZXjUb<X$:?4?(gk#p7gmXsF_uOo;JZuD@j?Yeoa&"U#-=eOBt7^gr_2)O%QmlKI"7aOQ*pFV']6%F`Sg7a616XIs/-_#/0A)JB_Tg]8%GX2;0af7V!V<Schq%=5K.#(aQ6@5i#0c"].s.Ogi0()bHGC,;!3h.X%(j(L5EI,%_"H,Fcb;3$ACDrV]R!ju%9m<3.,<#d"%r"Esc67H!63H,BfT:.hq*%j0q\0%V62jR'IPgMq]!AkW5X?!$!J?u;BK<E9%%`#m![]gdNk^gHKIa*,JL&_eLBDajdk))br@Uhq=BQJ4D9[O$12T_&C!c,X;Kkm.0>W3.!RKP4>R-(oP5fBLT4Vb00b6mI8W]>(?%_V3%,9aiFr0S8@i"CHh*K4)jb<;Q;oM9Upc7$JG%MK6`q>Ge&)B#`=)#579p$V3CZ3`8,R:K'KJK37VuJAm0."Sb=AiUCks!Z^Y8%8B&I(,aR'29/;JgG[VkXW5/P<?eUBaW2I_TaRBnNYY0^XAWu?r\bj2M802NX,Ba6!:HI@_(2>@;'f?NCW?PdI_TC%.JW!t/H5InI%1H)NN<Hn]_Sj&`\kF,@gOD'FAM8EaF\o4]c'$(/pA42[3BGj)Fr7gsFR;p6d&>);Mgs[I_TRj'$?j.GSn[K5-AT4]nc9>ct/fC2a%_Z:W4&\/T$@c8+0C1;pAOG]Mtg_>Y5ncB#JkpA(Y-U9JQ&>odY6d1"<aHhE)TW\Qngh"LDe/&9Gh"\h7^O_/;L'%.9JoXDK+r!Fo%l2u_FW[XP(Q10Iu`"ZB38`%W'#t3=)&:6EUHDq!_b\9V\)SVXDg<XJLhB>"7+\/%;SSKkK8iX!KC&gRDP(4]W8=712JQK[s000(S%MN`h5[7l@jO*X%U:f1_UI,.+*XH&,,&iE)>!.)\NE,u\2"0WGY&f?K_MhlWc]G.=7`4J;n$R<Td$/'Vj#;b?A(o#0j+lR6o6gEj5%KH[f46V,I'(ViHn,_gBfTa53K6R(Q"oB8KH=_@<3H9t18^dUlpN.C%8SS(MKR"n3On)qfVEBi*K&,@]88e[g)I2>8BH&eK;=JM3P%(L&)F"e4)H81CrB79V$-MOk:XrE]<'=u7deF@"[5g]uTb4?J".L1@KB0<9l##FJ#(]#+aURr"M&JY3RS!aR=c?uS#@mk)aI`d\h^%!f\&DT[HA3#$gA2%4!UM-mU2nJam>!Dib&E2umtuaqW]oQ%0<B)^DS"FR6o))0DZ&mm=kt*2%Tr'NLq`fS5<BKEL.K3M_KD4id=1%cCb>*?`#\g2#mV%#*MJ#FCIDF0QiR'H%JX1E!3\_Q5*80\Qs60n]$_RjP2bOX$$+^^4d%m"P?L1:%?Ba@"K]q-m&_K&Xl;tjcP`U%.gQ]8%MpI()g3P6nN);*4utPWO)s>i5G%R$-NQmWIt"hf(=.K=q"%:Z^8[[(K[k6)ar?Y9pkLUpF;nno<^!8pOO5WiH>f;M[)-1#%+d(H"T6aZM%r&Qn9t^m!Y<.^P8#*NqB<"X22*;"<Q4XO4?=5g0;Rup)*b],8A2UA7jD"[+`_]N-$-\D86!bHA!cJ>HWeC^@gWEnA%lnr<X=IJXAM+,o.l8,TeR`!;g'aI?$4C'A;AZ0iu]JNfck6I@ZWt0omVT09P,>pX3PUZGp(^XU$(s4_DUaMPNEZl%q2$F3094@si%BZ@N8B)s_0?uuj!Rj!Oq4R]corbsKmE#B%23eiM!FRULD#9\J$/56\Dd[o`tg'/S!!4lR:<YZYEBHcsUi0%UipsoQ-\P2T?.QPlI%!pHWmM/jASVue?#TjkQ8_KWt*0C@2VD%g$c!qlpsMt(X468UL/hO6(JADMM[F?e2@KoMDj;C8sJlqk3Q3R;jl@u/aP,Ih$h*I.KL%:,>1)/0m[]fMY)+-QH7'/))[P!,6/>YH/Rk?0K74-H=jj:-^BJZC2M.MYcpddBiC9<$$R'`DA7c%5EPG>M.;Q#fjc=BNn1A)taS"%[c)chV<u"$EZL$g)'T>/!5YB4Agl;G42;Nm=P4iHa]5iFkY4uV$1&&H/P=KK/p:'q7hd'X\R1iG<C)C&+o37%X&EHF8]o0`!2=Ed%U+DIU\R!9ZEQhR@YF86ue4j#$EC%=0S5iW*,8-I]a`s*uBc+ad$ur>n2kCTebQ3?8H79QfUg,0%>Y<156_m34">9mAS3e7m'+fb'%B%aen5\IU90basH'(EBO_dJludFfYJG\42'dn?80GGNN05Z+WHCno,sf<-^-YJ8c%[kk1bH2M[^Jp@.h:\X*1E_L&32qcPf&4O?m%RLi_d0`_I#Aqp;K<YU'Mg-R6[T\`%]fhcXT(:SF"O;Td=@Nd*K)apB`PJPWT`?G<;$mr%]/]0[['FIE"1-$I5l;6dK=juk4U"4i)%!J/3`"f,#Z3RHQ"0`3*g#B2^7j5h9^,D=l.N?[=d9mn+(;`R04!5cS=kSOg!q*\EV"Yl[KBI4)u)SBL@rqug.G+oKL\X#W71!,c]%7O+"'7kOhS$RZ_]clmAA<]5K?:us[L!NDpcUK.d63D=p5'MV5-J7Z[?kkVT'L+&e3%EKJd8ugdF;BO9PFNou!hbIIaW++_2JfXgX%Jb_m&5anWb@,WQjhq:qYiI$L,h3jK4!u.(=JT\ao2EZp%5$_L!5YIpg8c3/J+E+,qQmjA$1!e'[cEr%!'2'&MF8@jFJgqa^YW%)B%7eU;l4[\ZJe8PjC&`F%#4i;ZFd005U!U(3Rr'Z_QPs[q]f$#!W%Mb]a4J]H&-'Y"ZU>eEI.QB-&KPV;h[47OWcBkV$8)X>#FB0`i%Hr+Wm-*f3*E+I][K7$_\FsN\`OT@IXFH"<\dkm.PY]n/7d#TPZ<&c7Y&Iq*GNk%Q>nI!?hZc]M6JUE)ijLLA049Ut,h;rmT*QDA]%Q%4EBe2D:&WB-J^dGiq:V3p&lWF^pfU7.Os<;*t-WXa:80k7.I3kE9J%-.MR?0C>tW+3mTB1ZWQL3,r4;e4I2(f9@6MLo</JsQ*i%`89G*(FtQl;Zk?>a0S5pG5t2l2;"4<K`%a'`2Q5PM[PGHGc%NurR`<noZ:Jh>=M)TVZOB?bkR`rGR[bZ_#9&m9r;Je=hG*TdQ5K:%lW(dS8]T6L74n]'CG"p](\iA+XW-=-8SYM%Gu',3@ic7&g44CUjg%?8PFt>eVi2j@r_uB82b?&4RG;T:Eam5srZ)j,MP/KJ115[D%BgRre,)geG<F\XmR4a2.8"odE]nW=G1d^(V2jaCT4EcfY\nfdU$sT`_*a/%pA5k(16Jfb1dniCOD?Wsp)Kfn<S6AZqjZ0eQ67Rhd%ajT^4+TkOe,7gA*@5oKHdkV4rXF8X!MD/gO>M=UP'B0kKa0pq+eWq*.#au?bSI.^+(odr8.8GjT7$CNVSTS#:X[c*GcHe:3rs56!%H5B-m%c2P#<(abX'XbK=!hu:j9ri"ERAmn4/nH@B'29RjE89DEKF8_N#FHqWdE%1(_%?r<Ej!8nl&,5B6Tg8a[1a7*3Lo6i%#=9`%k@kDS_;oQ(iI4Kj0ut;I+=!P@9^4!boAH1?%JU1<+hjYGG(>Nt^G+e,M&<.J`rHF7dC2P:8QRKZ9`]']d9ZH/El"m#9YQ-9#]34_%d#j\WIIKel<\YO^klV>AZ06i.JO;[HF,4-K4_C6K#gEd;.\U94\kF(1-=gqC.(sV;-mu(hAk!cP&T8+,RY!e[/eC.LN;Z*c,9@:]%,!*?8k$guUU^I2n.d<Z^?,'TOWSPc#Dkr/s"D(`W\P6gA42MSP*Y0@Jb)ETGW:3/_>a<YW)@ZQ`8E4eD9u/:F+,mP5#?[X<e7b"H%[lS2QW2AULjS&,_)!,QlUrGSpZB(=Vj;POZ=_L)^lh"FJ745QS@D'<WY&QmDTrHF1oG"RWTh@JXoXQZh3;!EHC?Urdq_+qWA.,+3%0k;6BaaJ_fJ`MV92S(9IGaUmr109].*l4"ij`@7)'+_H.jd!r)Q3D;H=liiR67fB``\I#X!KOn)_YM]A^A3?-^ZjrDQ%:c7o_g!T%!pTD=.o6SW"G[=%(p'mI_.$P5#YJ(GOc"tm6Pb60oN=H.2R&K%<)ke`3Ask)0lUSMUWd+coJ-N_?X-*K+X[^15YK3KWcSBnN>[nt%]Q&QS*?.Z`kSt?N(5\p=LSi.sZm!X7<hO4NC3m)aS[TrB/gR)>6]fi)Q%S1Yi(V3tO3*.Q%[,C;m[Ud4)HQ?C`hoII5d=0]a]mX?%XSNbf=G,pS$XA`hcss6G;MP+#P&*",E#:+?'4/d[)CnR1h#coG$0@-85"dB4/9>@YW:M*E(>n5!K`aG!L=>u1m&fW)OGf)URhdrU%D_X.N%''KUX4jaE!&p,)p+Oa2[4O151V;9cKZ3=WM[T)+iJkZMD8I(JL4LYTGtmf3c[cgq=jb0`/uW1,+ASE[;OFHb5H$?b2D.rb%C,!LYJq$ep#s(m0'$Rd-YrMAmTpaKWXT7W4OsG2&I0LH;HcSt\!i&WTAK"f#jMl6RaHd*`d.D1lV_M.R8.).D+2EXekTAMe@2ork%_ksds?m0\j$,PqVZ9k#b7fm^NI03*rbb,lsUm?#?lQ_s%@`o!(&/"YP=tL4>i(OYqf*BjeE$,`4@s0@qUc;(K[`hKg%8'S7ZB(&3%`2Ic/&Jg<PBLcEe-LJ?_)J>gj!2FX=M^Bjf*i^4<8m$/d/-L4W&@HU6,@WkC8<22jc7(]`8b<o\k.?n]IipuaH>!Yu".ctl?F3Ls%$B/I%o$Z#O#Y7*!?raW#ra';l7G#+gNr3Z(3U<lK#S(e`^hN2jKu/!)R9k)*2&@[&3*'K#2n<k:i])B^FY>d5Q)5^U;\S"&@MFTc%q0Y5VQbsB@$<0*C)N&,1\_Qh0%%mhb87n!>p:e[_9^%g4AG@U7l=Ye&dmEa4G?SW&-#(U(c%"g*7+ZZuXeG@!81qm"Jp&b&<X7_@%W7L3Y92sBU[SuT\^<$.,pF@!5%\ZCK"X5'JYWK_8<(NGJeDsAAV$2r[ThGQKR*8337Ip@#<9eRn%-+7ZM6%!0`,Q+Y!G]R.P%(=i%,N_Vr^T0iJKrH0fZ_I0!!k8<<ILW>F"t$"$Wm'7[gsK?.6iqOfRHX-.9FF93[h=t2[RMsDT(4TSl"o\QGZk-$7s%uOhpQHR>S9^s%6R[]Od=;E+ctGZd5ouNc'9Kq/5umBnGU+K)LiN]ea_GJqVLMuFY(4`9k%Re*L,0'qeP3?0]dMe,*VGg3)4?#!'uFEP=%GNY+SE33%+rX0["LntDn-KHFYc+XR+QALXi!g$i0SLE\Cas4DP-X&')nqq<"A"p-d(&r)0UTWhWa2."@ipe[1mdKsB.I'Y8Z7)Pc#>\dNjNAW%=5$80$R-_`#`>Y63ZKCo**PC1:i&%qEZ8GHe2(XZkF`]a^/[9=FLY.%"dLQ6(VZfColt0",7PcX.7(;6+UY_faM)Y[b[<424V08C%968G]&ZF:eblF4G."-W-._^#<<8C4JSS:D?9/8*)ZpZ+B#h`*DY;kO=RZ<3rHO:0N[D3(\<*($)<@P_\TWFl6.hf%BqR/([>u*_@%rs`d*ZB?X-Yq4u:&6G_D$DYpCR6Hf8S<iW;>$=qJMST)*LC]f9qh6X]]bHjQg`GD4>e&5c=(iCs\0!Frn5gP;ON87OS\;C3JRV<<%1U`D[6g5do%7#;VC6I.]Ten;5ZA)>t/8[+QMel<-$KJkQ#)eAU:d%M,6(C.(4'4EnnPM0S;`-D/`04qFi2+B^/kuH)O/P6f@[o]:%R0D[11L_(%$m?SXU$@!KeA[f+jNL:8U^bWWeY[%`V5)'oR':=.oY#4jjIf\BdPHhB,_Ep`Ak@Ws-u`phGj+./h,)8p&I0(DUIPRM%$U8h^@$F8!YW,sU%K:f^&6.thdZ&!9VNGEo*FQ'5GpXsYV/;O/bt0oe7"D'^2b#;)?tV%6=?p3VHXu4)L.4g03oQ`!'$hTKA7B5u%Kj`m_J/ban/99Mb:iPe\7"u'Th(rZ@"JH)E^e@?bKF)t6[9?Ie6PU?N(agj4O>Gae)G7=i!)K=`J@_/Go7n1Q)G"lp^_e"6)AJOe%FQ((WF?iqH+M9NW!'lT=eeJmd%giX.a$im#b)O@P_1<c,2(@-eAMo/;eB+=r6dcoQ!M[hU0KOkNN\Sol:i5?,R%@KhH(Pl3s&k12%o.Q?lP5!j<C[XFbZ+$(JAqCW/b3?^.]`H/FO'UIGJ%=$To_fF\mX;A:s6nNWL?%TlWYeY>,&7V/q,_fkL1q:I[98FL&k^');r06R%7e!_40oMdj(t&Cd.KFjr(Gk-<gLF[UWWP(Wf/0asS/-r<J`8n*7<pZR`lbF)'bY+mS(fg)O?8@(&/m2/L=8ggU`%!Y$n#pc(hT<`%=*iN$C@2\(ko+\c?5Wjt4@&D;hUdp[>_?os1Ao-iC*K;U5r@>N3fl##]H[08D3;QJN4-a\S>,_a1-28(eV]d2`AYSrLDm<O[5Qu6%Y8@Yg'IkU5TJ@9j.IgW&H&b@V5c&0^&;_gKT%'EN;UPP&TE$Ir=?)O#Fo7.MhW8@o)BaiBM^nlJAK*8IL!KUe\tstJY]TB.`CbhV%$9s)=!=&9+_/5oMe>@!c<+'$=d'/:LI2\_SJ`U`-Ma3(Q_FBo8HSsElDRo!fU5jK<D/@L'R:V3bKQ<5oDc*TF#GLmr`'4J76TGE%%p(+*Q+Y]cWq7^Up[BQ.?7Yo&NEG3Z<J1gXATO#Y0[;?'>a`nuiI1F.q--"69ee(G(qr\6>dEVn0O&;ZXW4\r-C"-^;3+f,'VA_;4%&*F.bSC)NF[RF76:mn';((%e#pl)/Rg.H3DGa)%S=R2;fd5&CuOM%=Nb^11]JI548HMY3A&N`+KXshO>*Ip"O*P6#.PWc%4bpGnJ%.q5))mDM('._)*&>&Y@jZA.Ro:2a_QMbQ1FE)gjM@`iNFO>S:9R+[Mf2WgpFpB0n5o'9T*NA8NGE+K$O'HNo:W=.mkD/3VVDUc[I%iuUlO6CC@:LkC->'3V<-c!oXQCnD#.q8dq-?ls.%J5rPq`?JBWo+)3EQ^I\\)hCtj'FL(BC&1a4.S+9sqV9T`a=o^8W4mGP6I(3k%YW&,L+@ApLWNAPrBTRd9&!!VrKqpo6)?S8_^E%!i>$ECTSY-f-4::REWZ#f;"KLW<$jVME\+TY:6=Co#IYJn9NU7$$[56]fV25?m%8rM+6+51+1E\]*nBL%*gN?A=**Nm(Hn2<0G-%)uk99&Kj4+(+#[D?!=HaPO/$o;<]m:Jgr;%:RSmn,uoTTl[;c+;1KA"sX`7#WXa%[V[-bf/CuVJorL)]#@[>lZeEQg0do8@=2g3'Zct!3['bX8$to.3%/jK(?rnQJ.E!\0nDl700l.UU"<I\)@MP)k_%q`;.4-SBr?L3%fc`bYf+"Q%UJ+-K52R2E^qrH4B6LK;TlgfG;]?[.LJ%Y"L63"uQiM@7b*OEN>bQ:A1_OQ(/iKh,f-6nkrQqMY,YTb]@@BBs4=Fqr%)Xh>%"Vl,UDLuR@&$(Z6:kCk2\2r5]H!1qAc`^pO2r1*I0t#&e8Wd]-^GN%`Sm!k=aN>mG4),'B<1AbTbiu&2`3a>Bd4:[,MTXYU%Tf";=`W;4''N8+cPdkf\4.)%=@eGhYNUT!K#=908],Y[G2CR$CX.W9MG+d0eb.e;be;6L?'a<Ng\.M(QM9/B'6?C5q;[=,g%Y/>J%ej2=Z1^Ji1"gJA)9rW9Z,&f"S7<)mX!'UDH'nIi1eY-.\>HY8h[hB6IljfktL1l+=a1$s4U/-M2@Me2SQ^jdT!"&lf%<>g08S&\n%eIJUQo#M/m$KH_K@\j</*t>4W=N.(VW"=^g1bNim;:XEd-4HSB;q446DrSSro0E(Mj9A'W3gMrBNTqT0R9I.`b(N8XalJgBJY<Fj%9bg:\?)XadomB+uMu$^MZO.&>nnanRTo+.CO#W1\$sH.4?nPo>1:N/FP_99*UnioBD8uIPpD:!8U(CNSV,@"2%NjGeJI0^mZYtP%%M%EE#N@_ZZCiG'Xb_i6J@cR<ZoDZgBA@;atTNXAc>7Xs?L9a`Uc'goGoFJ(C:f':sQ3jdl2)a_Tb_&D`R"iHk*WJ`9Y(aJ!-3\;q%XNab1`cGgnS<"R8N/1lk7a^M`A!`mjF<B"lLf:*a-JZA06%NiLUC=/-%4ro/#bs]&?gS+=C-?R8i(!Z%\!%b0%t5;(NA+=+a58/s%\:mX?4RSEqU*-Y)*>04O7M<^\k&YhiT&peB4>"0>o*\2G%;jn6pi#\E2tp>PI@bndQ665u`mo(u8h4#4OBZO-'`aadmJE+3is/P<%`?s(i!q'7HDueb8Z]@3fR'6i"-1ttajMWKeZG($j.$t:+$MU/oFgJ=I:S9MkC=+o5>EX:8OU2gcgpXMU-A4pFDZoh>fe6$iT1$S?%#GuR=N>6cC%<uXna+47Ik`nk(?7(ljdN9BJP:PkML68DQ&Ip.&@:\XH[RhAqdTC)j0\^K##R=]g%VW]&-4O-.bVUFob9lQBP%s'f%'"Jehq'%^Hp(4c[Cru`Nd5T09D&6QEMkWpJmk;&OQ]p8i/Cpc8->+:P0M"LG8pY>[TN*.`?h$<l$)Ocjkg?-jKiKT6"KXc1*s6rc%f[H'WMq0tUVa\*GP`Bc,Wii)C`IN57%m7q1f%SU^k*f_W!K,fbVRIFW=rmU\iZQFGYa/KQ**?jhR8G"lm?YssEIkC3e>aZ:\F(a`%.]PD)L'T<2=*"4lI"3\,(J8md<H<Q?_1.:NSLP:S=V*]Gg,dml:CLS0!<mRBZo$)'i>D#l<>uC;4191`;?KS:!8nfh8WM;R;1'Be%d!Cp4B[Z$_0;itTD0&YKoYFR;9.:PWaf[Wt/<lp=FL'TT)jY%<+ca=nksNS\KS"k@=Jm1UE^bm'UD7d1Z!\c6&'!I9(5Xo;hE7$h%_'5Y5rj3[HT_H.=)/FP9bpr*FUNsX:k-nu?imgEYRr!.FU:/#b^60Y@j,Z3KZ[akS%.Z&Ke?jcKbtl74O\@toYldN'Z>nBVU2TF'%7Gb"uL9@#%,*2V]1cO#J`Y;SAT:SJp&803^]@bL#B*p_SjG@md\F3=2So`uS5(KA&W/R20\2PrL'Xa!lKBjC-j2t7gM-W-(IG!8F%qdBr%`b1c2N^^Uh#j,d(Of'gdine_f=no:4B^+QSdm]h`@%sSrbqsD4#PIL<l^DIh$lCt%UepX3ZJ:E4ZlBg3mk;.F"?u[+/?6`"%b/!OcpjhKMF$W4t+8G7QCjckO&RuE::-p0TQkIq(6H]N$.%)7=_qS$I8Pi`$=XAUm]UCUDV2c89QaGS%S6f]-YFTA!(/Zf"?(dMg%'k)ra0J$_o:,R\-X?7&uW(GHbL/?*t05,mJ3=:[6OHINERjZVq.=6G"5+pod$!\Uq3fn#ds/I9O>cZhQ$S8'(C.EC4L*eLI6N+UL%l'<+0B4X$O)m_d7:0SL?obq)RmhTM7q;3/&pA/6fbY$%EB8G9+V:Bu8%Yq!J>#o3Ue6Q]LPBC_/.r:O1OO-:'=C2WA^8fb0K(jn!%UJD1O$rGd8&OV:FBsfnIdkX_o4uQI^b/=e5J/$dF(EM&hLl^@3\Tc'N%-P+Oa5Z/]QBrL.2@fID4EGhpbbVdqW0-E\X>[fU:^MT`%&C;8pG18;T"5b@[NATZcpB7:D[Hto:1mM<H)n+j/>;FV#?r9d!KGXsQ]OJQ85e%E[iZ/mEZRDJsg&OBF'H6bF-(;4^WC$AO5:e0X%XVTc&hG%m>E5cM0!*ud_/.W=)-F-aH:7-&ZD>FLM3=b-Z3rXXc2V1Br0XcI3N1P/7'BS5\MDbZK<+NDg<$_t7Q8]$*=%2lhK8"GM%M<DnCAe@Uo:d>[aVe-_&2Vmj1MJt6@<L`,0aN.f.:tAg1nFrVT-qdY(k)Ao'7Te%>Np?+R^pS5/G>FN;8PWMme`2@*lIql0?!1RD%!#iaF2HNaEr$lY62;]0jU>(C<18Pt25>d-OTOiF!d#Jn7477&V7/:8BC`o1cE%.kYlNrh%6;.cA.Se_Sg9(rPoXs:8(DOV5E6;t@%'L^=L,/t1h,MH0H1Yo:>9c"JTXjsGW)"L_j_(NVL+o8AW_[r8-qFJOV=@ifh"/5;&*c'I[%h:%).DDT'br?5o0lW(#"H$pWR:S[H%O2:[&J3oNY.p_TFL4!%JYY/E4JrVmOn3^X*BMff2PdDXuR9:?A^)Fl>0rDXMWSeRfZF.,4U5.bZOX6_"Pb;frX;D/JAW[lVW'ih3%>#i0kU!=O6Q*SFT)[@:`jTTF&$hU+`%&.n^.U""rd<q=tO*$u%]>ZmsUr3.9EUA2-3;"G%-"sV%]F&<Z6^f4EY<ZDXL5IYO.pQU1%#@D7oItXmV^Y`a:!\>9U!>p^djC(SH.U5WK(M9/OOpfRB4:F6F>LaY-!G6%OD-I`[mnQ3G)+.7_QiOc:3KUX-"3;]BdY0sr"_*Rt%3=KVZ,DIbV+Ae#n^QRt-(&q$D9>2"21ScRVH+fB?dhN3!dKaO\SNqkHZYKe3o\.07&6m=VjCjX^&CG*$2eMS+?!O$+8N4/c,Or&u%?IY`dOUo>r^Tf[\TE#[b7An2\W$g^;#I@9_5-f0&m"=#p!>%;t7OBV5ImUeQ$Ha=/;VB3ck_Cn\^amfn#FlAnMVS<Z1OY(e5Njj]%I^lbm!ju36)+.G!8$qVNXH>kNIEk+-g30;JHuNTF:uI.E^tNP=lVL5@JWaq]^Tqr/+ahdn0VC$GI+4MP)@M6]d6`U./:N[BmA#]_%V[m_ds!tM*df2e=1cH5D55!:XqhGf5Bu)D#GC`I,Zjn[<>M+fb<jMGA5-`1FC5^`3A)X3.gYT2i8S,,ABZQ>K7V\[9,B<I[(3.o8%$d1X_P>V'$Y"OU!*\KI=.[fEigcsn`q%HY/l-+1q'Q!tUiG1=oI[%C?l_2plX(VisAZL@<Yn2u8.Lfag'lXS00.80e'!Qr>-PWmT%I#k\e!\cngL%pb1PQF2DJJdS.(MDOloX%ibVZ.j[KmH\"M$3r5CmN]l7A)iLk,(Y%+<eOn_HMi!8?j,SQ$af1#Eb#-OGRCKq^OoI%JE(uGQOA>fU%BHe+Nb>f1c<[B5srA?f$LM"`RigH!5?EeR5*VN,:>)g4Z)@q0r-bq4Vg=gJNe\0]Q:"R&bM"FfKa?U-$s#(,Ck>m%D&EY;0N_tOR)%?k5eg4l<C$9.BWj8fpgFCLhp>pM)ikD>bL+ZTrRfK6Be5!qWgJT`a4*`2A>=j%SG#@b(m<@*eo2E[b>R3S.]0?p%hdAYkmB]hMLA'i$NWo4P'1"B%.YBKEXGHq@PCbWaIQ8\'3WVGL$s<e:p)bH*K,O,#>^#C]ZnSnR#El`pM<h5O`[5c;[7P'',1?r8%;i3\)c\J`H>oGpq',,.sD.f8m(D%VtoGM*'%D//f-0GgG0;&)Ge.[/nrk%UNE<AY12(#a;N'Ul,$lX7KT_DnI*@f0In`^Z!i)V^(%l8Y)@Q>_*9@RI7\G#2T4$IcU9M]o'"e9`JJNN/`;L"A@N)LXqqo$A0b3e__C.>\Q/N90[AJ*UpO@8p67ZP,F7s0S[R]2gC.&Tt*f%j;q[*dsLHZ>Z&S*J<=`rPUq*,('TE=Bn2h4R%F$I@GLq#X#jrY&gH^cp'3O\3gGC@2IpHO[Y-aU)`fsBT!>b.bK=r]ZcgG"SaBIT%Z.^@=llJ93*WhH/XOu9]C$d^Nr_ULr;9dT&TK]^Vhm$8^J.C(MKue4X#B0GS*P($La<a%`*a2K/99Y=gI?nO\D=2oUp;i/a)74D!%:$BE$5L7:d:H^kCSE)].9kTiF?+bdTPoE]?Al2/*CNMTBD<hXQ/?4&5&\o6jmK)hCWV&O_>.uS_Qq`W$2(WN9nmkO"gE<\NJ-pP#%3oW$&8HW3moWJ^">UOjFjPFo%TuegXMVc:+^Lq19%Q,@M5e*7;M6&Pg!Hlt)Xksic:hQO`H,P\$obeK#6H>7%%I4rb[`0J-WIul+%.I38$f.1;Y?I<#Z&/CX\gEC+Q+[6D./#-r_FoVn9R9E>fK0_^pjPDT:[5,"U[D3r>4/;:YDIZP%6p]N]`[jL2dgsu>=VhT9lk-S\%.of"aa9;.B(0Isr:go_S5r?6WO`o_f-eTEWW1hrXd*mk`mDau5quS"jEb!oOCO9>W8;$:?9oQJ^/K^3[ml>,7U6>IgNRm?;DYQqL%9JTeX-u0_D/-!1=<#"+LV$;$IcqHe@X%/d6/ViFKVGlec*M`HA?mYCH.kW;j85Didg^1^K&penH%mL73o\)F*D4?Z4(UYjsLA4[-%Q`7?+)$j,"FIfuJ&bnmJ(#VgLdDQ:L_Ls+P5mJnRqm=43A)#Bbn:@8oHJ*EmKVD4;UpRr9cUrm0R)Z0&X@]?sq].%r7qe2rl=JDj%&I4S*mc^;jr$1*RKgS[=`OLYI[0QgfWO5%=;.l8m$Lq\)qsT+JZmH0TBhFIT>\e&=TS^%D%0EnY-8_@E/hPUhQmum\GROUCK3]n6%&$bMU<o&]Q1ZD?$'8[\4hj@)LjAR"5\'M&[oWINJ44A_rR8qa61f<R5Oo1;FI%3YiJG`/qi8TgZT>ofK$gionn<8jJCN7,-^'-XK%3Q.NQ?lRF9>*1&7[8gn>0Kjn$K<2gk)VgN>K1p)$6KJ3%RW(M-<Ga*^'WO\A&ens"kT?3#Agm^!']aUpYnTRcqjtq$(hsqV8@H[?%%G>o=1jO=\bAMp\`p9N`/W0_@F_,\NZqtTa$-Ztop$PR9<`)\M-.5,L`M>,*QBimuPq(BibUbYMM(F+q_u\JmoU<PqIb$`s#%c7#%Cj:7c@q0@L0(r'O617k,SVF0\>^pM9>'N$#26+)_'KM(GAk(<j@Q;';&a%(n=]_PQfE!#A`[<1Gd`skqLhA;<jL*J\Z2(5]>U`CJ%at[RD((h,/[(ugY-F9&HYSI#J!f`)2OLjjKn#&X&>ts_%AVPS8#d0:<bI$=/7anS>X6A$TmIgr2?juk><R\;Uo[i\nel&oHPh:S#%N\-jV?jKeKcj1HPCMd3Z#)2M5<u&-A*#FVe8,9_sVcBj8Ka]2*l(5/k+2BU+YUf]m8WfF3Z\NWPcgjj;*Wd)F>o4=NGcMmTb3/g`%M7$uWGIr=ELbPV&?H_jEI3VD?C2;L'5icd'p_<E,EnV067@AeZCPQe\r'7e5&lq,A&2>K.YU^QP/m;!l3Ufl-i-'o2pGbcRQSC:@%i=gT24M#?^`P,-VkA2l(Ye(9+#[l.7CK)2uZ-&P;T4CA<%D54[WI^oS3\Feg)quj8L%\JnKh^A9L.3s.?^%_%Ynit^123I1nP&g3%d88/'S,a@0"1"%4':QkTPmC*P#,u"P`R2r-5SX^9@M[Xr98)MGbn!,U7$O0ga!OU0%J?UfAXhKCW9b<@$aR5dZ=);tKa$=rp@o'B%BY(HY.O1qqN&uR'V_mu,XtNJ`%FjUgJ:fig76>hgDHQq7I<q:HW+G3.3I,^FB6^7egW(;uPS&laFGu=`h6n+m*s\o<IEt.bX9aWr%B81DRcg3acli^d^"&\AEBVD!JPROogW%udj[-^Q!g"UN"*b(;<)d2ZD=C]``nf@&ajl0I)!G`EJ';@B%JCfRbEb>8f##tsTYaX6I%>VFf*YM-A;3dV\XYNRA[Y\7g4<i%pPlO?LFiT2h3P@G!k!R:%.i0%OR.Jd:EGbtF6B]#"Hb57AMk1m!q`jSs"?%][ha1lAIBsXe)%1)c[SBp:.Z9_cNaf&.RSIB4L-BtH>IT@lenV7!_1"ffJWVDu:olbodWWnW&KLiqa4ENm?\1=MqN1E$k1'O,$2.bgC[A=.p>CSuHk%1k^roc15Q$X<SB.kd`WY>OCP!!;OWhf+@$,m80cPS!C@0p+r$&oH;&$V<h9PlYIT9<%)X93&J4fKKpY]%M$bd_q%R6JIp>QHDmMo%rNF`%_2EG%ZF8*0-B#!['39t_W2DD1eb]HX$ce_oCY=4I8k:G57I0h5BV'0tQ@<O9N[B>u#d!0s>oBL.;%b<GgE5D,9N0'4qU+6`%JeiNM8kjl>X_Ccdpe3GI1QMeWqD33!7k=mYJU47G(j0huFQc:es3-91LJHjXVkR@imtBmD3%4s`_/Obh53biAEGK5XZi\rT&g5Gs%qP7s8dGLX?iQ?9!#H%b+R%+K9O%N%UqmAV''0cIqI"H#"T=6@1g;6F^3'eM>>):BIF00nOK,GY+O+n^=&2^X&^2:&W1t'S_ZYJ_N%F#rG=$\=';7d8CYNHcPb#Q`U(N'1:?3V55eRgZ!ld:e\gQpY*/@H];F1[f"I%eJ$P,gj6RCITHh\SB,nItYOWb4KUs*Z2#M+3:R'%2jQs_a7t3eJ+M%bS>hB>#n9W[:q^.jOHEN-RE7+?+j@GtHpZjMG]ICIqroEUr!;N9/P])`p+-SF#Xm6^A83OrZM43T#`S7Hd_Si9%P-L'%Cg8iOHS=K)m&AT!BRRiX'k=G4A.]U$QJFWWNc'f*!:R3R^3hbYBR,ThFq/u&j&l5gXR9fQg?kN1Q5*+b'H]$R^aiS(UgL].%/>ZjcY[P"1ldFt0@h)A:V`)ounO<D,36p=XZAVAf#gdqQ'&M[h;pTNmU3$J>oM'ZLXKE7m7QFEHB\>_Z*ie*''.5%@*5jY_?u!([%fo&kB3VB(g2V8I-D4Wp%AN8?*@=#EI:k.d,_KZX.\Y+>Wh5qnG7SiD=@-GM_%J*%2f'de[><bCKSr7kKI2?#?9l%:;m7-bm1!@'7%_s2Sl@K8M"J;G<h*Mk-CjY=DE6qlO^I3bg(=ebCs,uh&pSfU8C=&pV/==Skm$3QG-oN+.PB`3C)88U6VftoAh(-VBH&"qC$V/08*%RhjLRUH@'Cc7[q1:TeV#]<h3KA+/ErKsPF\Y.`J4Yda=@F(9.I`W"TGNQ&<mD7$+mfTk>F^=_2m5M4ZD=PSD:o3[Ht-%5XCZe)s!%?2/n2HrD^~>%AI9_PrivateDataEnd